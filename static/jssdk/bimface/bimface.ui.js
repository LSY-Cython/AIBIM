!function(h){var l,a,t,v,d,m,z='<svg><symbol id="gld-bf-ground-selected-c-md" viewBox="0 0 1024 1024"><path d="M85.333333 769.066667l426.666667-85.333334L938.666667 426.666667v512H85.333333z" fill="#227360" ></path><path d="M810.666667 256h42.666666v85.333333h-42.666666zM810.666667 426.666667h42.666666v85.333333h-42.666666z" fill="#12151A" ></path><path d="M196.821333 413.141333l199.253334-243.498666L834.133333 213.418667l-4.266666 42.496-415.317334-41.557334-184.704 225.834667z" fill="#12151A" ></path><path d="M832 234.666667m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#12151A" ></path><path d="M405.333333 192m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#12151A" ></path><path d="M192 448m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#12151A" ></path><path d="M170.666667 469.333333h42.666666v85.333334H170.666667zM170.666667 640h42.666666v128H170.666667z" fill="#12151A" ></path><path d="M512 768.853333l341.333333-205.653333v-85.333333l-341.333333 205.866666-341.333333 68.053334v85.333333z" fill="#12151A" ></path></symbol><symbol id="gld-bf-ground-c-md" viewBox="0 0 1024 1024"><path d="M85.333333 769.066667l426.666667-85.333334L938.666667 426.666667v512H85.333333z" fill="#636870" ></path><path d="M810.666667 256h42.666666v85.333333h-42.666666zM810.666667 426.666667h42.666666v85.333333h-42.666666z" fill="#A4A8AE" ></path><path d="M196.821333 413.141333l199.253334-243.498666L834.133333 213.418667l-4.266666 42.496-415.317334-41.557334-184.704 225.834667z" fill="#A4A8AE" ></path><path d="M832 234.666667m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#A4A8AE" ></path><path d="M405.333333 192m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#A4A8AE" ></path><path d="M192 448m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#A4A8AE" ></path><path d="M170.666667 469.333333h42.666666v85.333334H170.666667zM170.666667 640h42.666666v128H170.666667z" fill="#A4A8AE" ></path><path d="M512 768.853333l341.333333-205.653333v-85.333333l-341.333333 205.866666-341.333333 68.053334v85.333333z" fill="#A4A8AE" ></path></symbol><symbol id="gld-bf-space-selected-c-md" viewBox="0 0 1024 1024"><path d="M196.821333 413.141333l199.253334-243.498666L834.133333 213.418667l-4.266666 42.496-415.317334-41.557334-184.704 225.834667z" fill="#12151A" ></path><path d="M832 234.666667m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#12151A" ></path><path d="M405.333333 192m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#12151A" ></path><path d="M192 448m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#12151A" ></path><path d="M85.333333 769.066667l426.666667-85.333334L938.666667 384v554.666667H85.333333z" fill="#227360" ></path></symbol><symbol id="gld-bf-space-c-md" viewBox="0 0 1024 1024"><path d="M196.821333 413.141333l199.253334-243.498666L834.133333 213.418667l-4.266666 42.496-415.317334-41.557334-184.704 225.834667z" fill="#A4A8AE" ></path><path d="M832 234.666667m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#A4A8AE" ></path><path d="M405.333333 192m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#A4A8AE" ></path><path d="M192 448m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#A4A8AE" ></path><path d="M85.333333 769.066667l426.666667-85.333334L938.666667 384v554.666667H85.333333z" fill="#636870" ></path></symbol><symbol id="gld-bf-projection-selected-c-md" viewBox="0 0 1024 1024"><path d="M85.333333 769.066667l426.666667-85.333334L938.666667 341.333333v597.333334H85.333333z" fill="#227360" ></path><path d="M810.666667 256h42.666666v128h-42.666666z" fill="#12151A" ></path><path d="M196.821333 413.141333l199.253334-243.498666L834.133333 213.418667l-4.266666 42.496-415.317334-41.557334-184.704 225.834667z" fill="#12151A" ></path><path d="M832 234.666667m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#12151A" ></path><path d="M405.333333 192m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#12151A" ></path><path d="M192 448m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#12151A" ></path><path d="M810.666667 469.333333h42.666666v128h-42.666666zM810.666667 682.666667h42.666666v128h-42.666666zM170.666667 512h42.666666v85.333333H170.666667zM170.666667 682.666667h42.666666v128H170.666667zM170.666667 853.333333h682.666666v85.333334H170.666667z" fill="#12151A" ></path></symbol><symbol id="gld-bf-projection-c-md" viewBox="0 0 1024 1024"><path d="M85.333333 769.066667l426.666667-85.333334L938.666667 341.333333v597.333334H85.333333z" fill="#636870" ></path><path d="M810.666667 256h42.666666v128h-42.666666z" fill="#A4A8AE" ></path><path d="M196.821333 413.141333l199.253334-243.498666L834.133333 213.418667l-4.266666 42.496-415.317334-41.557334-184.704 225.834667z" fill="#A4A8AE" ></path><path d="M832 234.666667m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#A4A8AE" ></path><path d="M405.333333 192m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#A4A8AE" ></path><path d="M192 448m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z" fill="#A4A8AE" ></path><path d="M810.666667 469.333333h42.666666v128h-42.666666zM810.666667 682.666667h42.666666v128h-42.666666zM170.666667 512h42.666666v85.333333H170.666667zM170.666667 682.666667h42.666666v128H170.666667zM170.666667 853.333333h682.666666v85.333334H170.666667z" fill="#A4A8AE" ></path></symbol><symbol id="gld-bf-third-person-lg" viewBox="0 0 1024 1024"><path d="M592 32a112 112 0 0 1 78.336 192.032L676.032 224c78.656 0 125.312 55.264 132.48 137.28l23.424 211.168 0.064 6.24c-3.168 37.184-26.24 61.728-63.84 61.728-12.032 0-22.4-2.56-31.104-7.168l-0.864 278.4A79.424 79.424 0 0 1 655.936 992c-28.096 0-50.336-11.456-64.096-30.08-14.4 18.752-37.184 30.08-63.872 30.08-45.216 0-79.04-33.856-79.04-78.72l-0.064-280.64a65.248 65.248 0 0 1-32.352 7.872c-37.728 0-64.512-27.36-64.512-63.68l0.256-3.936 25.632-206.656C387.2 279.36 427.552 224 505.44 224l8.192 0.032A112 112 0 0 1 592 32z m84.032 224h-170.592c-64.48 0-89.056 51.392-95.712 113.632L384 576.832c0 18.016 11.84 31.68 32.512 31.68 20.608 0 29.696-13.024 31.68-31.872l32.576-194.496 0.16 531.104c0 27.072 19.328 46.752 47.04 46.752 27.68 0 48-18.592 48.416-48.096L575.936 640h32l0.448 271.808c0 27.072 15.68 48.192 47.552 48.192 27.712 0 48.288-21.28 48.288-48.352l1.6-529.504 30.72 194.08c2.592 19.264 10.976 32.192 31.616 32.192s30.208-11.776 31.968-32.448l-23.424-211.136C771.296 302.912 740.448 256 676.032 256zM384 864v32H96v-32h288z m512 0v32h-96v-32h96zM288 544v32H192v-32h96z m304-480a80 80 0 1 0 0 159.968A80 80 0 0 0 592 64z"  ></path></symbol><symbol id="gld-bf-reverse-lg" viewBox="0 0 1024 1024"><path d="M128 128h192v32H160v160H128V128z m0 736h192v-32H160v-160H128v192zM864 128h-192v32h160v160h32V128z m0 736h-192v-32h160v-160h32v192zM566.016 332.48l19.968-24.96L768 448H256v-32h420.768zM457.984 659.52l-19.968 24.96L256 544h512v32H347.232z"  ></path></symbol><symbol id="gld-bf-zoom-in-lg" viewBox="0 0 1024 1024"><path d="M480 192a288 288 0 1 0 0 576 288 288 0 0 0 0-576z m0 32a256 256 0 1 1 0 512 256 256 0 0 1 0-512z"  ></path><path d="M640 448H320v64h320z"  ></path><path d="M448 320v320h64V320zM651.328 692.672l-22.656 22.656 176 176 22.656-22.656z"  ></path></symbol><symbol id="gld-bf-zoom-out-lg" viewBox="0 0 1024 1024"><path d="M480 160a288 288 0 1 0 0 576 288 288 0 0 0 0-576z m0 32a256 256 0 1 1 0 512 256 256 0 0 1 0-512z"  ></path><path d="M640 416H320v64h320zM651.328 660.672l-22.656 22.656 176 176 22.656-22.656z"  ></path></symbol><symbol id="gld-bf-drag-lg" viewBox="0 0 1024 1024"><path d="M608 224a64 64 0 0 1 63.84 59.2L672 288v192h-32V288a32 32 0 0 0-63.776-3.744L576 288h-32a64 64 0 0 1 64-64z m-192 0a64 64 0 0 1 63.84 59.2L480 288v192h-32V288a32 32 0 0 0-63.776-3.744L384 288v192h-32V288a64 64 0 0 1 64-64z"  ></path><path d="M320 416a64 64 0 0 1 63.84 59.2L384 480v160h-32v-160a32 32 0 0 0-63.776-3.744L288 480v160H256v-160a64 64 0 0 1 64-64z m384-112a64 64 0 0 1 63.84 59.2l0.16 4.8V640h-32v-272a32 32 0 0 0-63.776-3.744L672 368h-32a64 64 0 0 1 64-64zM512 896a256 256 0 0 0 255.872-248L768 640h-32a224 224 0 0 1-447.872 7.68L288 640H256a256 256 0 0 0 256 256z m0-736a64 64 0 0 1 63.84 59.2L576 224v256h-32V224a32 32 0 0 0-63.776-3.744L480 224v80h-32V224a64 64 0 0 1 64-64z"  ></path></symbol><symbol id="gld-bf-scaling-lg" viewBox="0 0 1024 1024"><path d="M480 544v320H160V544h320z m-32 32H192v256h256v-256zM836.672 164.672l22.656 22.656-224 224-22.656-22.656zM160 480h32V192h352V160H160zM544 832h288V480h32v384H544z"  ></path><path d="M672 160h192v192h-32V192h-160z"  ></path></symbol><symbol id="gld-bf-rotation-lg" viewBox="0 0 1024 1024"><path d="M480 192h32v352h-32V192z m0 544h32v128h-32v-128zM672 500L832 480l-14.176 160z"  ></path><path d="M482.976 655.968c-184.384 0-336-83.392-336-192 0-97.344 122.24-175.36 282.944-189.664l9.888-0.8 2.304 31.904c-150.976 10.912-263.136 80.704-263.136 158.56 0 85.76 134.944 160 304 160 64.096 0 125.184-10.688 176.384-30.208 46.08-17.6 82.208-41.6 104.032-68.8l4.48-5.92 26.016 18.624c-25.248 35.328-68.288 65.088-123.136 85.984-54.944 20.96-119.872 32.32-187.776 32.32z"  ></path></symbol><symbol id="gld-bf-translation-lg" viewBox="0 0 1024 1024"><path d="M512 576v160h96l-112 128-112-128h96v-160h32z m224-192l128 112-128 112v-96.032L576 512v-32l160-0.032V384zM256 384v96h160v32H256v96l-128-112L256 384z m240-256L608 256h-96v160h-32V256h-96l112-128z"  ></path></symbol><symbol id="gld-bf-room-deletenode-lg" viewBox="0 0 1024 1024"><path d="M224 352v257.6a80 80 0 0 1 64 77.536V672h256.704A176.064 176.064 0 0 1 704 512.704V352h32v160.704a176 176 0 1 1-191.296 191.328L288 704l-0.032-15.136-0.128 4.384A80 80 0 1 1 192 609.6V352h32z m496 192a144 144 0 1 0 0 288 144 144 0 0 0 0-288z m-512 96a48 48 0 1 0 0 96 48 48 0 0 0 0-96zM800 672v32h-160v-32h160zM208 192A80 80 0 0 1 288 271.136V256h352v32H288l-0.032-15.136-0.128 4.384A80 80 0 1 1 208 192z m512 0a80 80 0 1 1 0 160 80 80 0 0 1 0-160z m-512 32a48 48 0 1 0 0 96 48 48 0 0 0 0-96z m512 0a48 48 0 1 0 0 96 48 48 0 0 0 0-96z"  ></path></symbol><symbol id="gld-bf-room-addnode-lg" viewBox="0 0 1024 1024"><path d="M224 352v257.6a80 80 0 0 1 64 77.536V672h256.704A176.064 176.064 0 0 1 704 512.704V352h32v160.704a176 176 0 1 1-191.296 191.328L288 704l-0.032-15.136-0.128 4.384A80 80 0 1 1 192 609.6V352h32z m496 192a144 144 0 1 0 0 288 144 144 0 0 0 0-288z m16 64l-0.032 64H800v32h-64.032L736 768h-32l-0.032-64H640v-32h63.968L704 608h32zM208 640a48 48 0 1 0 0 96 48 48 0 0 0 0-96z m0-448A80 80 0 0 1 288 271.136V256h352v32H288l-0.032-15.136-0.128 4.384A80 80 0 1 1 208 192z m512 0a80 80 0 1 1 0 160 80 80 0 0 1 0-160z m-512 32a48 48 0 1 0 0 96 48 48 0 0 0 0-96z m512 0a48 48 0 1 0 0 96 48 48 0 0 0 0-96z"  ></path></symbol><symbol id="gld-bf-room-dragnode-lg" viewBox="0 0 1024 1024"><path d="M512 640v128h96l-112 128-112-128h96v-128h32z m256-256l128 112-128 112v-96.032L640 512v-32l128-0.032V384zM224 384v96h128v32H224v96l-128-112L224 384z m272 32a80 80 0 1 1 0 160 80 80 0 0 1 0-160z m0 32a48 48 0 1 0 0 96 48 48 0 0 0 0-96z m0-352L608 224h-96v128h-32V224h-96l112-128z"  ></path></symbol><symbol id="gld-bf-minimize-sm" viewBox="0 0 1024 1024"><path d="M947.2 19.2l-307.2 320V64H576v384h384V384h-275.2l307.2-320-44.8-44.8zM76.8 1004.8l307.2-320V960h64V576H64v64h275.2L32 960l44.8 44.8z"  ></path></symbol><symbol id="gld-bf-maximize-sm" viewBox="0 0 1024 1024"><path d="M576 64v64h275.2L524.8 454.4l44.8 44.8L896 172.8V448h64V64H576zM454.4 524.8L128 851.2V576H64v384h384v-64H172.8l326.4-326.4-44.8-44.8z"  ></path></symbol><symbol id="gld-bf-exit-fullscreen-lg" viewBox="0 0 1024 1024"><path d="M256 544v32h169.6l-227.2 227.2 22.4 22.4 227.2-227.2V768h32v-224H256zM803.2 198.4L576 425.6V256h-32v224h224v-32h-169.6l227.2-227.2-22.4-22.4z"  ></path><path d="M896 128v768H128V128h768m32-32H96v832h832V96z"  ></path></symbol><symbol id="gld-bf-enter-fullscreen-lg" viewBox="0 0 1024 1024"><path d="M608 192v32h169.6l-227.2 227.2 22.4 22.4L800 246.4V416h32V192h-224z m-156.8 358.4L224 777.6V608H192v224h224v-32H246.4l227.2-227.2-22.4-22.4z"  ></path><path d="M896 128v768H128V128h768m32-32H96v832h832V96z"  ></path></symbol><symbol id="gld-bf-property-lg" viewBox="0 0 1024 1024"><path d="M256 416h64v64H256zM384 416h352v64H384zM256 544h64v64H256zM384 544h352v64H384zM256 672h64v64H256zM384 672h352v64H384z"  ></path><path d="M820 160H160v704h672V160h-12zM352 208h64v64h-64v-64z m-96 0h64v64H256v-64zM800 832H192V320h608v512z"  ></path></symbol><symbol id="gld-bf-property-sm" viewBox="0 0 1024 1024"><path d="M320 320v64H256V320h64z m448 0v64H384V320h384zM320 512v64H256V512h64z m448 0v64H384V512h384z m-448 192v64H256v-64h64z m448 0v64H384v-64h384zM64 0v960h896V0H64z m64 896V192h768v704H128z"  ></path></symbol><symbol id="gld-bf-tree-lg" viewBox="0 0 1024 1024"><path d="M800 704v-192h-288v-192h96V160h-224v160h96v192H192v192H128v160h160v-160H224v-160h256v160h-64v160h160v-160h-64v-160h256v160h-64v160h160v-160z"  ></path></symbol><symbol id="gld-bf-explode-lg" viewBox="0 0 1024 1024"><path d="M832 288l-320 160L192 288l320-160 320 160zM512 163.776L263.552 288 512 412.224 760.448 288 512 163.776zM128 384l320 160v352L128 736V384z m32 51.776v280.448l256 128v-280.448l-256-128zM896 736l-320 160V544l320-160v352z"  ></path></symbol><symbol id="gld-bf-message2-sm" viewBox="0 0 1024 1024"><path d="M512 85.312c238.912 0 426.688 187.776 426.688 426.688 0 238.912-187.776 426.688-426.688 426.688-238.912 0-426.688-187.776-426.688-426.688 0-238.912 187.776-426.688 426.688-426.688M512 0C230.4 0 0 230.4 0 512s230.4 512 512 512 512-230.4 512-512-230.4-512-512-512z"  ></path><path d="M469.312 256h85.376v85.312H469.312V256z m0 170.688h85.376V768H469.312V426.688z"  ></path></symbol><symbol id="gld-bf-route-lg" viewBox="0 0 1024 1024"><path d="M240 288a112 112 0 1 1 0-224 112 112 0 0 1 0 224zM224 288h32v128H224V288z m0 192h32v128H224v-128z m576-160h32v128h-32v-128z m0 192h32v118.144h-32V512zM240 896a112 112 0 1 1 0-224 112 112 0 0 1 0 224z m576-608a112 112 0 1 1 0-224 112 112 0 0 1 0 224z m-576 320a176 176 0 1 1 0 352 176 176 0 0 1 0-352z m0 32a144 144 0 1 0 0 288 144 144 0 0 0 0-288z m576-32a112 112 0 1 1 0 224 112 112 0 0 1 0-224z m-179.008-69.44l91.84 89.12-22.272 22.976-91.84-89.152 22.272-22.944zM499.2 404.8l91.84 89.184-22.272 22.944-91.84-89.152 22.272-22.944z m-137.76-133.696l91.84 89.152-22.272 22.944-91.84-89.152 22.272-22.944zM223.648 137.376l91.84 89.152-22.272 22.944-91.84-89.12 22.272-22.976z"  ></path></symbol><symbol id="gld-bf-hide-slice-lg" viewBox="0 0 1024 1024"><path d="M618.72 550.848l-25.664-25.664A241.408 241.408 0 0 1 672 512c94.272 0 179.584 53.344 256 160-28.8 40.224-58.88 72.832-90.24 97.92l-22.72-22.784c24.96-19.52 49.312-44.512 73.056-75.136-66.912-86.304-138.688-128-216.096-128-18.048 0-35.84 2.24-53.28 6.848z m-89.728 46.016c-24.992 19.52-49.344 44.512-73.088 75.136 66.912 86.304 138.688 128 216.096 128 18.048 0 35.84-2.24 53.28-6.848l25.664 25.664c-25.6 8.8-51.904 13.184-78.944 13.184-94.272 0-179.584-53.344-256-160 28.8-40.224 58.88-72.832 90.24-97.92l22.72 22.784h0.032z"  ></path><path d="M735.872 668a64 64 0 0 0-59.84-59.872l-28.896-28.864a96.128 96.128 0 0 1 117.6 117.6l-28.864-28.864z m-127.744 8a64 64 0 0 0 59.84 59.872l28.896 28.864a96.128 96.128 0 0 1-117.6-117.6l28.864 28.864zM512 489.376L851.424 828.8l-22.656 22.624L489.376 512z"  ></path><path d="M416 768v32H160V224h640v256h-32V256H192v512z"  ></path></symbol><symbol id="gld-bf-section-axial-lg" viewBox="0 0 1024 1024"><path d="M288 781.76V394.016l256-173.632v387.744L288 781.76z m-32 60.384l320-217.056V160L256 377.056v465.088z"  ></path><path d="M718.4 672.928l-15.52 26.848-277.12-160 15.488-26.88 277.12 160 0.032 0.032z m46.368-83.072l81.536 177.28-188.8 15.424 107.264-192.704z"  ></path></symbol><symbol id="gld-bf-sectionbox-lg" viewBox="0 0 1024 1024"><path d="M560 128L128 345.056V717.12l304 155.04L864 655.104V283.04L560 128z m269.664 172.544L432 500.064 162.368 362.56l397.664-200.096 269.632 138.08zM160 396.384l256 130.56v302.016l-256-130.56v-302.016z m672 240l-384 192.576v-302.016l384-192.576v302.016z"  ></path></symbol><symbol id="gld-bf-section-lg" viewBox="0 0 1024 1024"><path d="M576 160h32v704h-32zM672 256v32H864v384h-192v32h224V256zM128 512h32v96H128zM128 704h64v-32H128v32zM416 288h96V256h-96zM128 352h32v96H128zM128 256h64v32H128zM256 256h96v32H256zM416 672v32h96v-32h-60zM256 672h96v32H256z"  ></path></symbol><symbol id="gld-bf-information-lg" viewBox="0 0 1024 1024"><path d="M512 160c195.2 0 352 156.8 352 352s-156.8 352-352 352S160 707.2 160 512 316.8 160 512 160m0-32C300.8 128 128 300.8 128 512s172.8 384 384 384 384-172.8 384-384S723.2 128 512 128z"  ></path><path d="M480 320h64v64h-64v-64z m0 128h64v256h-64v-256z"  ></path></symbol><symbol id="gld-bf-firstperson-lg" viewBox="0 0 1024 1024"><path d="M496 224a80 80 0 1 0 0-160 80 80 0 0 0 0 160z m0 32a112 112 0 1 1 0-224 112 112 0 0 1 0 224z"  ></path><path d="M580.096 256h-170.624c-64.48 0-89.088 51.392-95.744 113.632L288 576.832c0 18.016 11.872 31.68 32.512 31.68s29.728-13.024 31.712-31.872l32.576-194.496 0.16 531.104c0 27.072 19.328 46.752 47.04 46.752 27.68 0 48.032-18.592 48.448-48.096L480 640h32l0.448 271.808c0 27.072 15.68 48.192 47.552 48.192 27.712 0 48.288-21.28 48.288-48.352l1.632-529.504 30.688 194.08c2.624 19.264 11.008 32.192 31.648 32.192s30.208-11.776 31.968-32.448l-23.424-211.136C675.392 302.912 644.544 256 580.096 256z m60.192 655.648A79.424 79.424 0 0 1 560 992c-28.096 0-50.336-11.456-64.096-30.08-14.4 18.752-37.184 30.08-63.904 30.08-45.216 0-79.04-33.856-79.04-78.72l-0.096-280.64a65.28 65.28 0 0 1-32.352 7.872c-37.728 0-64.512-27.36-64.512-63.68l0.256-3.936 25.664-206.656C291.2 279.36 331.52 224 409.472 224h170.624c78.656 0 125.344 55.264 132.48 137.28l23.456 211.168 0.064 6.24c-3.168 37.184-26.24 61.728-63.84 61.728-12.032 0-22.4-2.56-31.104-7.168l-0.864 278.4z"  ></path></symbol><symbol id="gld-bf-reset-box-lg" viewBox="0 0 1024 1024"><path d="M210.016 612.096l81.28-116.096h-162.56z"  ></path><path d="M530.016 832v-32a304 304 0 1 0-304-304h-32c0-185.568 150.4-336 336-336 185.568 0 336 150.432 336 336S715.552 832 530.016 832z"  ></path></symbol><symbol id="gld-bf-fit-to-box-lg" viewBox="0 0 1024 1024"><path d="M528 260.416l-203.552 110.624v217.92l203.552 110.624 203.552-110.624v-217.92L528 260.416zM528 224l235.552 128v256L528 736l-235.552-128v-256L528 224z"  ></path><path d="M314.528 391.168l14.304-28.64 220.64 110.304-14.304 28.64z"  ></path><path d="M512 464h32v256h-32z"  ></path><path d="M522.24 501.888l-16.128-27.648 219.648-128.128 16.128 27.648-219.648 128.128zM160 128h192v32H192v160H160V128z m0 736h192v-32H192v-160H160v192zM896 128h-192v32h160v160h32V128z m0 704h-192v-26.656h160V672h32v160z"  ></path></symbol><symbol id="gld-bf-hide-box-lg" viewBox="0 0 1024 1024"><path d="M560 128L128 352v352l304 160 131.2-67.2c-9.6-9.6-22.4-12.8-32-19.2L448 819.2v-278.4l384-198.4v188.8c9.6 3.2 22.4 6.4 32 9.6V288l-304-160zM160 684.8v-278.4l256 134.4v278.4l-256-134.4z m272-172.8l-268.8-140.8 396.8-208 268.8 144L432 512z"  ></path><path d="M714.72 582.848l-25.664-25.664A241.408 241.408 0 0 1 768 544c94.272 0 179.584 53.344 256 160-28.8 40.224-58.88 72.832-90.24 97.92l-22.72-22.784c24.96-19.52 49.312-44.512 73.056-75.136-66.912-86.304-138.688-128-216.096-128-18.048 0-35.84 2.24-53.28 6.848z m-89.728 46.016c-24.992 19.52-49.344 44.512-73.088 75.136 66.912 86.304 138.688 128 216.096 128 18.048 0 35.84-2.24 53.28-6.848l25.664 25.664c-25.6 8.8-51.904 13.184-78.944 13.184-94.272 0-179.584-53.344-256-160 28.8-40.224 58.88-72.832 90.24-97.92l22.72 22.784h0.032z"  ></path><path d="M831.872 700a64 64 0 0 0-59.84-59.872l-28.896-28.864a96.128 96.128 0 0 1 117.6 117.6l-28.864-28.864z m-127.744 8a64 64 0 0 0 59.84 59.872l28.896 28.864a96.128 96.128 0 0 1-117.6-117.6l28.864 28.864zM608 521.376L947.424 860.8l-22.656 22.624L585.376 544z"  ></path></symbol><symbol id="gld-bf-elevation-lg" viewBox="0 0 1024 1024"><path d="M224 384h640v32h-284L384 640l-224-256h64z m313.472 32H230.528L384 591.392 537.472 416zM640 704v32H160v-32z"  ></path></symbol><symbol id="gld-bf-distance-min-lg" viewBox="0 0 1024 1024"><path d="M192 672v64h608v-64H192z m-32-32h672v128H160v-128z m64-192h512v32H224v-32z m64-224h128v32h-32v96h-32V256h-32v96H288V224z m128 128V256h32v96h-32z m96-160v32h-32V192h32z m0 64v96h-32V256h32z m128 96V256h32v96h-32z m-64-96v96h-32V224h96v32h-64z"  ></path><path d="M160 343.584l29.44-12.608L246.464 464l-56.96 133.024-29.44-12.608L211.616 464 160 343.584z m646.432 0l-29.44-12.608-56.96 133.024 56.96 133.024 29.44-12.608-51.616-120.416 51.648-120.416h-0.032z"  ></path></symbol><symbol id="gld-bf-angle-lg" viewBox="0 0 1024 1024"><path d="M192 672v64h640v-64H192z m-32-32h704v128H160v-128z"  ></path><path d="M216.736 640.608l-18.336-25.088L692.064 224.608l18.336 25.088z"  ></path><path d="M288 407.072c136.512 23.456 203.616 111.136 192.416 264.928h-32.8c10.112-138.08-40.128-212.544-159.616-233.024v-31.904z"  ></path></symbol><symbol id="gld-bf-area-lg" viewBox="0 0 1024 1024"><path d="M581.888 256H160.768v480H872L581.888 256z m263.68 480l9.024 15.68-9.76 16.32h-18.432l-18.432-32h37.6zM128 224h473.056L928 768H128V224z"  ></path><path d="M336 313.376l22.624 22.624L240 454.624l-22.624-22.624L336 313.376z m192 0l22.624 22.624L240 646.624l-22.624-22.624L528 313.376z m64 128l22.624 22.624-214.624 214.624-22.624-22.624 214.624-214.624z m64 128l22.624 22.624-86.624 86.624-22.624-22.624 86.624-86.624z"  ></path></symbol><symbol id="gld-bf-distance-lg" viewBox="0 0 1024 1024"><path d="M800 480v256H192v-256h608z m-32 32H224v192h544v-192z"  ></path><path d="M672 608h32v-96h-32v96z m-96 0h32v-96h-32v96z m-192 0h32v-96h-32v96z m96 32h32v-128h-32v128z m-192-32h32v-96H288v96z m-96-256h608v-32H192v32z"  ></path><path d="M768 384.032h32V288h-32v96.032z m-576 0h32V288H192v96.032z"  ></path></symbol><symbol id="gld-bf-note-text-lg" viewBox="0 0 1024 1024"><path d="M752 224v150.4h-14.592c-8.704-34.4-18.304-58.496-28.8-73.6-10.496-15.104-25.12-27.008-43.52-36-10.304-4.896-28.288-7.296-53.984-7.296h-40.992v456.992c0 28.192 1.6 45.792 4.672 52.8 3.104 7.008 9.216 13.216 18.24 18.496 9.088 5.312 21.472 7.904 37.184 7.904h18.304v15.008h-288.416v-15.008h18.304c16 0 28.8-2.784 38.592-8.48 7.008-3.84 12.608-10.304 16.704-19.52 3.008-6.496 4.48-23.584 4.48-51.2V257.6H398.4c-37.12 0-64.096 7.904-80.8 23.584-23.616 22.016-38.496 52.608-44.704 93.312H256V224h496z"  ></path></symbol><symbol id="gld-bf-note-cross-lg" viewBox="0 0 1024 1024"><path d="M192.192 800.192L800.192 192l22.592 22.592-608 608.192-22.592-22.592z m617.408 22.592L201.6 214.592 224.192 192l608 608.192-22.592 22.592z"  ></path></symbol><symbol id="gld-bf-note-oval-lg" viewBox="0 0 1024 1024"><path d="M512 224c158.784 0 288 129.184 288 288 0 158.784-129.216 288-288 288-158.816 0-288-129.216-288-288 0-158.816 129.184-288 288-288m0-32C335.296 192 192 335.296 192 512s143.296 320 320 320 320-143.296 320-320S688.704 192 512 192z"  ></path></symbol><symbol id="gld-bf-note-rectangle-lg" viewBox="0 0 1024 1024"><path d="M800.384 288.096v447.68H224.096V288.128h576.32m32-32H192v511.68h640.32l0.064-511.68z"  ></path></symbol><symbol id="gld-bf-note-ployline-lg" viewBox="0 0 1024 1024"><path d="M128 591.104l683.136 239.104 10.592-30.208-596.864-208.896 640.128-224.032L453.696 224l-10.528 30.208 324.704 112.96z"  ></path></symbol><symbol id="gld-bf-note-cloud-lg" viewBox="0 0 1024 1024"><path d="M795.52 480c0.192-4.704 0.192-8.992 0.192-12.384a209.856 209.856 0 0 0-61.824-149.216 209.664 209.664 0 0 0-149.184-61.792c-43.712 0-86.592 14.784-124.192 43.008a234.464 234.464 0 0 0-62.816 70.784 119.136 119.136 0 0 0-55.488-13.504c-31.296 0-61.408 14.496-84.704 40.896a143.296 143.296 0 0 0-32 61.216 156 156 0 0 0-67.008 51.2A152.768 152.768 0 0 0 128 602.112c0 84.8 68.992 153.888 153.92 153.888v-0.384h499.072v0.192a138.144 138.144 0 0 0 138.016-138.016c0.096-70.784-54.4-130.08-123.52-137.792z m-8.928 244l-514.08-0.096A122.08 122.08 0 0 1 160 602.4a122.336 122.336 0 0 1 83.296-116.384c0.192-0.128 0.32-0.128 0.416-0.224a13.472 13.472 0 0 0 9.696-10.784c7.104-42.72 44.192-85.92 88.896-85.92 18.304 0 35.904 5.504 50.784 16a15.904 15.904 0 0 0 25.28-5.12c30.336-65.184 98.016-111.264 166.336-111.264a179.2 179.2 0 0 1 179.008 179.008c0 6.688-0.416 17.184-1.024 26.4a16.128 16.128 0 0 0 13.312 16.896c1.408 0.192 2.784 0.32 4.192 0.096v0.096c58.496 0 106.88 48.416 106.88 106.88a106.112 106.112 0 0 1-100.48 105.92z"  ></path></symbol><symbol id="gld-bf-note-cloud2-lg" viewBox="0 0 1024 1024"><path d="M694.4 224c57.6 0 105.6 48 105.6 105.6 0 48-32 86.4-73.6 99.2 41.6 12.8 73.6 51.2 73.6 99.2s-32 86.4-73.6 99.2c41.6 12.8 73.6 54.4 73.6 99.2 0 57.6-48 105.6-105.6 105.6-48 0-86.4-32-99.2-73.6C582.4 800 544 832 496 832s-86.4-32-99.2-73.6C384 800 342.4 832 297.6 832 240 832 192 784 192 726.4c0-48 32-86.4 73.6-99.2C224 614.4 192 576 192 528s32-86.4 73.6-99.2C224 416 192 374.4 192 329.6 192 272 240 224 297.6 224c48 0 86.4 32 99.2 73.6C409.6 256 448 224 496 224s86.4 32 99.2 73.6C608 256 649.6 224 694.4 224m0-32c-38.4 0-73.6 19.2-99.2 44.8-25.6-25.6-60.8-44.8-99.2-44.8-38.4 0-73.6 19.2-99.2 44.8-25.6-25.6-60.8-44.8-99.2-44.8C220.8 192 160 252.8 160 329.6c0 38.4 19.2 73.6 44.8 99.2-25.6 25.6-44.8 60.8-44.8 99.2 0 38.4 19.2 73.6 44.8 99.2-25.6 25.6-44.8 60.8-44.8 99.2C160 803.2 220.8 864 297.6 864c38.4 0 73.6-19.2 99.2-44.8 25.6 25.6 60.8 44.8 99.2 44.8 38.4 0 73.6-19.2 99.2-44.8 25.6 28.8 60.8 44.8 99.2 44.8 76.8 0 137.6-60.8 137.6-137.6 0-38.4-19.2-73.6-44.8-99.2 25.6-25.6 44.8-60.8 44.8-99.2 0-38.4-19.2-73.6-44.8-99.2 28.8-25.6 44.8-60.8 44.8-99.2C832 252.8 771.2 192 694.4 192z"  ></path></symbol><symbol id="gld-bf-note-arrow-lg" viewBox="0 0 1024 1024"><path d="M352 480l192 192-288 96 96-288z m-60 274.88l-22.016-23.264L768 256l23.488 24L292 754.88z"  ></path></symbol><symbol id="gld-bf-show-fill-md" viewBox="0 0 1024 1024"><path d="M512 256c286.378667 0 426.666667 251.050667 426.666667 251.050667S799.445333 764.842667 512 768c-281.685333 3.114667-416.682667-243.114667-426.112-261.034667L85.333333 505.941333S230.101333 256 512 256z m0 85.333333a170.666667 170.666667 0 1 0 0 341.333334 170.666667 170.666667 0 0 0 0-341.333334z m0 42.666667a128 128 0 1 1 0 256 128 128 0 0 1 0-256z"  ></path></symbol><symbol id="gld-bf-hide-md" viewBox="0 0 1024 1024"><path d="M235.733333 213.333333l592.213334 592.213334-29.568 29.610666L206.165333 243.029333 235.690667 213.333333z m688.128 283.093334C918.229333 487.04 783.36 256 512 256c-52.053333 0-99.072 8.234667-141.226667 21.333333l34.304 34.304A428.8 428.8 0 0 1 512 297.770667c250.752 0 376.021333 220.117333 376.021333 220.117333s-48.426667 81.152-145.792 142.378667l30.336 30.378666c98.048-64.426667 148.181333-145.792 151.466667-151.296l12.8-21.589333-12.970667-21.333333z m-306.090666 217.258666a425.984 425.984 0 0 1-106.666667 13.738667c-250.026667 0-376.96-209.408-376.96-209.408s48.682667-80.896 145.792-142.122667l-30.336-30.378666c-97.792 64.256-148.053333 145.28-151.296 150.912L85.333333 518.016l13.098667 21.589333c5.632 9.429333 142.122667 229.717333 412.672 229.717334 52.053333 0 99.072-8.106667 141.056-21.205334l-34.389333-34.432z m-138.88-316.586666c10.325333-2.773333 21.077333-4.693333 32.213333-4.693334a125.866667 125.866667 0 0 1 125.610667 125.610667c0 11.264-1.962667 21.845333-4.693334 32.213333l33.237334 33.237334a167.509333 167.509333 0 0 0-219.733334-219.605334l33.365334 33.237334z m64.128 241.834666c-10.325333 2.773333-20.906667 4.693333-31.914667 4.693334a125.866667 125.866667 0 0 1-125.653333-125.610667c0-11.093333 1.962667-21.76 4.693333-31.914667l-33.237333-33.28a167.509333 167.509333 0 0 0 219.605333 219.605334l-33.493333-33.493334z"  ></path></symbol><symbol id="gld-bf-layers-lg" viewBox="0 0 1024 1024"><path d="M522.016 544l-393.6-160 393.6-160 393.6 160-393.6 160z m-310.4-160l310.4 128 310.4-128-310.4-128-310.4 128z"  ></path><path d="M717.216 496l115.2 48-310.4 128-310.4-128 115.2-48-41.6-16-156.8 64 393.6 160 393.6-160-156.8-64z"  ></path><path d="M717.216 656l115.2 48-310.4 128-310.4-128 115.2-48-41.6-16-156.8 64 393.6 160 393.6-160-156.8-64z"  ></path></symbol><symbol id="gld-bf-map-lg" viewBox="0 0 1024 1024"><path d="M656 96C524.8 96 416 201.6 416 336S656 736 656 736 896 467.2 896 336 790.4 96 656 96z m0 339.2c-67.2 0-121.6-54.4-121.6-121.6 0-67.2 54.4-121.6 121.6-121.6 67.2 0 121.6 54.4 121.6 121.6 0 67.2-54.4 121.6-121.6 121.6zM128 704h480v32H128v-32z m0-288h288v32H128v-32z"  ></path><path d="M320 256h32v672h-32V256z m320 512h32v160h-32v-160z m64-64h160v32h-160v-32z"  ></path></symbol><symbol id="gld-bf-measurement-lg" viewBox="0 0 1024 1024"><path d="M160 672h736v-256H160v256z m-32-288h800v320H128V384z m0-32h800v32H128v-32z"  ></path><path d="M224 416h32v96H224v-96z m96 0h32v96h-32v-96z m96 0h32v96h-32v-96z m192 0h32v96h-32v-96z m-96 0h32v160h-32v-160z m192 0h32v96h-32v-96z m96 0h32v96h-32v-96z"  ></path></symbol><symbol id="gld-bf-zoomrect-lg" viewBox="0 0 1024 1024"><path d="M851.392 841.6l-96-96c25.6-28.8 41.6-64 41.6-105.6 0-9.6 0-19.2-3.2-28.8v-6.4c-3.2-9.6-3.2-16-6.4-22.4 0-3.2-3.2-6.4-3.2-9.6-3.2-6.4-6.4-9.6-9.6-16-3.2-6.4-6.4-9.6-9.6-16l-6.4-6.4c-6.4-9.6-16-16-22.4-22.4V224h-512v512h288c6.4 9.6 12.8 16 22.4 22.4l6.4 6.4c6.4 3.2 9.6 6.4 16 9.6 6.4 3.2 9.6 6.4 16 9.6 3.2 0 6.4 3.2 9.6 3.2 6.4 3.2 16 6.4 22.4 6.4h6.4c9.6 3.2 19.2 3.2 28.8 3.2 35.2 0 67.2-12.8 96-32l96 96 19.2-19.2zM252.992 704V256h448v236.8c-19.2-9.6-41.6-12.8-64-12.8-89.6 0-160 70.4-160 160 0 22.4 6.4 44.8 12.8 64h-236.8z m384 64c-9.6 0-19.2 0-28.8-3.2-3.2 0-3.2 0-6.4-3.2-6.4-3.2-12.8-3.2-19.2-6.4-3.2 0-3.2-3.2-6.4-3.2-6.4-3.2-12.8-6.4-19.2-12.8 0 0-3.2 0-3.2-3.2l-19.2-19.2-6.4-6.4c-12.8-19.2-19.2-44.8-19.2-70.4 0-70.4 57.6-128 128-128 25.6 0 48 6.4 70.4 19.2l6.4 6.4c6.4 6.4 16 12.8 19.2 19.2 0 0 0 3.2 3.2 3.2 6.4 6.4 9.6 12.8 12.8 19.2 0 3.2 3.2 3.2 3.2 6.4 3.2 6.4 6.4 12.8 6.4 19.2 0 3.2 0 3.2 3.2 6.4 3.2 9.6 3.2 19.2 3.2 28.8 0 70.4-57.6 128-128 128z"  ></path></symbol><symbol id="gld-bf-setting-fill-lg" viewBox="0 0 1024 1024"><path d="M796.896 435.552a292.896 292.896 0 0 0-29.408-70.976l55.872-84.32-0.096-0.096-79.456-79.456-0.096-0.064-84.32 55.872a292.384 292.384 0 0 0-70.976-29.408L568.32 128h-112.64l-20.128 99.104c-25.12 6.72-48.96 16.672-70.976 29.408L280.288 200.64l-0.096 0.096-79.456 79.456-0.096 0.096 55.872 84.32a292.384 292.384 0 0 0-29.408 70.976L128 455.68v112.64l99.104 20.128c6.72 25.12 16.672 48.96 29.408 70.976L200.64 743.712l0.096 0.096 79.456 79.456 0.096 0.096 84.32-55.872a292.384 292.384 0 0 0 70.976 29.408L455.68 896h112.64l20.096-99.104a292.896 292.896 0 0 0 70.976-29.408l84.32 55.872 0.096-0.096 79.456-79.456 0.096-0.096-55.872-84.32a292.384 292.384 0 0 0 29.408-70.976L896 568.32v-112.64l-99.104-20.128zM512 672a160 160 0 1 1 0.032-320.032A160 160 0 0 1 512 672z"  ></path></symbol><symbol id="gld-bf-home-fill-lg" viewBox="0 0 1024 1024"><path d="M928 512L512 128 96 512h128v352h192v-256h192v256h192V512z"  ></path></symbol><symbol id="gld-bf-measurement-gis-md" viewBox="0 0 1024 1024"><path d="M85.674667 939.008h810.666666v-42.666667h-810.666666v42.666667z m573.226666-896L85.674667 616.234667l211.2 211.2L870.101333 254.208l-211.2-211.2zM146.048 616.234667l512.853333-512.896 150.826667 150.869333-512.853333 512.853333-150.869334-150.826666z"  ></path><path d="M327.04 616.234667l-30.165333 30.165333 60.330666 60.330667 30.208-30.165334-60.373333-60.330666z m90.453333-90.538667l-30.122666 30.208 60.330666 60.330667 30.165334-30.165334-60.330667-60.373333zM477.866667 405.034667l-30.165334 30.165333 90.453334 90.453333 30.208-30.122666L477.866667 405.034667z m120.704-60.330667l-30.208 30.165333 60.373333 60.330667 30.165333-30.165333-60.330666-60.330667z m90.453333-90.496l-30.122667 30.165333 60.330667 60.373334 30.165333-30.208-60.330666-60.330667z"  ></path></symbol><symbol id="gld-bf-setting-fill-md" viewBox="0 0 1024 1024"><path d="M791.381333 410.325333a309.162667 309.162667 0 0 0-31.018666-74.922666l58.965333-89.002667-0.085333-0.128-83.882667-83.797333-0.128-0.085334-89.002667 58.965334a308.608 308.608 0 0 0-74.922666-31.018667l-21.205334-104.661333h-118.869333L409.984 190.293333a309.162667 309.162667 0 0 0-74.922667 31.018667L246.101333 162.346667l-0.128 0.085333L162.133333 246.314667l-0.085333 0.128L221.013333 335.445333a308.608 308.608 0 0 0-31.018666 74.922667L85.333333 431.573333V550.4l104.618667 21.248a308.053333 308.053333 0 0 0 31.018667 74.922667L162.005333 735.573333l0.085334 0.128 83.882666 83.84 0.128 0.085334 89.002667-58.965334c23.466667 13.568 48.682667 24.021333 74.922667 31.018667l21.205333 104.661333h118.869333l21.205334-104.618666a309.162667 309.162667 0 0 0 74.922666-31.018667l89.002667 58.965333 0.128-0.085333 83.882667-83.882667 0.085333-0.128-58.965333-89.002666c13.610667-23.509333 24.021333-48.682667 31.018666-74.922667L896 550.4v-118.869333l-104.618667-21.248z m-300.714666 272.64a192 192 0 1 1 0.042666-384 192 192 0 0 1-0.042666 384z"  ></path></symbol><symbol id="gld-bf-home-fill-md" viewBox="0 0 1024 1024"><path d="M85.333333 554.666667l426.666667-384 426.666667 384h-128v298.666666h-213.333334v-170.666666h-170.666666v170.666666H213.333333v-298.666666z"  ></path></symbol><symbol id="gld-bf-layers-fill-md" viewBox="0 0 1024 1024"><path d="M896 406.016l-384-192-384 192 384 192z"  ></path><path d="M853.333333 512.682667l42.666667 21.333333-384 192-384-192 42.666667-21.333333 341.333333 170.666666 341.333333-170.666666z"  ></path><path d="M853.333333 640.682667l42.666667 21.333333-384 192-384-192 42.666667-21.333333 341.333333 170.666666z"  ></path></symbol><symbol id="gld-bf-message-sm" viewBox="0 0 1024 1024"><path d="M469.312 640V469.312h-42.624V384h128v256h42.624v85.312H426.688V640h42.624z m0-384h85.376v85.312H469.312V256zM512 938.688a426.688 426.688 0 1 0 10.432-853.312A426.688 426.688 0 0 0 512 938.688zM512 1024A512 512 0 1 1 512 0a512 512 0 0 1 0 1024z"  ></path></symbol><symbol id="gld-bf-message-fill-sm" viewBox="0 0 1024 1024"><path d="M512 1024A512 512 0 1 1 512 0a512 512 0 0 1 0 1024z m64-320V384H384v64h64v256H384v64h256v-64H576zM448 192v128h128V192H448z"  ></path></symbol><symbol id="gld-bf-arrow-up-sm" viewBox="0 0 1024 1024"><path d="M916.288 681.984L489.984 256l-60.608 60.16L64 681.92l60.16 60.288 365.824-365.44 366.016 365.44z"  ></path></symbol><symbol id="gld-bf-arrow-down-sm" viewBox="0 0 1024 1024"><path d="M959.808 380.8l-426.304 426.048-60.608-60.16L107.52 380.928l60.16-60.352 365.824 365.504 366.016-365.44z"  ></path></symbol><symbol id="gld-bf-pause-md" viewBox="0 0 1024 1024"><path d="M512 128a384 384 0 1 1 0 768 384 384 0 0 1 0-768z m0 42.666667a341.333333 341.333333 0 1 0 0 682.666666 341.333333 341.333333 0 0 0 0-682.666666z"  ></path><path d="M384 341.333333h85.333333v341.333334H384zM554.666667 341.333333h85.333333v341.333334h-85.333333z"  ></path></symbol><symbol id="gld-bf-play-md" viewBox="0 0 1024 1024"><path d="M682.666667 512l-298.666667 170.666667V341.333333z"  ></path><path d="M512 128a384 384 0 1 1 0 768 384 384 0 0 1 0-768z m0 42.666667a341.333333 341.333333 0 1 0 0 682.666666 341.333333 341.333333 0 0 0 0-682.666666z"  ></path></symbol><symbol id="gld-bf-minus-sm" viewBox="0 0 1024 1024"><path d="M128 448h768v128H128z"  ></path></symbol><symbol id="gld-bf-add-sm" viewBox="0 0 1024 1024"><path d="M448 448H128v128h320v320h128V576h320V448H576V128H448z"  ></path></symbol><symbol id="gld-bf-arrow-sm" viewBox="0 0 1024 1024"><path d="M792.256 333.824A64 64 0 0 1 877.76 428.8l-6.016 5.376-322.816 256a64 64 0 0 1-73.408 4.288l-6.592-4.672-317.12-256A64 64 0 0 1 225.664 329.6l6.528 4.672 277.376 223.744 282.688-224.128z"  ></path></symbol><symbol id="gld-bf-measure-setting-md" viewBox="0 0 1024 1024"><path d="M128 341.333333h170.666667v42.666667H128zM426.666667 341.333333h469.333333v42.666667H426.666667z"  ></path><path d="M362.666667 256a106.666667 106.666667 0 1 1 0 213.333333 106.666667 106.666667 0 0 1 0-213.333333z m0 42.666667a64 64 0 1 0 0 128 64 64 0 0 0 0-128z"  ></path><path d="M128 640h469.333333v42.666667H128zM725.333333 640h170.666667v42.666667h-170.666667z"  ></path><path d="M661.333333 554.666667a106.666667 106.666667 0 1 1 0 213.333333 106.666667 106.666667 0 0 1 0-213.333333z m0 42.666666a64 64 0 1 0 0 128 64 64 0 0 0 0-128z"  ></path></symbol><symbol id="gld-bf-close-sm" viewBox="0 0 1024 1024"><path d="M490.048 444.8L806.848 128l45.248 45.248-316.8 316.8 316.8 316.8-45.248 45.248-316.8-316.8-316.8 316.8L128 806.848l316.8-316.8L128 173.248 173.248 128z"  ></path></symbol><symbol id="gld-bf-map-c-sm" viewBox="0 0 1024 1024"><path d="M64 64h896v896H64z" fill="#6C7179" ></path><path d="M960 64v896H64V64h896z m-64 64H128v768h768V128z" fill="#A4A8AE" ></path><path d="M112.448 388.544l800 480-32.896 54.912-800-480z" fill="#A4A8AE" ></path><path d="M514.944 82.56l58.112 26.88-384 832-58.112-26.88 384-832zM704 256a128 128 0 1 1 0 256 128 128 0 0 1 0-256z m0 64a64 64 0 1 0 0 128 64 64 0 0 0 0-128z" fill="#A4A8AE" ></path></symbol><symbol id="gld-bf-scene-c-sm" viewBox="0 0 1024 1024"><path d="M960 871.04l-194.816-633.28a64 64 0 0 0-122.368 0L448 871.04h512z" fill="#6C7179" ></path><path d="M685.184 195.456a64 64 0 0 1 77.44 35.328l2.56 7.04L960 871.04H448l194.816-633.216a64 64 0 0 1 42.368-42.24zM704 256.64l-169.408 550.4h338.752L704 256.64z" fill="#A4A8AE" ></path><path d="M704 871.04L438.272 445.76a64 64 0 0 0-108.544 0L64 871.04h640z" fill="#6C7179" ></path><path d="M350.08 425.472a64 64 0 0 1 83.84 14.208l4.352 6.144L704 871.04H64l265.728-425.152a64 64 0 0 1 20.352-20.352z m33.92 54.272L179.392 807.04h409.152L384 479.744z" fill="#A4A8AE" ></path></symbol><symbol id="gld-bf-file-c-sm" viewBox="0 0 1024 1024"><path d="M128 64h512l256 256v640H128z" fill="#6C7179" ></path><path d="M640 64l256 256v640H128V64h512z m-26.56 64H192v768h640V346.56L613.44 128z" fill="#A4A8AE" ></path><path d="M640 64l256 256v64H576V64h64z m0 90.56V320h165.44L640 154.56z" fill="#A4A8AE" ></path></symbol><symbol id="gld-bf-folder-close-c-sm" viewBox="0 0 1024 1024"><path d="M960 896V64h-320L576 128H64v768z" fill="#E3D286" ></path><path d="M960 64v832H64V128h512l64-64h320z m-64 64h-229.504l-64 64H128v640h768V128z" fill="#CFA745" ></path><path d="M960 896V256H64v640z" fill="#E3D286" ></path><path d="M960 256v640H64V256h896z m-64 64H128v512h768V320z" fill="#CFA745" ></path></symbol><symbol id="gld-bf-folder-open-c-sm" viewBox="0 0 1024 1024"><path d="M1024 896V64h-320l-64 64H128v768z" fill="#E3D286" ></path><path d="M1024 64v832H128V128h512l64-64h320z m-64 64h-229.504l-64 64H192v640h768V128z" fill="#CFA745" ></path><path d="M1024 896L896 256H0l128 640z" fill="#E3D286" ></path><path d="M896 256l128 640H128L0 256h896z m-52.48 64H78.016l102.4 512H945.92l-102.4-512z" fill="#CFA745" ></path></symbol><symbol id="gld-bf-clear-md" viewBox="0 0 1024 1024"><path d="M490.666667 85.674667a404.949333 404.949333 0 0 1 339.370666 183.594666l6.997334 11.093334-36.437334 22.186666a362.794667 362.794667 0 0 0-666.965333 124.373334c-9.258667 0.128-24.746667 0-43.264 0.128 30.72-193.450667 198.229333-341.333333 400.298667-341.333334v-0.042666z"  ></path><path d="M106.666667 597.674667l106.666666-170.666667H0zM490.666667 896.341333a404.949333 404.949333 0 0 1-339.370667-183.594666l-6.997333-11.093334 36.437333-22.186666a362.794667 362.794667 0 0 0 666.965333-124.458667h43.264c-30.677333 193.450667-198.229333 341.333333-400.298666 341.333333z"  ></path><path d="M874.666667 384.341333l-106.666667 170.666667h213.333333z"  ></path></symbol><symbol id="gld-bf-component-sm" viewBox="0 0 1024 1024"><path d="M480 0L0 256v512l480 256 480-256V256L480 0z m394.24 273.28L480 476.16 88.96 274.56 480 70.4l394.24 202.88zM64 718.08v-384l384 197.76v402.56l-384-198.4v-17.92z m832 17.92l-384 198.4V531.84l384-197.76v401.92z"  ></path></symbol><symbol id="gld-bf-component-fill-sm" viewBox="0 0 1024 1024"><path d="M928 244.608l-448 238.08-448-238.08L480 0l448 244.608zM0 306.56l448 235.456V1024l-448-241.28V306.56z m960 476.16L512 1024V542.016l448-235.52v476.16z"  ></path></symbol><symbol id="gld-bf-coordinate-md" viewBox="0 0 1024 1024"><path d="M408.021333 128.682667h42.666667v512h-42.666667z"  ></path><path d="M429.354667 86.016l106.666666 128h-213.333333l106.666667-128z m-301.226667 834.56l15.061333-165.888 150.826667 150.826667-165.888 15.061333z m834.56-301.226667l-128 106.666667v-213.333333l128 106.666666z"  ></path><path d="M408.021333 598.016h512v42.666667h-512z"  ></path><path d="M150.442667 868.010667l271.573333-271.530667 30.165333 30.208-271.530666 271.530667z"  ></path></symbol><symbol id="gld-bf-triangulation-md" viewBox="0 0 1024 1024"><path d="M128 213.674667h42.666667v128H128v-128z m725.333333 0h42.666667v128h-42.666667v-128z m-682.666666 42.666666h682.666666v42.666667H170.666667v-42.666667zM896 427.008l-768 426.666667v-426.666667h768z m-164.650667 42.624H170.666667v311.466667l560.682666-311.466667z"  ></path></symbol><symbol id="gld-bf-area-md" viewBox="0 0 1024 1024"><path d="M579.370667 171.008l402.304 640h-853.333334v-640h450.986667z m-23.594667 42.666667H171.008v554.666666h733.44l-348.672-554.666666z"  ></path><path d="M223.573333 365.568L344.277333 244.906667l30.165334 30.165333-120.746667 120.704-30.122667-30.208z m298.666667 341.333333l120.704-120.661333 30.165333 30.165333-120.746666 120.704-30.122667-30.208zM218.368 584.106667l301.738667-301.696 30.165333 30.165333-301.696 301.653333-30.208-30.122666z m139.477333 52.565333l211.2-211.2 30.165334 30.208-211.2 211.2-30.165334-30.208z"  ></path></symbol><symbol id="gld-bf-distance-md" viewBox="0 0 1024 1024"><path d="M939.008 427.008v341.333333h-810.666667v-341.333333h810.666667z m-42.666667 42.666667h-725.333333v256h725.333333v-256z"  ></path><path d="M768.341333 597.674667h42.666667v-128h-42.666667v128z m-128 0h42.666667v-128h-42.666667v128z m-256 0h42.666667v-128h-42.666667v128z m128 42.666666h42.666667v-170.666666h-42.666667v170.666666z m-256-42.666666h42.666667v-128h-42.666667v128z m-128-298.666667h810.666667v-42.666667h-810.666667v42.666667z"  ></path><path d="M896.341333 341.717333h42.666667V213.674667h-42.666667v128z m-768 0h42.666667V213.674667h-42.666667v128z"  ></path></symbol><symbol id="gld-bf-angle-md" viewBox="0 0 1024 1024"><path d="M85.674667 639.317333h810.666666v85.333334h-810.666666z"  ></path><path d="M141.354667 657.152l-25.173334-34.474667 592.853334-451.84 25.173333 34.432z"  ></path><path d="M252.757333 371.029333l7.168-42.069333c182.016 31.274667 267.349333 153.301333 252.416 358.4l-42.666666-3.157333c13.482667-184.106667-57.642667-285.866667-216.96-313.173334z"  ></path></symbol><symbol id="gld-bf-annotation-md" viewBox="0 0 1024 1024"><path d="M512.682667 341.333333a128 128 0 1 1 0 256 128 128 0 0 1 0-256z m0 42.666667a85.333333 85.333333 0 1 0 0 170.666667 85.333333 85.333333 0 0 0 0-170.666667z"  ></path><path d="M512.682667 128a341.333333 341.333333 0 0 1 341.333333 341.333333c0 125.696-113.792 267.904-341.333333 426.666667-227.541333-158.762667-341.333333-300.970667-341.333334-426.666667a341.333333 341.333333 0 0 1 341.333334-341.333333z m0 42.666667a298.666667 298.666667 0 0 0-298.666667 298.666666c0 99.925333 91.093333 221.013333 277.504 358.954667l21.12 15.402667 5.888-4.181334c191.829333-139.008 287.957333-261.290667 292.650667-362.453333l0.170666-7.722667a298.666667 298.666667 0 0 0-298.666666-298.666666z"  ></path></symbol><symbol id="gld-bf-tag-md" viewBox="0 0 1024 1024"><path d="M512 85.333333l298.666667 256v554.666667H213.333333V341.333333l298.666667-256z m0 56.192L256 360.917333V853.333333h512V360.96l-256-219.434667z"  ></path><path d="M512 341.333333a85.333333 85.333333 0 1 1 0 170.666667 85.333333 85.333333 0 0 1 0-170.666667z m0 42.666667a42.666667 42.666667 0 1 0 0 85.333333 42.666667 42.666667 0 0 0 0-85.333333z"  ></path></symbol><symbol id="gld-bf-route-md" viewBox="0 0 1024 1024"><path d="M171.008 790.016a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 0 0-213.333333 0zM171.008 192.682667a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 0 0-213.333333 0zM725.674667 192.682667a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 0 0-213.333333 0zM725.674667 747.349333a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 0 0-213.333333 0z"  ></path><path d="M277.674667 598.016a192 192 0 1 1 0 384 192 192 0 0 1 0-384z m0 42.666667a149.333333 149.333333 0 1 0 0 298.666666 149.333333 149.333333 0 0 0 0-298.666666z"  ></path><path d="M256.341333 299.349333v128h42.666667v-128h-42.666667z m0 213.333334v106.666666h42.666667v-106.666666h-42.666667z m554.666667-213.333334v128h42.666667v-128h-42.666667z m0 213.333334v128h42.666667v-128h-42.666667zM305.237333 250.453333l90.538667 90.453334 30.165333-30.122667-90.496-90.538667-30.208 30.208z m150.869334 150.826667l90.453333 90.453333 30.208-30.122666-90.453333-90.496-30.208 30.165333z m150.869333 150.869333l90.453333 90.453334 30.208-30.122667-90.496-90.496-30.165333 30.165333z m150.826667 150.826667l59.434666 59.477333 30.208-30.208-59.477333-59.434666-30.165333 30.165333z"  ></path></symbol><symbol id="gld-bf-polyline-md" viewBox="0 0 1024 1024"><path d="M887.210667 213.333333l25.941333 33.834667L153.941333 827.776 128 793.898667z"  ></path></symbol><symbol id="gld-bf-polygon-md" viewBox="0 0 1024 1024"><path d="M854.016 171.349333v682.666667h-682.666667v-682.666667h682.666667z m-42.666667 42.666667h-597.333333v597.333333h597.333333v-597.333333z"  ></path></symbol><symbol id="gld-bf-property-md" viewBox="0 0 1024 1024"><path d="M896 85.674667v853.333333H85.333333v-853.333333h810.666667z m-42.666667 42.666666H128v768h725.333333v-768z"  ></path><path d="M85.333333 85.674667h810.666667v128H85.333333v-128z m128 256h85.333334v85.333333H213.333333v-85.333333z m0 170.666666h85.333334v85.333334H213.333333v-85.333334z m0 170.666667h85.333334v85.333333H213.333333v-85.333333z m170.666667-341.333333h384v85.333333H384v-85.333333z m0 170.666666h384v85.333334H384v-85.333334z m0 170.666667h384v85.333333H384v-85.333333z"  ></path></symbol></svg>',p=(p=document.getElementsByTagName("script"))[p.length-1].getAttribute("data-injectcss");if(p&&!h.__iconfont__svg__cssinject__){h.__iconfont__svg__cssinject__=!0;try{document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>")}catch(h){console&&console.log(h)}}function o(){d||(d=!0,t())}l=function(){var h,l,a,t;(t=document.createElement("div")).innerHTML=z,z=null,(a=t.getElementsByTagName("svg")[0])&&(a.setAttribute("aria-hidden","true"),a.style.position="absolute",a.style.width=0,a.style.height=0,a.style.overflow="hidden",h=a,(l=document.body).firstChild?(t=h,(a=l.firstChild).parentNode.insertBefore(t,a)):l.appendChild(h))},document.addEventListener?~["complete","loaded","interactive"].indexOf(document.readyState)?setTimeout(l,0):(a=function(){document.removeEventListener("DOMContentLoaded",a,!1),l()},document.addEventListener("DOMContentLoaded",a,!1)):document.attachEvent&&(t=l,v=h.document,d=!1,(m=function(){try{v.documentElement.doScroll("left")}catch(h){return void setTimeout(m,50)}o()})(),v.onreadystatechange=function(){"complete"==v.readyState&&(v.onreadystatechange=null,o())})}(window);
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MainToolbarButton = void 0;
var UIModule_1 = require("../UIModule");
var MainToolbarButton = /** @class */ (function (_super) {
    __extends(MainToolbarButton, _super);
    function MainToolbarButton(config) {
        var _this = this;
        var mouduleConfig = {
            type: 'Button',
            name: config.name,
            config: {
                iconClass: config.iconClass,
                selectable: config.selectable,
                tooltip: config.tooltip,
            },
            manager: config.manager
        };
        if (config.config) {
            for (var key in config.config) {
                mouduleConfig.config[key] = config.config[key];
            }
        }
        _this = _super.call(this, mouduleConfig) || this;
        _this.selectable = config.selectable;
        _this.select = false;
        _this.exclusive = config.exclusive !== false;
        _this.selectCallback = config.selectCallback;
        _this.unselectCallback = config.unselectCallback;
        _this.clickCallback = config.clickCallback;
        _this.linkedPanelName = config.linkedPanelName;
        _this.toolbar = config.toolbar;
        _this._element.onClick(function (data) {
            _this.selectable && _this.setSelect(!_this.select, _this);
            _this.clickCallback instanceof Function && _this.clickCallback(data);
        });
        return _this;
    }
    MainToolbarButton.prototype.setSelect = function (select, target) {
        var _this = this;
        if (this.selectable && this.select !== select) {
            this.select = select;
            this.getElement().setSelected(select);
            if (select) {
                // MainToolbar Button Select状态互斥
                if (this.exclusive === true) {
                    var mainToolbar = this.toolbar;
                    mainToolbar.getButtons().forEach(function (button) {
                        if (button instanceof MainToolbarButton) {
                            button === _this || (button.exclusive === true && button.setSelect(false));
                        }
                    });
                }
                // Button与对应Panel联动
                if (!this.panel && this.linkedPanelName) {
                    this.panel = this._manager.loadModule('Panel', this.linkedPanelName);
                    this.panel.getElement().onClose(function () {
                        _this.select = false;
                        _this._element.setSelected(_this.select);
                        _this.panel.hide();
                    }, false);
                }
                this.panel && this.panel.show();
                this.selectCallback instanceof Function && this.selectCallback(this);
            }
            else {
                this.panel && this.panel.hide();
                this.unselectCallback instanceof Function && this.unselectCallback(this);
            }
        }
    };
    MainToolbarButton.prototype.getSelect = function () {
        return this.select;
    };
    return MainToolbarButton;
}(UIModule_1.UIModule));
exports.MainToolbarButton = MainToolbarButton;

},{"../UIModule":44}],2:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var FullScreen = /** @class */ (function (_super) {
    __extends(FullScreen, _super);
    function FullScreen(config) {
        var _this = this;
        config.name = 'FullScreen';
        _this = _super.call(this, config) || this;
        return _this;
    }
    return FullScreen;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = FullScreen;

},{"../MainToolbarButton":1}],3:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var Home = /** @class */ (function (_super) {
    __extends(Home, _super);
    function Home(config) {
        var _this = this;
        config.name = 'Home';
        config.iconClass = 'gld-bf-home-fill-md';
        config.tooltip = window.BimfaceLanguage.bfui_button_home;
        config.clickCallback = function () { return _this.getViewer().setCameraStatus(_this.getViewer().getHomeView()); };
        _this = _super.call(this, config) || this;
        return _this;
    }
    return Home;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = Home;

},{"../MainToolbarButton":1}],4:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var LayerTree = /** @class */ (function (_super) {
    __extends(LayerTree, _super);
    function LayerTree(config) {
        var _this = this;
        config.name = 'LayerTree';
        config.iconClass = 'gld-bf-layers-fill-md';
        config.tooltip = window.BimfaceLanguage.bf_btn_modelTree;
        config.selectable = true;
        config.linkedPanelName = 'LayerTreePanel';
        _this = _super.call(this, config) || this;
        return _this;
    }
    return LayerTree;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = LayerTree;

},{"../MainToolbarButton":1}],5:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var SubToolbarButton_1 = require("./SubToolbarButton");
var EventCode_1 = require("../../../../Event/EventCode");
var Measure = /** @class */ (function (_super) {
    __extends(Measure, _super);
    function Measure(config) {
        var _this = this;
        config.name = 'Measure';
        config.iconClass = 'gld-bf-measurement-gis-md';
        config.tooltip = window.BimfaceLanguage.bf_btn_measure;
        _this = _super.call(this, config) || this;
        _this.init();
        return _this;
    }
    Measure.prototype.init = function () {
        var _this = this;
        var measureConfig = new window.Glodon.Bimface.Plugins.Measure.MeasureConfig();
        measureConfig.measureType = window.Glodon.Bimface.Plugins.Measure.MeasureTypeOption.Angle;
        measureConfig.viewer = this.getViewer();
        var measure = new window.Glodon.Bimface.Plugins.Measure.Measure(measureConfig);
        measure.id = 'Measure';
        measure.switchOff();
        this.measure = measure;
        this.getWebApplication().addPlugin(measure);
        // ESC快捷键
        this.getWebApplication().getDomElement().on('keyup', function (event) {
            if (measure.isOpen && !window.CLOUD.EditorConfig.NoKey && event.keyCode == EventCode_1.KeyCode.ESC) {
                if (measure.getInfo().points.length > 0) {
                    measure.redo();
                }
                else {
                    _this.exit();
                }
            }
        });
    };
    Measure.prototype.subToolbarClicked = function () {
        var walkthroughControl = this.getUIManager().getModule('Button', 'Walkthrough');
        if (walkthroughControl) {
            walkthroughControl.setSelect(false);
        }
    };
    Measure.prototype.setMeasureType = function (type) {
        this.measure.switchOn();
        this.measure.setMeasureType(type);
    };
    Measure.prototype.getMeasure = function () {
        return this.measure;
    };
    // 退出测量
    Measure.prototype.exit = function () {
        var measure = this.measure;
        var subToolbar = this.getSubToolbar();
        var buttons = subToolbar.getButtons();
        buttons.find(function (button) {
            if (button.getSelect() === true) {
                button.setSelect(false);
                return true;
            }
        });
    };
    return Measure;
}(SubToolbarButton_1.default));
exports.default = Measure;

},{"../../../../Event/EventCode":53,"./SubToolbarButton":20}],6:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var MeasureAngle = /** @class */ (function (_super) {
    __extends(MeasureAngle, _super);
    function MeasureAngle(config) {
        var _this = this;
        config.name = 'MeasureAngle';
        config.iconClass = 'gld-bf-angle-md';
        config.tooltip = window.BimfaceLanguage.bf_tip_measure_angle;
        config.selectable = true;
        _this = _super.call(this, config) || this;
        return _this;
    }
    MeasureAngle.prototype.setSelect = function (select) {
        _super.prototype.setSelect.call(this, select);
        var measureControl = this.getUIManager().getModule('Button', 'Measure');
        if (select === true) {
            measureControl.setMeasureType(window.Glodon.Bimface.Plugins.Measure.MeasureTypeOption.Angle);
        }
        else {
            measureControl.getMeasure().switchOff();
        }
    };
    return MeasureAngle;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = MeasureAngle;

},{"../MainToolbarButton":1}],7:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var MeasureArea = /** @class */ (function (_super) {
    __extends(MeasureArea, _super);
    function MeasureArea(config) {
        var _this = this;
        config.name = 'MeasureArea';
        config.iconClass = 'gld-bf-area-md';
        config.tooltip = window.BimfaceLanguage.bf_tip_measure_area;
        config.selectable = true;
        _this = _super.call(this, config) || this;
        _this.measure = _this.getWebApplication().getPlugin('Measure');
        _this.subToolbar = null;
        return _this;
    }
    MeasureArea.prototype.setSelect = function (select) {
        _super.prototype.setSelect.call(this, select);
        if (!this.subToolbar) {
            this.subToolbar = this.getUIManager().loadModule('Toolbar', 'SubToolbarAreaMeasure');
        }
        if (select === true) {
            this.subToolbar.show();
            this.measure.switchOn();
            this.subToolbar.getButtons()[0].setSelect(true);
        }
        else {
            this.subToolbar.hide();
            this.measure.switchOff();
        }
    };
    return MeasureArea;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = MeasureArea;

},{"../MainToolbarButton":1}],8:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var MeasureClear = /** @class */ (function (_super) {
    __extends(MeasureClear, _super);
    function MeasureClear(config) {
        var _this = this;
        config.name = 'MeasureClear';
        config.iconClass = 'gld-bf-clear-md';
        config.tooltip = window.BimfaceLanguage.bf_tip_measure_clear; // TODO: 缺少语言包
        config.clickCallback = function () {
            var measureControl = _this.getUIManager().getModule('Button', 'Measure');
            measureControl.getMeasure().clear();
        };
        _this = _super.call(this, config) || this;
        return _this;
    }
    return MeasureClear;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = MeasureClear;

},{"../MainToolbarButton":1}],9:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var MeasureDistance = /** @class */ (function (_super) {
    __extends(MeasureDistance, _super);
    function MeasureDistance(config) {
        var _this = this;
        config.name = 'MeasureDistance';
        config.iconClass = 'gld-bf-distance-md';
        config.tooltip = window.BimfaceLanguage.bf_tip_measure_distance;
        config.selectable = true;
        _this = _super.call(this, config) || this;
        _this.measure = _this.getWebApplication().getPlugin('Measure');
        _this.subToolbar = null;
        return _this;
    }
    MeasureDistance.prototype.setSelect = function (select) {
        _super.prototype.setSelect.call(this, select);
        if (!this.subToolbar) {
            this.subToolbar = this.getUIManager().loadModule('Toolbar', 'SubToolbarDistanceMeasure');
        }
        if (select === true) {
            this.subToolbar.show();
            this.measure.switchOn();
            this.subToolbar.getButtons()[0].setSelect(true);
        }
        else {
            this.subToolbar.hide();
            this.measure.switchOff();
        }
    };
    return MeasureDistance;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = MeasureDistance;

},{"../MainToolbarButton":1}],10:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var MeasureGroundlineDistance = /** @class */ (function (_super) {
    __extends(MeasureGroundlineDistance, _super);
    function MeasureGroundlineDistance(config) {
        var _this = this;
        config.name = 'MesureDistanceGroundLine';
        config.iconClass = 'gld-bf-distance-md';
        config.tooltip = window.BimfaceLanguage.bf_tip_measure_groundline_distance;
        config.selectable = true;
        _this = _super.call(this, config) || this;
        _this.measure = _this.getWebApplication().getPlugin('Measure');
        return _this;
    }
    MeasureGroundlineDistance.prototype.setSelect = function (select, target) {
        if (target == this && select == false) {
            return;
        }
        _super.prototype.setSelect.call(this, select);
        this.switchIcon(select);
        if (select === true) {
            this.measure.setMeasureType(window.Glodon.Bimface.Plugins.Measure.MeasureTypeOption.GroundlineDistance);
        }
    };
    MeasureGroundlineDistance.prototype.switchIcon = function (select) {
        var type = select === true ? '-selected' : '';
        this.getElement().setHTML("<svg class=\"bfui-button-icon svg-icon\" aria-hidden=\"true\">\n                                  <use xlink:href=\"#gld-bf-ground" + type + "-c-md\"></use>\n                                </svg>");
    };
    return MeasureGroundlineDistance;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = MeasureGroundlineDistance;

},{"../MainToolbarButton":1}],11:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var MeasurePolylineDistance = /** @class */ (function (_super) {
    __extends(MeasurePolylineDistance, _super);
    function MeasurePolylineDistance(config) {
        var _this = this;
        config.name = 'MeasureDistance';
        config.iconClass = 'gld-bf-distance-md';
        config.tooltip = window.BimfaceLanguage.bf_tip_measure_polyline_distance;
        config.selectable = true;
        _this = _super.call(this, config) || this;
        _this.measure = _this.getWebApplication().getPlugin('Measure');
        return _this;
    }
    MeasurePolylineDistance.prototype.setSelect = function (select, target) {
        if (target == this && select == false) {
            return;
        }
        _super.prototype.setSelect.call(this, select);
        this.switchIcon(select);
        if (select === true) {
            this.measure.setMeasureType(window.Glodon.Bimface.Plugins.Measure.MeasureTypeOption.PolylineDistance);
        }
    };
    MeasurePolylineDistance.prototype.switchIcon = function (select) {
        var type = select === true ? '-selected' : '';
        this.getElement().setHTML("<svg class=\"bfui-button-icon svg-icon\" aria-hidden=\"true\">\n                                  <use xlink:href=\"#gld-bf-space" + type + "-c-md\"></use>\n                                </svg>");
    };
    return MeasurePolylineDistance;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = MeasurePolylineDistance;

},{"../MainToolbarButton":1}],12:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var MeasurePosition = /** @class */ (function (_super) {
    __extends(MeasurePosition, _super);
    function MeasurePosition(config) {
        var _this = this;
        config.name = 'MeasurePosition';
        config.iconClass = 'gld-bf-coordinate-md';
        config.tooltip = window.BimfaceLanguage.bf_tip_measure_position;
        config.selectable = true;
        _this = _super.call(this, config) || this;
        return _this;
    }
    MeasurePosition.prototype.setSelect = function (select) {
        _super.prototype.setSelect.call(this, select);
        var measureControl = this.getUIManager().getModule('Button', 'Measure');
        if (select === true) {
            measureControl.setMeasureType(window.Glodon.Bimface.Plugins.Measure.MeasureTypeOption.Position);
        }
        else {
            measureControl.getMeasure().switchOff();
        }
    };
    return MeasurePosition;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = MeasurePosition;

},{"../MainToolbarButton":1}],13:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var MeasureProjectedArea = /** @class */ (function (_super) {
    __extends(MeasureProjectedArea, _super);
    function MeasureProjectedArea(config) {
        var _this = this;
        config.name = 'MeasureProjectedArea';
        config.tooltip = window.BimfaceLanguage.bf_tip_measure_projected_area; // TODO: 缺少语言包
        config.selectable = true;
        _this = _super.call(this, config) || this;
        _this.measure = _this.getWebApplication().getPlugin('Measure');
        return _this;
    }
    MeasureProjectedArea.prototype.setSelect = function (select, target) {
        // 面积测量Buttton有且仅有一个被选中
        if (target == this && select == false) {
            return;
        }
        _super.prototype.setSelect.call(this, select);
        this.switchIcon(select);
        if (select === true) {
            this.measure.setMeasureType(window.Glodon.Bimface.Plugins.Measure.MeasureTypeOption.ProjectedArea);
        }
    };
    MeasureProjectedArea.prototype.switchIcon = function (select) {
        var type = select === true ? '-selected' : '';
        this.getElement().setHTML("<svg class=\"bfui-button-icon svg-icon\" aria-hidden=\"true\">\n                                  <use xlink:href=\"#gld-bf-projection" + type + "-c-md\"></use>\n                                </svg>");
    };
    return MeasureProjectedArea;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = MeasureProjectedArea;

},{"../MainToolbarButton":1}],14:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var MeasureSetting = /** @class */ (function (_super) {
    __extends(MeasureSetting, _super);
    function MeasureSetting(config) {
        var _this = this;
        config.name = 'MeasureSetting';
        config.iconClass = 'gld-bf-measure-setting-md';
        config.tooltip = window.BimfaceLanguage.bf_tip_measure_setting;
        config.selectable = true;
        config.exclusive = false;
        config.linkedPanelName = 'MeasureSettingPanel';
        _this = _super.call(this, config) || this;
        return _this;
    }
    return MeasureSetting;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = MeasureSetting;

},{"../MainToolbarButton":1}],15:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var MeasureSpatialArea = /** @class */ (function (_super) {
    __extends(MeasureSpatialArea, _super);
    function MeasureSpatialArea(config) {
        var _this = this;
        config.name = 'MeasureSpatialArea';
        config.tooltip = window.BimfaceLanguage.bf_tip_measure_spatial_area; // TODO: 缺少语言包
        config.selectable = true;
        _this = _super.call(this, config) || this;
        _this.measure = _this.getWebApplication().getPlugin('Measure');
        return _this;
    }
    MeasureSpatialArea.prototype.setSelect = function (select, target) {
        // 面积测量Buttton有且仅有一个被选中
        if (target == this && select == false) {
            return;
        }
        _super.prototype.setSelect.call(this, select);
        this.switchIcon(select);
        if (select === true) {
            this.measure.setMeasureType(window.Glodon.Bimface.Plugins.Measure.MeasureTypeOption.SpatialArea);
        }
    };
    MeasureSpatialArea.prototype.switchIcon = function (select) {
        var type = select === true ? '-selected' : '';
        this.getElement().setHTML("<svg class=\"bfui-button-icon svg-icon\" aria-hidden=\"true\">\n                                  <use xlink:href=\"#gld-bf-space" + type + "-c-md\"></use>\n                                </svg>");
    };
    return MeasureSpatialArea;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = MeasureSpatialArea;

},{"../MainToolbarButton":1}],16:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var MeasureSurfaceArea = /** @class */ (function (_super) {
    __extends(MeasureSurfaceArea, _super);
    function MeasureSurfaceArea(config) {
        var _this = this;
        config.name = 'MeasureSurfaceArea';
        config.tooltip = window.BimfaceLanguage.bf_tip_measure_surface_area; // TODO: 缺少语言包
        config.selectable = true;
        _this = _super.call(this, config) || this;
        _this.measure = _this.getWebApplication().getPlugin('Measure');
        return _this;
    }
    MeasureSurfaceArea.prototype.setSelect = function (select, target) {
        // 面积测量Buttton有且仅有一个被选中
        if (target == this && select == false) {
            return;
        }
        _super.prototype.setSelect.call(this, select);
        this.switchIcon(select);
        if (select === true) {
            this.measure.setMeasureType(window.Glodon.Bimface.Plugins.Measure.MeasureTypeOption.SurfaceArea);
        }
    };
    MeasureSurfaceArea.prototype.switchIcon = function (select) {
        var type = select === true ? '-selected' : '';
        this.getElement().setHTML("<svg class=\"bfui-button-icon svg-icon\" aria-hidden=\"true\">\n                                  <use xlink:href=\"#gld-bf-ground" + type + "-c-md\"></use>\n                                </svg>");
    };
    return MeasureSurfaceArea;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = MeasureSurfaceArea;

},{"../MainToolbarButton":1}],17:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var MeasureTriangleDistance = /** @class */ (function (_super) {
    __extends(MeasureTriangleDistance, _super);
    function MeasureTriangleDistance(config) {
        var _this = this;
        config.name = 'MeasureTriangleDistance';
        config.iconClass = 'gld-bf-triangulation-md';
        config.tooltip = window.BimfaceLanguage.bf_tip_measure_triangle; // TODO: 缺少语言包
        config.selectable = true;
        _this = _super.call(this, config) || this;
        return _this;
    }
    MeasureTriangleDistance.prototype.setSelect = function (select) {
        _super.prototype.setSelect.call(this, select);
        var measureControl = this.getUIManager().getModule('Button', 'Measure');
        if (select === true) {
            measureControl.setMeasureType(window.Glodon.Bimface.Plugins.Measure.MeasureTypeOption.TriangleDistance);
        }
        else {
            measureControl.getMeasure().switchOff();
        }
    };
    return MeasureTriangleDistance;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = MeasureTriangleDistance;

},{"../MainToolbarButton":1}],18:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var Property = /** @class */ (function (_super) {
    __extends(Property, _super);
    function Property(config) {
        var _this = this;
        config.name = 'Property';
        config.iconClass = 'gld-bf-property-md';
        config.tooltip = window.BimfaceLanguage.bfui_button_property;
        config.selectable = true;
        config.exclusive = false;
        config.linkedPanelName = 'PropertyPanel';
        _this = _super.call(this, config) || this;
        return _this;
    }
    return Property;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = Property;

},{"../MainToolbarButton":1}],19:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var Setting = /** @class */ (function (_super) {
    __extends(Setting, _super);
    function Setting(config) {
        var _this = this;
        config.name = 'Setting';
        config.iconClass = 'gld-bf-setting-fill-md';
        config.tooltip = window.BimfaceLanguage.bf_btn_settings;
        config.selectable = true;
        config.linkedPanelName = 'SettingPanel';
        _this = _super.call(this, config) || this;
        return _this;
    }
    return Setting;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = Setting;

},{"../MainToolbarButton":1}],20:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var SubToolbarButton = /** @class */ (function (_super) {
    __extends(SubToolbarButton, _super);
    function SubToolbarButton(config) {
        var _this = this;
        config.clickCallback = function () {
            if (_this.subToolbar) {
                _this.subToolbar.isVisible() ? _this.hideSubToolbar() : _this.showSubToolbar();
                _this.subToolbar.onClick(function () {
                    _this.subToolbarClicked();
                });
            }
        };
        _this = _super.call(this, config) || this;
        _this.getElement().addClass('bfui-button-dropdown');
        return _this;
    }
    SubToolbarButton.prototype.setSubToolbar = function (subToolbar) {
        this.subToolbar = subToolbar;
    };
    SubToolbarButton.prototype.getSubToolbar = function () {
        return this.subToolbar;
    };
    SubToolbarButton.prototype.showSubToolbar = function () {
        if (!this.subToolbar)
            return this;
        this.subToolbar.show();
        return this;
    };
    SubToolbarButton.prototype.hideSubToolbar = function () {
        if (!this.subToolbar)
            return this;
        this.subToolbar.hide();
        return this;
    };
    SubToolbarButton.prototype.subToolbarClicked = function () {
    };
    return SubToolbarButton;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = SubToolbarButton;

},{"../MainToolbarButton":1}],21:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MainToolbarButton_1 = require("../MainToolbarButton");
var Walkthrough = /** @class */ (function (_super) {
    __extends(Walkthrough, _super);
    function Walkthrough(config) {
        var _this = this;
        config.name = 'Walkthrough';
        config.iconClass = 'gld-bf-route-md';
        config.tooltip = window.BimfaceLanguage.bf_btn_nav;
        config.selectable = true;
        config.exclusive = false;
        config.linkedPanelName = 'WalkthroughPanel';
        _this = _super.call(this, config) || this;
        return _this;
    }
    Walkthrough.prototype.setSelect = function (select) {
        _super.prototype.setSelect.call(this, select);
        var measureControl = this.getUIManager().getModule('Button', 'Measure');
        if (select === true) {
            measureControl.exit();
        }
    };
    return Walkthrough;
}(MainToolbarButton_1.MainToolbarButton));
exports.default = Walkthrough;

},{"../MainToolbarButton":1}],22:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIModule_1 = require("../UIModule");
var DrawerPanel = /** @class */ (function (_super) {
    __extends(DrawerPanel, _super);
    function DrawerPanel(config) {
        var _this = this;
        config.type = 'Panel';
        config.config.draggable = false;
        config.config.sizeFixed = true;
        _this = _super.call(this, config) || this;
        var panel = _this._element;
        panel.addClass('bfui-panel-drawer');
        if (_this.getEnableUIAnimation()) {
            var dom = _this.getElement().getDomElement();
            dom.css('marginLeft', "-" + dom.getWidth() + "px").hide();
        }
        return _this;
    }
    DrawerPanel.prototype.show = function () {
        this._element.topShow();
        if (this.getEnableUIAnimation()) {
            var dom = this._element.getDomElement();
            if (dom.isVisible() && !this._inTransition)
                return;
            if (this._inTransition) { // hide动画过程中执行show的情况
                dom.show().css({ 'marginLeft': "0px" });
                this._inTransition = false;
            }
            else {
                dom.show().removeClass('bfui-transition').css({ 'marginLeft': "-" + dom.getWidth() + "px" }).addClass('bfui-transition').css('marginLeft', "0px");
            }
        }
        else {
            _super.prototype.show.call(this);
        }
        return this;
    };
    DrawerPanel.prototype.hide = function () {
        var _this = this;
        if (this.getEnableUIAnimation()) {
            var dom_1 = this._element.getDomElement();
            if (!dom_1.isVisible())
                return;
            var transitionEndFn_1 = function () {
                if (_this._inTransition) {
                    dom_1.removeClass('bfui-transition').hide().off('transitionend', transitionEndFn_1);
                    _this._inTransition = false;
                }
            };
            this._inTransition = true;
            dom_1.addClass('bfui-transition').css({ 'marginLeft': "-" + dom_1.getWidth() + "px" }).on('transitionend', transitionEndFn_1);
        }
        else {
            _super.prototype.hide.call(this);
        }
        return this;
    };
    return DrawerPanel;
}(UIModule_1.UIModule));
exports.default = DrawerPanel;

},{"../UIModule":44}],23:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var DrawerPanel_1 = require("../DrawerPanel");
var LayerTreePanel = /** @class */ (function (_super) {
    __extends(LayerTreePanel, _super);
    function LayerTreePanel(config) {
        var _this = this;
        config.name = 'LayerTreePanel';
        _this = _super.call(this, config) || this;
        var panel = _this._element;
        panel.setTitle('图层');
        // 生成图层树
        _this.initLayerTree();
        // 图层数更新逻辑： 
        //    1. 首次加载模型时，判断图层是否属于原始数据所构成的树（根节点instanceIds），不更新树的control
        //    2. 通过接口增删改的模型，重新init,图层数。逻辑同viewer3D
        _this.getWebApplication().on('ModelAdded', function (id) {
            var allTreeNode = _this.getModule('Tree', 'LayerTree').getElement().getControl({ id: 'all' });
            var instanceIds = allTreeNode.getInstanceIds();
            if (instanceIds.includes(id)) {
                allTreeNode.updateUnloadControl({ id: id });
            }
            else {
                _this.getUIManager().updateLayerTree();
                _this.initLayerTree();
            }
        });
        _this.getWebApplication().on('ModelRemoved', function (id) {
            _this.getUIManager().updateLayerTree();
            _this.initLayerTree();
        });
        return _this;
    }
    LayerTreePanel.prototype.initLayerTree = function () {
        var panel = this._element;
        var layerConfigObject = this.getViewer().getLayerManager().getLayerConfigsObject();
        var layerTreeConfig = {
            config: {
                id: 'layerTree',
                title: '图层',
                content: layerConfigObject.children,
                parent: panel.getContent()
            }
        };
        this.loadModule('Tree', 'LayerTree', layerTreeConfig);
    };
    return LayerTreePanel;
}(DrawerPanel_1.default));
exports.default = LayerTreePanel;

},{"../DrawerPanel":22}],24:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var DrawerPanel_1 = require("../DrawerPanel");
var SettingPanel = /** @class */ (function (_super) {
    __extends(SettingPanel, _super);
    function SettingPanel(config) {
        var _this = this;
        config.name = 'SettingPanel';
        _this = _super.call(this, config) || this;
        var panel = _this._element;
        panel.setTitle('Setting');
        return _this;
    }
    return SettingPanel;
}(DrawerPanel_1.default));
exports.default = SettingPanel;

},{"../DrawerPanel":22}],25:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Glodon_1 = require("../../../../Common/Glodon");
var UIModule_1 = require("../../UIModule");
var Control_1 = require("../../../../UI/Control");
var ControlAnchor_1 = require("../../../../UI/ControlAnchor/ControlAnchor");
var MeasureSettingPanel = /** @class */ (function (_super) {
    __extends(MeasureSettingPanel, _super);
    function MeasureSettingPanel(config) {
        var _this = this;
        config.type = 'Panel';
        config.config = window.Object.assign({}, {
            sizeFixed: true,
            draggable: true,
            footerDisabled: true,
            width: 380,
            height: 320
        }, config.config);
        _this = _super.call(this, config) || this;
        var panel = _this._element;
        panel.setTitle(window.BimfaceLanguage.bf_panel_measure_setting);
        panel.addClass('bfui-panel-measure-setting');
        panel.setPosition({ anchor: ControlAnchor_1.default.MiddleCenter, offset: { x: 0, y: 0 } });
        _this._measure = _this.getWebApplication().getPlugin('Measure');
        _this.init();
        return _this;
    }
    MeasureSettingPanel.prototype.init = function () {
        this.units = this._measure.getUnits();
        this.precision = this._measure.getPrecision();
        this.distancePrecisionSelect = null;
        this.disatanceUnitSelect = null;
        this.areaPrecisionSelect = null;
        this.areaUnitSelect = null;
        this.anglePrecisionSelect = null;
        this.latLonPrecisionSelect = null;
        this.initBody();
        this.initFooter();
    };
    // 初始化面板Body
    MeasureSettingPanel.prototype.initBody = function () {
        var _this = this;
        // 距离 && 面积精度选项[0, 5]
        var precisionOptions12 = [];
        for (var i = 0; i < 6; i++) {
            var option = {
                text: i ? (1 / (Math.pow(10, i))) : i,
                value: i,
            };
            precisionOptions12.push(option);
        }
        // 距离单位选项[mm, cm , m, km]
        var unitOptions1 = [
            { text: 'mm', value: window.Glodon.Bimface.Common.Units.LengthUnits.Millimeter },
            { text: 'cm', value: window.Glodon.Bimface.Common.Units.LengthUnits.Centimeter },
            { text: 'm', value: window.Glodon.Bimface.Common.Units.LengthUnits.Meter },
            { text: 'km', value: window.Glodon.Bimface.Common.Units.LengthUnits.Kilometer },
        ];
        // 面积单位选项[mm², cm², m², km²]
        var unitOptions2 = [
            { text: 'mm²', value: window.Glodon.Bimface.Common.Units.LengthUnits.Millimeter },
            { text: 'cm²', value: window.Glodon.Bimface.Common.Units.LengthUnits.Centimeter },
            { text: 'm²', value: window.Glodon.Bimface.Common.Units.LengthUnits.Meter },
            { text: 'km²', value: window.Glodon.Bimface.Common.Units.LengthUnits.Kilometer },
        ];
        // 距离, 距离精度选项[0, 5]
        var distanceLabel = new Glodon_1.default.Bimface.Tiles.UI.Label({
            text: window.BimfaceLanguage.bf_panel_measure_distance
        });
        this.distancePrecisionSelect = new Glodon_1.default.Bimface.Tiles.UI.Select({
            values: precisionOptions12,
            onChange: function (data) {
                _this.precision.distance = data.value;
                _this.updateMeasureSetting();
            },
            defaultIndex: this.precision.distance,
        });
        this.disatanceUnitSelect = new Glodon_1.default.Bimface.Tiles.UI.Select({
            values: unitOptions1,
            onChange: function (data) {
                _this.units.distance = data.value;
                _this.updateMeasureSetting();
            },
            defaultIndex: unitOptions2.findIndex((function (item) { return item.value == _this.units.distance; })),
        });
        // 面积, 面积精度选项[0, 5]
        var areaLabel = new Glodon_1.default.Bimface.Tiles.UI.Label({
            text: window.BimfaceLanguage.bf_panel_measure_area
        });
        this.areaPrecisionSelect = new Glodon_1.default.Bimface.Tiles.UI.Select({
            values: precisionOptions12,
            onChange: function (data) {
                _this.precision.area = data.value;
                _this.updateMeasureSetting();
            },
            defaultIndex: this.precision.area
        });
        this.areaUnitSelect = new Glodon_1.default.Bimface.Tiles.UI.Select({
            values: unitOptions2,
            onChange: function (data) {
                _this.units.area = data.value;
                _this.updateMeasureSetting();
            },
            defaultIndex: unitOptions2.findIndex((function (item) { return item.value == _this.units.area; })),
        });
        // 角度, 角度精度选项[0, 3]
        var precisionOptions3 = [];
        for (var i = 0; i < 4; i++) {
            var option = {
                text: i ? (1 / (Math.pow(10, i))) : i,
                value: i,
            };
            precisionOptions3.push(option);
        }
        var angleLabel = new Glodon_1.default.Bimface.Tiles.UI.Label({
            text: window.BimfaceLanguage.bf_panel_measure_angle
        });
        this.anglePrecisionSelect = new Glodon_1.default.Bimface.Tiles.UI.Select({
            values: precisionOptions3,
            onChange: function (data) {
                _this.precision.angle = data.value;
                _this.updateMeasureSetting();
            },
            defaultIndex: this.precision.angle,
        });
        // 经纬度, 经纬度精度选项[0, 9]
        var precisionOptions4 = [];
        for (var i = 0; i < 10; i++) {
            var option = {
                text: i ? (1 / (Math.pow(10, i))).toFixed(i) : i,
                value: i,
            };
            precisionOptions4.push(option);
        }
        var latLonLabel = new Glodon_1.default.Bimface.Tiles.UI.Label({
            text: window.BimfaceLanguage.bf_panel_measure_latlon
        });
        this.latLonPrecisionSelect = new Glodon_1.default.Bimface.Tiles.UI.Select({
            values: precisionOptions4,
            onChange: function (data) {
                _this.precision.latLon = data.value;
                _this.updateMeasureSetting();
            },
            defaultIndex: this.precision.latLon,
        });
        var tableControl = new Control_1.Control({
            elementParam: {
                elementType: 'table',
                className: 'content-table'
            }
        });
        tableControl.setHTML("<thead><tr>\n        <th></th>\n        <th>" + window.BimfaceLanguage.bf_panel_measure_precision + "</th>\n        <th>" + window.BimfaceLanguage.bf_panel_measure_units + "</th>\n      </thead></tr>\n      <tr>\n        <td><Control id=\"distanceLabel\"></Control></td>\n        <td><Control id=\"distancePrecisionSelect\"></Control></td>\n        <td><Control id=\"disatanceUnitSelect\"></Control></td>\n      </tr>\n      <tr>\n        <td><Control id=\"areaLabel\"></Control></td>\n        <td><Control id=\"areaPrecisionSelect\"></Control></td>\n        <td><Control id=\"areaUnitSelect\"></Control></td>\n      </tr>\n      <tr>\n        <td><Control id=\"angleLabel\"></Control></td>\n        <td><Control id=\"anglePrecisionSelect\"></Control></td>\n        <td>\u00B0</td>\n      </tr>\n      <tr>\n        <td><Control id=\"latLonLabel\"></Control></td>\n        <td><Control id=\"latLonPrecisionSelect\"></Control></td>\n        <td>\u00B0</td>\n      </tr>", {
            distanceLabel: distanceLabel,
            distancePrecisionSelect: this.distancePrecisionSelect, disatanceUnitSelect: this.disatanceUnitSelect,
            areaLabel: areaLabel,
            areaPrecisionSelect: this.areaPrecisionSelect, areaUnitSelect: this.areaUnitSelect,
            angleLabel: angleLabel,
            anglePrecisionSelect: this.anglePrecisionSelect,
            latLonLabel: latLonLabel,
            latLonPrecisionSelect: this.latLonPrecisionSelect,
        });
        var panelBody = this.getElement().getContent();
        panelBody.addControl(tableControl);
    };
    // 初始化面板Footer
    MeasureSettingPanel.prototype.initFooter = function () {
        var _this = this;
        var resetBtn = new Glodon_1.default.Bimface.Tiles.UI.Button({
            elementParam: {
                className: 'is-text reset-btn'
            },
            text: window.BimfaceLanguage.bf_panel_settings_restore,
            clickCallback: function () {
                _this.resetMeasureSetting();
            }
        });
        var footerRow = new Glodon_1.default.Bimface.Tiles.UI.Row({
            justifyContent: 'End',
        });
        footerRow.addControl(resetBtn);
        var panelFooter = this.getElement().getFooter();
        panelFooter.addControl(footerRow);
    };
    // 更新测量设置
    MeasureSettingPanel.prototype.updateMeasureSetting = function () {
        this._measure.setUnits(this.units);
        this._measure.setPrecision(this.precision);
    };
    // 重置测量设置
    MeasureSettingPanel.prototype.resetMeasureSetting = function () {
        this.units = {
            distance: window.Glodon.Bimface.Common.Units.LengthUnits.Meter,
            elevation: window.Glodon.Bimface.Common.Units.LengthUnits.Meter,
            area: window.Glodon.Bimface.Common.Units.LengthUnits.Meter,
        };
        this.precision = {
            distance: 3,
            elevation: 3,
            area: 3,
            angle: 2,
            latLon: 9,
        };
        this.distancePrecisionSelect.setSelectedByValue(this.precision.distance);
        this.disatanceUnitSelect.setSelectedByValue(this.units.distance);
        this.areaPrecisionSelect.setSelectedByValue(this.precision.distance);
        this.areaUnitSelect.setSelectedByValue(this.units.area);
        this.anglePrecisionSelect.setSelectedByValue(this.precision.angle);
        this.latLonPrecisionSelect.setSelectedByValue(this.precision.latLon);
        this.updateMeasureSetting();
    };
    return MeasureSettingPanel;
}(UIModule_1.UIModule));
exports.default = MeasureSettingPanel;

},{"../../../../Common/Glodon":50,"../../../../UI/Control":57,"../../../../UI/ControlAnchor/ControlAnchor":59,"../../UIModule":44}],26:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIModule_1 = require("../../UIModule");
var PropertyPanel_1 = require("../../../../UI/ControlGroups/PropertyPanel/PropertyPanel");
var ControlAnchor_1 = require("../../../../UI/ControlAnchor/ControlAnchor");
var PropertyPanel = /** @class */ (function (_super) {
    __extends(PropertyPanel, _super);
    function PropertyPanel(config) {
        var _this = this;
        config.type = 'Panel';
        config.config = window.Object.assign({}, {
            sizeFixed: false,
            draggable: true,
            width: 300,
            height: 416
        }, config.config);
        _this = _super.call(this, config) || this;
        var panel = _this._element;
        panel.setTitle("" + window.BimfaceLanguage.bfui_button_property);
        panel.addClass('bfui-panel-property');
        _this.init();
        _this.propertyPanel = new PropertyPanel_1.PropertyControl({ parent: panel });
        !config.config.customParent && _this.getUIManager().addControl(panel, { position: { anchor: ControlAnchor_1.default.TopRight, offset: { x: -10, y: 10 } } });
        _this.initProperty();
        return _this;
    }
    PropertyPanel.prototype.getSingleSelection = function (selectChangeRes) {
        var singleSelection;
        this.getViewer().getModels().some(function (model) {
            var ids = [];
            if (selectChangeRes) {
                ids = selectChangeRes[model.modelId] || [];
            }
            else {
                ids = model.getSelectedComponents();
            }
            if (!singleSelection && ids.length === 1) {
                singleSelection = { modelId: model.modelId, id: ids[0] };
            }
            else if (ids.length > 1 || (ids.length === 1 && singleSelection && singleSelection.id !== ids[0])) {
                singleSelection = undefined;
                return true;
            }
        });
        return singleSelection;
    };
    PropertyPanel.prototype.init = function () {
        var _this = this;
        var viewerEvent = window.Glodon.Bimface.Viewer.ViewerGISEvent;
        this.getViewer().addEventListener(viewerEvent.ComponentsSelectionChanged, function (data) {
            if (data.objectType === "Component") {
                _this.initProperty();
            }
            else {
                _this.setPropertyData();
            }
        });
    };
    PropertyPanel.prototype.initProperty = function () {
        var singleSelection = this.getSingleSelection();
        var panel = this._element;
        if (!singleSelection) {
            panel.setTips(window.BimfaceLanguage.bf_panel_props_propSel);
            return;
        }
        this.getProperty(singleSelection);
    };
    PropertyPanel.prototype.getProperty = function (singleSelection) {
        var _this = this;
        this._element.setTips(window.BimfaceLanguage.bf_panel_modelTree_loading, "loading");
        var elementId = singleSelection.id.split('.')[1] || singleSelection.id;
        this.getViewer().getModel(singleSelection.modelId).getComponentProperty(elementId, function (datas) {
            _this.setPropertyData(datas.properties);
        }, function (datas) {
            _this._element.setTips(window.BimfaceLanguage.bf_panel_props_noProps);
        });
    };
    // 设置属性数据
    PropertyPanel.prototype.setPropertyData = function (data) {
        var panel = this._element;
        if (data) {
            panel.clearContent();
            this.propertyPanel.createCollapse(data);
            panel.getContent().addControl(this.propertyPanel);
        }
        else {
            panel.setTips(window.BimfaceLanguage.bf_panel_props_propSel);
        }
    };
    // 获取属性数据
    PropertyPanel.prototype.getPropertyData = function (data) {
    };
    // 清除属性数据
    PropertyPanel.prototype.clear = function () {
    };
    return PropertyPanel;
}(UIModule_1.UIModule));
exports.default = PropertyPanel;

},{"../../../../UI/ControlAnchor/ControlAnchor":59,"../../../../UI/ControlGroups/PropertyPanel/PropertyPanel":61,"../../UIModule":44}],27:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../../../UI/Control");
var Dom_1 = require("../../../../UI/Dom");
var Input_1 = require("../../../../UI/Controls/Input/Input");
var WalkthroughPointMng_1 = require("./WalkthroughPointMng");
var CreateWalkthrough = /** @class */ (function (_super) {
    __extends(CreateWalkthrough, _super);
    function CreateWalkthrough(param) {
        var _this = this;
        var elementParam = {
            elementType: 'div',
            className: 'bfui-walkthrough-create'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Collapse',
        };
        _this = _super.call(this, controlParam) || this;
        _this.viewer = param.viewer;
        _this.walkthroughManager = param.walkthroughManager;
        var pathName = _this.pathName = new Input_1.default().addClass('bfui-walkthrough-info-input');
        var pathTime = _this.pathTime = new Input_1.default().addClass('bfui-walkthrough-info-time');
        pathTime.getDomElement().attribute({ type: 'number', min: 1, max: 120 });
        var playBtn = _this.playBtn = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-walkthrough-control ' });
        playBtn.html("<i class=\"bfui-walkthrough-icon-play\"></i><span>" + window.BimfaceLanguage.bf_panel_nav_playnav + "</span>");
        var stopBtn = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-walkthrough-control' });
        stopBtn.hide().html("<i class=\"bfui-walkthrough-icon-stop\"></i><span>" + window.BimfaceLanguage.bf_panel_nav_stop + "</span>");
        var addBtn = new Dom_1.Dom().createElement({ elementType: 'span', className: 'bfui-walkthrough-add' }).html("<i class=\"bf-icon-add\"></i><span>" + window.BimfaceLanguage.bf_panel_nav_addKeyframe + "</span>");
        var delBtn = new Dom_1.Dom().createElement({ elementType: 'span', className: 'bfui-walkthrough-clear' }).html("" + window.BimfaceLanguage.bf_panel_nav_clearKeyframe);
        var tip = _this.tip = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-walkthrough-panel-tips' }).html("" + window.BimfaceLanguage.bf_panel_nav_addHere);
        var walkthroughPointMngWrap = _this.walkthroughPointMngWrap = new Dom_1.Dom().createElement({ elementType: 'div', className: '' });
        _this.setHTML("\n    <div class=\"bfui-walkthrough-info\">\n      <div class=\"bfui-walkthrough-info-row\"><span class=\"bfui-walkthrough-info-label\">" + window.BimfaceLanguage.bf_panel_nav_name + "</span><Control id=\"name_input\" ></Control></div>\n      <div class=\"bfui-walkthrough-info-row\"><span class=\"bfui-walkthrough-info-label\">" + window.BimfaceLanguage.bf_panel_nav_time + "</span><div class=\"bfui-walkthrough-info-input\"><Control id=\"time_input\" ></Control><span class=\"bfui-walkthrough-info-timespan\">s</span></div></div>\n    </div>\n    <div class=\"bfui-walkthrough-title\"><Control id=\"addBtn\" ></Control><Control id=\"delBtn\" ></Control></div>\n      <Control id=\"tip\" ></Control>\n      <Control id=\"walkthroughPointMngWrap\" ></Control>\n      <div class=\"bfui-walkthrough-foot\"><Control id=\"playBtn\" ></Control><Control id=\"stopBtn\" ></Control></div>", { name_input: pathName, time_input: pathTime, walkthroughPointMngWrap: walkthroughPointMngWrap, playBtn: playBtn, stopBtn: stopBtn, addBtn: addBtn, delBtn: delBtn, tip: tip });
        addBtn.on('click', function () {
            if (!_this.isPlaying()) {
                var camera = _this.viewer.getCameraStatus();
                var walkItemName = "" + window.BimfaceLanguage.bf_panel_nav_keyframe + _this.walkthrough.num++;
                var keyFrame = _this.walkthrough.addKeyFrame(walkItemName);
                _this.walkthroughPointMng.addItem({ walkItemName: walkItemName, keyFrame: keyFrame, camera: camera });
            }
        });
        delBtn.on('click', function () {
            if (!_this.isPlaying()) {
                _this.walkthroughPointMng.removeAll();
            }
        });
        playBtn.on('click', function () {
            if (_this.active) {
                _this.play(true);
            }
        });
        stopBtn.on('click', function () {
            _this.play(false);
            _this.walkthroughPointMng.selected();
        });
        _this.addEvent('isPlaying', function (isPlaying) {
            _this.pathName.enabled(!isPlaying);
            _this.pathTime.enabled(!isPlaying);
            if (isPlaying) {
                stopBtn.show();
                playBtn.hide();
            }
            else {
                stopBtn.hide();
                playBtn.show();
            }
        });
        _this.config = param;
        return _this;
    }
    CreateWalkthrough.prototype.updateBtn = function () {
        this.active && this.playBtn.removeClass('bfui-walkthrough-disabled') || this.playBtn.addClass('bfui-walkthrough-disabled');
    };
    CreateWalkthrough.prototype.isPlaying = function () {
        return this.config.panel.isPlaying;
    };
    CreateWalkthrough.prototype.update = function (walkthrough, edit, data) {
        var _this = this;
        this.pathName.setValue(walkthrough._walkthrough.getName()).removeClass('bfui-walkthrough-info-input-invalid');
        this.pathTime.setValue(walkthrough._walkthrough.walkthroughTime);
        var timeParent = new Dom_1.Dom(this.pathTime.getDomElement().getParent());
        timeParent.removeClass('bfui-walkthrough-info-input-invalid');
        this.pathName.onChange(function (value) {
            if (value == '') {
                _this.pathName.addClass('bfui-walkthrough-info-input-invalid');
            }
            else {
                _this.pathName.removeClass('bfui-walkthrough-info-input-invalid');
                walkthrough._walkthrough.setName(value);
            }
        });
        this.pathTime.onChange(function (value) {
            if (value == '' || value < 1) {
                timeParent.addClass('bfui-walkthrough-info-input-invalid');
            }
            else {
                timeParent.removeClass('bfui-walkthrough-info-input-invalid');
                walkthrough._walkthrough.setWalkthroughTime(value);
            }
        });
        var walkthroughPointMng = this.walkthroughPointMng = new WalkthroughPointMng_1.default({ tip: this.tip, data: data.walkthroughPointMng, viewer: this.viewer, parentControl: this });
        this.active = this.walkthroughPointMng.group.length > 1;
        this.updateBtn();
        this.walkthroughPointMngWrap.html('');
        this.walkthroughPointMngWrap.append(walkthroughPointMng.getDomElement());
        this.walkthrough = walkthrough;
        this.walkthrough.num = this.walkthroughPointMng.group.length;
        walkthrough.stopCallback(function () {
            _this.fireEvent('isPlaying', false);
            walkthroughPointMng.selected();
        });
        walkthrough.setKeyFrameCallback(function (index) {
            walkthroughPointMng.setSelectedPoint(index);
        });
        this.edit = edit;
        walkthroughPointMng.addEvent('play', function (keyframe) {
            _this.play(true, keyframe);
        });
        walkthroughPointMng.addEvent('notify', function (actived) {
            _this.active = actived;
            _this.updateBtn();
        });
    };
    CreateWalkthrough.prototype.play = function (play, keyframe) {
        if (this.pathName.getValue() == '') {
            this.pathName.setValue(this.walkthrough._walkthrough.name);
            this.pathName.removeClass('bfui-walkthrough-info-input-invalid');
        }
        var time = this.pathTime.getValue();
        if (time == '' || time < 1) {
            this.pathTime.setValue(this.walkthrough._walkthrough.walkthroughTime);
            new Dom_1.Dom(this.pathTime.getDomElement().getParent()).removeClass('bfui-walkthrough-info-input-invalid');
        }
        this.fireEvent('isPlaying', play);
        if (play) {
            this.walkthrough.play(keyframe && keyframe.id);
        }
        else {
            this.walkthrough.stop();
        }
    };
    CreateWalkthrough.prototype.getPath = function () {
        return { walkthrough: this.walkthrough, walkthroughPointMng: this.walkthroughPointMng, edit: this.edit };
    };
    return CreateWalkthrough;
}(Control_1.Control));
exports.default = CreateWalkthrough;

},{"../../../../UI/Control":57,"../../../../UI/Controls/Input/Input":69,"../../../../UI/Dom":81,"./WalkthroughPointMng":33}],28:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../../../UI/Control");
var Dom_1 = require("../../../../UI/Dom");
var WalkthroughPathMng_1 = require("./WalkthroughPathMng");
var WalkthroughList = /** @class */ (function (_super) {
    __extends(WalkthroughList, _super);
    function WalkthroughList(param) {
        var _this = this;
        var elementParam = {
            elementType: 'div',
            className: 'bfui-walkthrough-list'
        };
        var controlParam = {
            elementParam: elementParam,
            type: '',
        };
        _this = _super.call(this, controlParam) || this;
        var tip = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-panel-tips' }).html(window.BimfaceLanguage.bf_panel_nav_addWalkthroughHere);
        var walkthroughPathMng = _this.walkthroughPathMng = new WalkthroughPathMng_1.default({ tip: tip, viewer: param.viewer });
        _this.setHTML("\n      <Control id=\"tip\" ></Control>\n      <Control id=\"walkthroughPathMng\" ></Control>\n     ", { walkthroughPathMng: walkthroughPathMng, tip: tip });
        //  walkthroughPathMng.addItem();
        walkthroughPathMng.addEvent('notify', function (actived) {
        });
        walkthroughPathMng.addEvent('edit', function (data) {
            _this.fireEvent('edit', data);
        });
        walkthroughPathMng.addEvent('play', function (data) {
            _this.fireEvent('isPlaying', true);
        });
        walkthroughPathMng.addEvent('pause', function (data) {
            _this.fireEvent('isPlaying', false);
        });
        walkthroughPathMng.addEvent('stop', function (walkthroughPath) {
            _this.fireEvent('stop');
            walkthroughPath && walkthroughPath.showPlay();
        });
        _this.config = param;
        return _this;
    }
    WalkthroughList.prototype.updatePathItem = function (data) {
        this.walkthroughPathMng.updateItem(data);
    };
    WalkthroughList.prototype.addPathItem = function (data) {
        this.walkthroughPathMng.addItem(data);
    };
    return WalkthroughList;
}(Control_1.Control));
exports.default = WalkthroughList;

},{"../../../../UI/Control":57,"../../../../UI/Dom":81,"./WalkthroughPathMng":31}],29:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIModule_1 = require("../../UIModule");
var WalkthroughList_1 = require("./WalkthroughList");
var CreateWalkthrough_1 = require("./CreateWalkthrough");
var ControlAnchor_1 = require("../../../../UI/ControlAnchor/ControlAnchor");
var Dom_1 = require("../../../../UI/Dom");
var WalkthroughPanel = /** @class */ (function (_super) {
    __extends(WalkthroughPanel, _super);
    function WalkthroughPanel(config) {
        var _this = this;
        config.type = 'Panel';
        config.config = window.Object.assign({}, {
            sizeFixed: true,
            draggable: true,
            width: 300,
            height: 410
        }, config.config);
        _this = _super.call(this, config) || this;
        var panel = _this._element;
        panel.setTitle(window.BimfaceLanguage.bf_panel_nav_walkthrough);
        panel.addClass('bfui-panel-walkthrough');
        _this.num = 0;
        _this.init();
        _this.isPlaying = false;
        // this.walkthroughPanel = new WalkthroughControl({ parent: panel });
        _this.getUIManager().addControl(panel, { position: { anchor: ControlAnchor_1.default.TopRight, offset: { x: -10, y: 10 } } });
        _this.createWalkthrough.addEvent('isPlaying', function (isPlaying) {
            _this.updatePlayStatus(isPlaying);
        });
        _this.walkthroughList.addEvent('isPlaying', function (isPlaying) {
            _this.updatePlayStatus(isPlaying);
        });
        return _this;
    }
    WalkthroughPanel.prototype.updatePlayStatus = function (isPlaying) {
        if (isPlaying === void 0) { isPlaying = this.isPlaying; }
        var content = this._element.getContent();
        if (isPlaying) {
            content.addClass('bfui-walkthrough-playing');
            this.create.addClass('bfui-walkthrough-disabled');
            this.back.addClass('bfui-walkthrough-disabled');
        }
        else {
            content.removeClass('bfui-walkthrough-playing');
            this.create.removeClass('bfui-walkthrough-disabled');
            this.back.removeClass('bfui-walkthrough-disabled');
        }
        this.isPlaying = isPlaying;
    };
    WalkthroughPanel.prototype.init = function () {
        var _this = this;
        var config = new window.Glodon.Bimface.Plugins.Walkthrough.WalkthroughManagerConfig();
        config.viewer = this.getViewer();
        var walkthroughManager = this.walkthroughManager = new window.Glodon.Bimface.Plugins.Walkthrough.WalkthroughManager(config);
        var walkthroughList = this.walkthroughList = new WalkthroughList_1.default({ walkthroughManager: walkthroughManager, viewer: this.getViewer(), panel: this });
        var createWalkthrough = this.createWalkthrough = new CreateWalkthrough_1.default({ walkthroughManager: walkthroughManager, viewer: this.getViewer(), panel: this });
        var create = this.create = new Dom_1.Dom().createElement({ elementType: 'span', className: 'bfui-walkthrough-create-path-btn' }).html("<span class=\"bfui-walkthrough-create\" ><i class=\"bf-icon-create\"></i><span>" + window.BimfaceLanguage.bf_panel_nav_addWalkthrough + "</span></span>");
        var back = this.back = new Dom_1.Dom().createElement({ elementType: 'span', className: 'bfui-walkthrough-return' }).html("" + window.BimfaceLanguage.bf_panel_nav_walkthroughList);
        var panel = this._element;
        panel.getContent().setHTML("<div class=\"bfui-walkthrough-nav\"><Control id=\"btn_create\" ></Control><Control id=\"btn_return\" ></Control></div><div class=\"bfui-walkthrough-split\"></div>", { 'btn_create': create, 'btn_return': back });
        panel.getContent().addControl(this.walkthroughList).addControl(createWalkthrough);
        createWalkthrough.hide();
        back.hide().on('click', function () {
            if (_this.isPlaying) {
                return;
            }
            back.hide();
            create.show();
            createWalkthrough.hide();
            walkthroughList.show();
            var path = createWalkthrough.getPath();
            if (path.walkthroughPointMng.group.length > 0) {
                if (path.edit) {
                    walkthroughList.updatePathItem(path);
                }
                else {
                    walkthroughList.addPathItem(path);
                }
            }
            else {
                _this.num--;
            }
        });
        create.on('click', function () {
            if (_this.isPlaying) {
                return;
            }
            _this.editPath();
        });
        walkthroughList.addEvent('edit', function (data) {
            _this.editPath(data);
        });
        walkthroughList.addEvent('stop', function () {
            _this.updatePlayStatus(false);
        });
    };
    WalkthroughPanel.prototype.editPath = function (data) {
        if (data === void 0) { data = {}; }
        var datas = {
            name: data.name || window.BimfaceLanguage.bf_panel_nav_walkthrough1 + (++this.num),
            walkthroughTime: data.walkthroughTime || 20,
            walkthroughPointMng: data.walkthroughPointMng
        };
        this.create.hide();
        this.back.show();
        this.walkthroughList.hide();
        this.createWalkthrough.show();
        var walkthrough;
        if (data.walkthrough) {
            walkthrough = data.walkthrough;
            this.createWalkthrough.update(walkthrough, true, datas);
        }
        else {
            var config = new window.Glodon.Bimface.Plugins.Walkthrough.WalkthroughConfig();
            config.viewer = this.getViewer();
            walkthrough = new window.Glodon.Bimface.Plugins.Walkthrough.Walkthrough(config),
                walkthrough.setWalkthroughTime(datas.walkthroughTime);
            var currentWalkthroughId = this.walkthroughManager.addWalkthrough(datas.name, walkthrough);
            walkthrough.walkthroughId = currentWalkthroughId;
            this.createWalkthrough.update(walkthrough, false, datas);
        }
    };
    return WalkthroughPanel;
}(UIModule_1.UIModule));
exports.default = WalkthroughPanel;

},{"../../../../UI/ControlAnchor/ControlAnchor":59,"../../../../UI/Dom":81,"../../UIModule":44,"./CreateWalkthrough":27,"./WalkthroughList":28}],30:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../../../UI/Control");
var Dom_1 = require("../../../../UI/Dom");
var WalkthroughPath = /** @class */ (function (_super) {
    __extends(WalkthroughPath, _super);
    function WalkthroughPath(param) {
        var _this = this;
        var elementParam = {
            elementType: 'div',
            className: 'bfui-walkthrough-li'
        };
        var controlParam = {
            elementParam: elementParam,
            id: param.id,
            type: 'WalkthroughPath',
        };
        _this = _super.call(this, controlParam) || this;
        _this.data = {
            name: param.walkthrough._walkthrough.getName(),
            walkthroughTime: param.walkthrough._walkthrough.walkthroughTime,
            walkthrough: param.walkthrough,
            walkthroughPointMng: param.walkthroughPointMng
        };
        var play = _this.playBtn = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-walkthrough-play' });
        var stop = _this.stopBtn = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-walkthrough-stop' }).hide();
        var edit = new Dom_1.Dom().createElement({ elementType: 'span', className: 'bfui-walkthrough-button' }).html("" + window.BimfaceLanguage.bf_general_edit);
        var del = new Dom_1.Dom().createElement({ elementType: 'span', className: 'bfui-walkthrough-button' }).html("" + window.BimfaceLanguage.bf_general_delete);
        var name = _this.pathName = new Dom_1.Dom().createElement({ elementType: 'span', className: 'bfui-walkthrough-name' }).html(_this.data.name);
        _this.setHTML("<Control id=\"play\" ></Control><Control id=\"stop\" ></Control><Control id=\"name\" ></Control><div class=\"bfui-walkthrough-box\"><Control id=\"edit\" ></Control><Control id=\"del\" ></Control></div>", { play: play, stop: stop, edit: edit, del: del, name: name });
        del.on('click', function () {
            param.manage.fireEvent('delete', _this.getId());
        });
        edit.on('click', function (evt) {
            evt.stopPropagation();
            param.manage.fireEvent('edit', _this.data, _this.getId());
        });
        play.on('click', function (evt) {
            evt.stopPropagation();
            if (_this.data.walkthroughPointMng.group.length > 1) {
                _this.showPlay(false);
                param.manage.fireEvent('play', _this, _this.getId());
            }
        });
        stop.on('click', function (evt) {
            evt.stopPropagation();
            _this.showPlay();
            param.manage.fireEvent('pause', _this.data, _this.getId());
        });
        _this.getDomElement().on('click', function () {
            param.manage.fireEvent('selected', _this.getId(), _this);
        });
        return _this;
    }
    WalkthroughPath.prototype.showPlay = function (showPlay) {
        if (showPlay === void 0) { showPlay = true; }
        if (showPlay) {
            this.playBtn.show();
            this.stopBtn.hide();
        }
        else {
            this.playBtn.hide();
            this.stopBtn.show();
        }
    };
    return WalkthroughPath;
}(Control_1.Control));
exports.default = WalkthroughPath;

},{"../../../../UI/Control":57,"../../../../UI/Dom":81}],31:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../../../UI/Control");
var WalkthroughPath_1 = require("./WalkthroughPath");
var WalkthroughPathMng = /** @class */ (function (_super) {
    __extends(WalkthroughPathMng, _super);
    function WalkthroughPathMng(param) {
        var _this = this;
        var elementParam = {
            elementType: 'ul',
            className: 'bfui-walkthrough-path-list bf-scroll-bar'
        };
        var controlParam = {
            elementParam: elementParam,
            type: '',
        };
        _this = _super.call(this, controlParam) || this;
        _this.tip = param.tip;
        _this.group = [];
        _this.num = 0;
        _this.flying = false;
        _this.viewer = param.viewer;
        _this.addEvent('delete', function (id) {
            _this.deleteItem(id);
        });
        _this.addEvent('selected', function (id, walkthroughPath) {
            if (_this.flying) {
                if (id == _this.selectedId) {
                    walkthroughPath.data.walkthrough.stop();
                }
                else {
                    _this.currentWalkthrough.data.walkthrough.pause();
                    _this.currentWalkthrough.showPlay();
                }
            }
            _this.selected(id);
        });
        _this.addEvent('play', function (walkthroughPath, id) {
            if (_this.flying) {
                _this.currentWalkthrough.data.walkthrough.pause();
                _this.currentWalkthrough.showPlay();
            }
            _this.setStopCallback(walkthroughPath);
            _this.selected(id, true);
            walkthroughPath.data.walkthrough.play();
            _this.flying = true;
        });
        _this.addEvent('pause', function (data, id) {
            _this.selected(id, true);
            data.walkthrough.pause();
            _this.flying = false;
        });
        _this.addEvent('edit', function (data, id) {
            _this.selected(id);
        });
        return _this;
    }
    WalkthroughPathMng.prototype.selected = function (id, pure) {
        var _this = this;
        this.group.map(function (i) {
            if (i.getId() == id) {
                i.addClass('bfui-walkthrough-selected');
                _this.selectedId = id;
                _this.currentWalkthrough = i;
                !pure && _this.viewer.setCameraStatus(i.data.walkthroughPointMng.group[0].camera);
            }
            else {
                i.removeClass('bfui-walkthrough-selected');
            }
        });
        if (!pure) {
            this.flying = false;
            this.currentWalkthrough.data.walkthrough.stop();
            this.fireEvent('stop', this.currentWalkthrough);
        }
    };
    WalkthroughPathMng.prototype.updateItem = function (data) {
        data.edit = false;
        var dom = this.group.filter(function (i) { return i.data.walkthrough.walkthroughId == data.walkthrough.walkthroughId; })[0];
        dom.pathName.html(data.walkthrough._walkthrough.getName());
        dom.data.walkthroughPointMng = data.walkthroughPointMng.getData();
        this.setStopCallback(dom);
    };
    WalkthroughPathMng.prototype.setStopCallback = function (walkthroughPath) {
        var _this = this;
        walkthroughPath.data.walkthrough.stopCallback(function () {
            _this.fireEvent('stop', walkthroughPath);
            _this.flying = false;
        });
    };
    WalkthroughPathMng.prototype.addItem = function (data) {
        var item = new WalkthroughPath_1.default({ id: this.num, walkthrough: data.walkthrough, manage: this, walkthroughPointMng: data.walkthroughPointMng.getData() });
        this.getDomElement().append(item.getDomElement());
        this.setStopCallback(item);
        this.group.push(item);
        this.selected(this.num, true);
        this.num++;
        this.update();
    };
    WalkthroughPathMng.prototype.removeAll = function () {
        this.group = [];
        this.update();
    };
    WalkthroughPathMng.prototype.deleteItem = function (id) {
        this.group = this.group.filter(function (i) {
            if (i.getId() == id) {
                i.destroy();
                return false;
            }
            else {
                return true;
            }
        });
        this.update();
    };
    WalkthroughPathMng.prototype.update = function () {
        if (this.group.length == 0) {
            this.tip.show();
        }
        else {
            this.tip.hide();
        }
        this.fireEvent('notify', this.group.length > 1);
    };
    return WalkthroughPathMng;
}(Control_1.Control));
exports.default = WalkthroughPathMng;

},{"../../../../UI/Control":57,"./WalkthroughPath":30}],32:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../../../UI/Control");
var Dom_1 = require("../../../../UI/Dom");
var WalkthroughPoint = /** @class */ (function (_super) {
    __extends(WalkthroughPoint, _super);
    function WalkthroughPoint(param) {
        var _this = this;
        var elementParam = {
            elementType: 'div',
            className: 'bfui-walkthrough-li'
        };
        var controlParam = {
            elementParam: elementParam,
            id: param.id,
            type: 'WalkthroughPoint',
        };
        _this = _super.call(this, controlParam) || this;
        _this.name = param.name || "" + (window.BimfaceLanguage.bf_panel_nav_keyframe + param.id);
        _this.config = param;
        var play = new Dom_1.Dom().createElement({ elementType: 'span', className: 'bfui-walkthrough-button bfui-walkthrough-play' }).html("" + window.BimfaceLanguage.bf_panel_nav_play);
        var del = new Dom_1.Dom().createElement({ elementType: 'span', className: 'bfui-walkthrough-button' }).html("" + window.BimfaceLanguage.bf_general_delete);
        _this.setHTML("<span class=\"bfui-walkthrough-name\">" + _this.name + "</span><div class=\"bfui-walkthrough-box\"><Control id=\"play\" ></Control><Control id=\"del\" ></Control></div>", { play: play, del: del });
        del.on('click', function () {
            _this.fireEvent('delete', _this.getId());
        });
        _this.getDomElement().on('click', function () {
            _this.fireEvent('selected', _this.getId(), _this.config.camera);
        });
        play.on('click', function (evt) {
            evt.stopPropagation();
            _this.fireEvent('play', _this.config.keyFrame);
        });
        return _this;
    }
    WalkthroughPoint.prototype.getData = function () {
        return {
            name: this.name,
            id: this.id,
            walkItemName: this.config.walkItemName,
            keyFrame: this.config.keyFrame,
            camera: this.config.camera
        };
    };
    return WalkthroughPoint;
}(Control_1.Control));
exports.default = WalkthroughPoint;

},{"../../../../UI/Control":57,"../../../../UI/Dom":81}],33:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../../../UI/Control");
var WalkthroughPoint_1 = require("./WalkthroughPoint");
var WalkthroughPointMng = /** @class */ (function (_super) {
    __extends(WalkthroughPointMng, _super);
    function WalkthroughPointMng(param) {
        var _this = this;
        var elementParam = {
            elementType: 'ul',
            className: 'bfui-walkthrough-point-list bf-scroll-bar'
        };
        var controlParam = {
            elementParam: elementParam,
            type: '',
        };
        _this = _super.call(this, controlParam) || this;
        _this.parentControl = param.parentControl;
        _this.tip = param.tip;
        _this.group = [];
        _this.num = 0;
        _this.viewer = param.viewer;
        _this.selectedId = -1;
        if (param.data) {
            var data = param.data;
            _this.num = data.num;
            data.group.map(function (item) {
                _this.addItem(item);
            });
        }
        _this.update();
        return _this;
    }
    WalkthroughPointMng.prototype.setSelectedPoint = function (index) {
        this.selected(this.group[index].getId());
    };
    WalkthroughPointMng.prototype.selected = function (id) {
        this.group.map(function (i) {
            if (i.getId() == id) {
                i.addClass('bfui-walkthrough-selected');
            }
            else {
                i.removeClass('bfui-walkthrough-selected');
            }
        });
        this.selectedId = id;
    };
    WalkthroughPointMng.prototype.addItem = function (data) {
        var _this = this;
        if (data === void 0) { data = {}; }
        var info = window.Object.assign({}, {
            id: data.id || this.num,
            name: data.name,
        }, data);
        var item = new WalkthroughPoint_1.default(info);
        item.addEvent('delete', function (id) {
            _this.deleteItem(id);
        });
        item.addEvent('play', function (keyframe) {
            _this.fireEvent('play', keyframe);
        });
        item.addEvent('selected', function (id, camera) {
            if (!_this.parentControl.isPlaying()) {
                _this.selected(id);
                _this.viewer.setCameraStatus(camera);
            }
        });
        var index, len = this.group.length, lastedId = len && this.group[len - 1].getId(), dom = this.group.filter(function (item, idx) {
            if (item.getId() == _this.selectedId) {
                index = idx;
                return true;
            }
            return false;
        });
        if (this.selectedId > -1 && this.selectedId != lastedId) {
            this.getDomElement().getElement().insertBefore(item.getDomElement().getElement(), dom[0].getDomElement().getElement().nextSibling || dom[0].getDomElement().getElement());
            this.group.splice(index + 1, 0, item);
            this.sortKeyframe(index);
            this.selected(this.selectedId);
        }
        else {
            this.getDomElement().append(item.getDomElement());
            this.group.push(item);
        }
        !data.name && this.num++;
        this.update();
    };
    WalkthroughPointMng.prototype.sortKeyframe = function (index) {
        var walkthrough = this.parentControl.walkthrough, lists = walkthrough.getKeyFrames(), last = lists.pop();
        lists.splice(index + 1, 0, last);
        walkthrough.setKeyFrames(lists);
    };
    WalkthroughPointMng.prototype.getData = function () {
        var group = [];
        this.group.map(function (item) {
            group.push(item.getData());
        });
        return {
            num: this.num,
            group: group
        };
    };
    WalkthroughPointMng.prototype.removeAll = function () {
        this.parentControl.walkthrough.clearKeyFrames();
        this.group = [];
        this.selectedId = -1;
        this.setHTML('');
        this.update();
    };
    WalkthroughPointMng.prototype.deleteItem = function (id) {
        var _this = this;
        this.group = this.group.filter(function (i, idx) {
            if (i.getId() == id) {
                _this.parentControl.walkthrough.removeKeyFrame(idx);
                i.destroy();
                return false;
            }
            else {
                return true;
            }
        });
        this.update();
    };
    WalkthroughPointMng.prototype.update = function () {
        this.selected(-1);
        if (this.group.length == 0) {
            this.tip.show();
        }
        else {
            this.tip.hide();
        }
        this.fireEvent('notify', this.group.length > 1);
    };
    WalkthroughPointMng.prototype.setData = function (data) {
        if (data === undefined) {
            this.num = 0;
            this.removeAll();
        }
        else {
            this.num = data.num;
        }
    };
    return WalkthroughPointMng;
}(Control_1.Control));
exports.default = WalkthroughPointMng;

},{"../../../../UI/Control":57,"./WalkthroughPoint":32}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Theme;
(function (Theme) {
    Theme["Default"] = "";
    Theme["Red"] = "bfui-theme-red";
    Theme["Blue"] = "bfui-theme-blue";
})(Theme || (Theme = {}));
exports.default = Theme;

},{}],35:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MainToolbar = void 0;
var Toolbar_1 = require("./Toolbar");
var MainToolbar = /** @class */ (function (_super) {
    __extends(MainToolbar, _super);
    function MainToolbar(config) {
        var _this = this;
        config.name = 'MainToolbar';
        config.config.isHorizontal = config.config.isHorizontal === true;
        config.config.isFullLength = config.config.isFullLength !== false;
        _this = _super.call(this, config) || this;
        return _this;
    }
    return MainToolbar;
}(Toolbar_1.Toolbar));
exports.MainToolbar = MainToolbar;

},{"./Toolbar":40}],36:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubToolbar = void 0;
var Toolbar_1 = require("./Toolbar");
var SubToolbar = /** @class */ (function (_super) {
    __extends(SubToolbar, _super);
    function SubToolbar(config) {
        var _this = this;
        config.config.isHorizontal = config.config.isHorizontal === true;
        config.config.isFullLength = false;
        _this = _super.call(this, config) || this;
        _this.toolbar = config.toolbar;
        _this.getElement().addClass('bfui-subtoolbar');
        config.modules && _this.loadModules(config.modules);
        _this._isVisible = config.isVisible === true;
        !_this._isVisible && _this.hide();
        return _this;
    }
    SubToolbar.prototype.show = function () {
        if (this.getEnableUIAnimation()) {
            var dom = this.getElement().getDomElement();
            dom.css('height', this._height + "px").removeClass('bfui-subtoolbar-hide');
        }
        else {
            _super.prototype.show.call(this);
        }
        this._isVisible = true;
        return this;
    };
    SubToolbar.prototype.hide = function () {
        var dom = this.getElement().getDomElement();
        if (this.getEnableUIAnimation()) {
            if (!this._height) { // 初始化设置_height
                this._height = this.getElement().getHeight();
                dom.addClass('bfui-subtoolbar-hide').css({ 'height': "0px" });
                requestAnimationFrame(function () { return dom.addClass('bfui-transition'); });
            }
            else { // 后续直接hide
                dom.addClass('bfui-subtoolbar-hide').css({ 'height': "0px" });
            }
        }
        else {
            _super.prototype.hide.call(this);
        }
        this._isVisible = false;
        return this;
    };
    SubToolbar.prototype.isVisible = function () {
        return this._isVisible;
    };
    return SubToolbar;
}(Toolbar_1.Toolbar));
exports.SubToolbar = SubToolbar;

},{"./Toolbar":40}],37:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Toolbar_1 = require("./Toolbar");
var SubToolbarAreaMeasure = /** @class */ (function (_super) {
    __extends(SubToolbarAreaMeasure, _super);
    function SubToolbarAreaMeasure(config) {
        var _this = this;
        config.name = 'SubToolbarAreaMeasure';
        config.config.isHorizontal = true;
        config.config.isFullLength = false;
        config.config.elementParam = {
            className: 'area-measure-subtoolbar'
        };
        _this = _super.call(this, config) || this;
        _this.init();
        return _this;
    }
    SubToolbarAreaMeasure.prototype.init = function () {
        var webApplicationConfig = this.getWebApplication().getConfig(), mainToolbarConfig = webApplicationConfig.toolbars.mainToolbar, measureConfig = mainToolbarConfig.create === true && mainToolbarConfig.items.Measure, subToolbarCofig = measureConfig.create === true && measureConfig.items.Area;
        if (subToolbarCofig.create !== true) {
            return;
        }
        var childrenButtons = subToolbarCofig.items;
        var subToolbarButtons = [];
        for (var childKey in childrenButtons) {
            var childButton = childrenButtons[childKey];
            if (childButton.create) {
                var childParam = { type: 'Button', name: "Measure" + childKey };
                subToolbarButtons.push(childParam);
            }
        }
        this.loadModules(subToolbarButtons);
    };
    return SubToolbarAreaMeasure;
}(Toolbar_1.Toolbar));
exports.default = SubToolbarAreaMeasure;

},{"./Toolbar":40}],38:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Toolbar_1 = require("./Toolbar");
var SubToolbarDistanceMeasure = /** @class */ (function (_super) {
    __extends(SubToolbarDistanceMeasure, _super);
    function SubToolbarDistanceMeasure(config) {
        var _this = this;
        config.name = 'SubToolbarDistanceMeasure';
        config.config.isHorizontal = true;
        config.config.isFullLength = false;
        config.config.elementParam = {
            className: 'area-measure-subtoolbar'
        };
        _this = _super.call(this, config) || this;
        _this.init();
        return _this;
    }
    SubToolbarDistanceMeasure.prototype.init = function () {
        var webApplicationConfig = this.getWebApplication().getConfig(), mainToolbarConfig = webApplicationConfig.toolbars.mainToolbar, measureConfig = mainToolbarConfig.create === true && mainToolbarConfig.items.Measure, subToolbarCofig = measureConfig.create === true && measureConfig.items.Distance;
        if (subToolbarCofig.create !== true) {
            return;
        }
        var childrenButtons = subToolbarCofig.items;
        var subToolbarButtons = [];
        for (var childKey in childrenButtons) {
            var childButton = childrenButtons[childKey];
            if (childButton.create) {
                var childParam = { type: 'Button', name: "Measure" + childKey };
                subToolbarButtons.push(childParam);
            }
        }
        this.loadModules(subToolbarButtons);
    };
    return SubToolbarDistanceMeasure;
}(Toolbar_1.Toolbar));
exports.default = SubToolbarDistanceMeasure;

},{"./Toolbar":40}],39:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var SubToolbar_1 = require("./SubToolbar");
var SubToolbarMeasure = /** @class */ (function (_super) {
    __extends(SubToolbarMeasure, _super);
    function SubToolbarMeasure(config) {
        var _this = this;
        config.name = 'SubToolbarMeasure';
        _this = _super.call(this, config) || this;
        return _this;
    }
    return SubToolbarMeasure;
}(SubToolbar_1.SubToolbar));
exports.default = SubToolbarMeasure;

},{"./SubToolbar":36}],40:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Toolbar = void 0;
var UIModule_1 = require("../UIModule");
var UIModuleMap_1 = require("../UIModuleMap");
var Control_1 = require("../../../UI/Control");
var DataUtil_1 = require("../../../Common/Utils/DataUtil");
var Toolbar = /** @class */ (function (_super) {
    __extends(Toolbar, _super);
    function Toolbar(config) {
        var _this = this;
        config.type = 'Toolbar';
        config.config.isHorizontal = config.config.isHorizontal === true;
        config.config.isFullLength = config.config.isFullLength !== false;
        _this = _super.call(this, config) || this;
        return _this;
    }
    // 加载按钮（支持已封装的UIModule和用户自定义的Control Button）
    Toolbar.prototype.loadModules = function (modules) {
        var _this = this;
        modules.forEach(function (moduleParam) {
            if (DataUtil_1.default.assertType(moduleParam, 'obj') && moduleParam.type !== undefined && moduleParam.name !== undefined) {
                var _a = moduleParam, type = _a.type, name_1 = _a.name, option = _a.option;
                if (UIModuleMap_1.default.hasOwnProperty(type) && UIModuleMap_1.default[type].hasOwnProperty(name_1)) {
                    option = option || {};
                    option.toolbar = _this;
                    _this.loadModule(type, name_1, option);
                }
            }
            else if (moduleParam instanceof Control_1.Control) {
                _this.addControl(moduleParam);
            }
        });
        return this;
    };
    Toolbar.prototype.getButton = function (name) {
        return this.getModule('Button', name) || this.getControl({ id: name });
    };
    Toolbar.prototype.getButtons = function () {
        var buttons = [];
        for (var key in this.getAllModules().Button) {
            buttons.push(this.getAllModules().Button[key]);
        }
        return buttons;
    };
    return Toolbar;
}(UIModule_1.UIModule));
exports.Toolbar = Toolbar;

},{"../../../Common/Utils/DataUtil":52,"../../../UI/Control":57,"../UIModule":44,"../UIModuleMap":45}],41:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIModule_1 = require("../UIModule");
var TreeNode_1 = require("../../../UI/Controls/Tree/TreeNode");
var LayerTree = /** @class */ (function (_super) {
    __extends(LayerTree, _super);
    function LayerTree(config) {
        var _this = this;
        config.type = 'Tree';
        _this = _super.call(this, config) || this;
        var tree = _this._element;
        var treeData = config.config.content;
        tree.addClass('bfui-tree-component');
        _this.rootNode = tree;
        // 获取当前layer
        var layerId = _this.getElement().getId().toString().split("-")[1];
        _this.currentLayer = _this.getViewer().getLayerManager().getLayer(layerId);
        // 全部节点
        var allNodeData = [{
                id: 'all',
                typeName: 'all',
                name: '全部构件',
                items: treeData
            }];
        _this.initNode(tree, allNodeData);
        return _this;
    }
    LayerTree.prototype.initNode = function (parentNode, datas) {
        var _this = this;
        datas.map(function (data, index) {
            var dataId;
            data.id ? dataId = data.id : dataId = "" + data.name + index; // 若id为空，则为名字+index拼接。此处数据需要作优化，每个都必须有唯一的id
            var isControl = parentNode.getControl({ id: dataId });
            var treeNode;
            if (isControl) {
                treeNode = isControl;
                isControl.show();
            }
            else {
                treeNode = _this.creatTreeNode(parentNode, data, index);
                parentNode === _this.rootNode ? parentNode.addTreeNode(treeNode)
                    : parentNode.addChildNode(treeNode);
            }
        });
    };
    LayerTree.prototype.creatTreeNode = function (parentNode, data, index) {
        var _this = this;
        this.instanceIds = this.setInstanceIds(data, []);
        var parentCheckState = parentNode !== this.rootNode ? parentNode.getCheckedState() : 'checked';
        var parentIsolateState = parentNode !== this.rootNode && parentNode.getIsolateState();
        var nodeConfig = {
            rootTree: this.rootNode,
            content: data,
            id: data.id || "" + data.name + index,
            type: data.type,
            hasCheckBox: true,
            hasSelection: data.typeName === 'all' ? false : true,
            hasCollapse: data.items && data.items.length > 0 ? true : false,
            hasIsolate: true,
            isExpand: data.typeName === 'all' ? true : false,
            isChecked: parentCheckState === 'unchecked' ? false : true,
            isIsolate: parentIsolateState,
            instanceIds: this.instanceIds || data
        };
        var dataName;
        data.name ? dataName = data.name : dataName = data; // 构件级 没有dataName,则就显示data
        var node = new TreeNode_1.default(nodeConfig);
        node.initTreeNode(dataName);
        nodeConfig.isExpand && data.items && this.initNode(node, data.items);
        // 监听事件
        node.on('ExpendChanged', function (node, isExpand) {
            // 普通层级
            isExpand && data.items && !data.items[0].elementIds && _this.initNode(node, data.items);
            // 构件级
            isExpand && data.items[0].elementIds && _this.initNode(node, data.items[0].elementIds);
        });
        node.on('CheckedChanged', function (node, isChecked) {
            _this.handleCheckedChanged(node, isChecked);
        });
        node.on('SelectionChanged', function (node, isSelected) {
            _this.handleSelectionChanged(node, isSelected);
        });
        node.on('IsolateChanged', function (node, isIsolate) {
            _this.currentLayer.isVisible && _this.handleIsolateChanged(node, isIsolate);
        });
        return node;
    };
    LayerTree.prototype.setInstanceIds = function (data, result) {
        if (data.items) {
            var _loop_1 = function (i) {
                if (data.items[i] && !data.items[0].elementIds) {
                    this_1.setInstanceIds(data.items[i], result);
                }
                else if (data.items[0].elementIds) {
                    var fileId_1 = data.items[0].fileId;
                    data.items[0].elementIds.map(function (item) {
                        fileId_1 ? result.push(fileId_1 + "." + item)
                            : result.push(item);
                    });
                    return "continue";
                }
            };
            var this_1 = this;
            for (var i = 0; i < data.items.length; i++) {
                _loop_1(i);
            }
        }
        else { //构建级
            result.push(data);
        }
        return result;
    };
    LayerTree.prototype.handleCheckedChanged = function (node, isChecked) {
        var model = this.currentLayer.model;
        var instanceIds = node.getInstanceIds();
        if (node.getOptions().id === 'all') {
            isChecked ? model.showAllComponents()
                : model.hideAllComponents();
        }
        else {
            isChecked ? model.showComponentsById(instanceIds)
                : model.hideComponentsById(instanceIds);
        }
        this.getViewer().render();
    };
    LayerTree.prototype.handleSelectionChanged = function (node, isSelected) {
        var instanceIds = node.getInstanceIds();
        this.currentLayer.model.clearSelectedComponents();
        if (isSelected && this.currentLayer.isVisible) {
            this.currentLayer.model.addSelectedComponentsById(instanceIds);
            this.currentLayer.model.zoomToSelectedComponents(1);
        }
        this.getViewer().render();
    };
    LayerTree.prototype.handleIsolateChanged = function (node, isIsolate) {
        var model = this.currentLayer.model;
        var instanceIds = node.getInstanceIds();
        if (node.getOptions().id === 'all') {
            isIsolate ? model.opaqueAllComponents()
                : model.transparentAllComponents();
        }
        else {
            isIsolate ? model.opaqueComponentsById(instanceIds)
                : model.transparentComponentsById(instanceIds);
        }
        this.getViewer().render();
    };
    return LayerTree;
}(UIModule_1.UIModule));
exports.default = LayerTree;

},{"../../../UI/Controls/Tree/TreeNode":80,"../UIModule":44}],42:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIModule_1 = require("../UIModule");
var TreeNode_1 = require("../../../UI/Controls/Tree/TreeNode");
var ComponentsTree_1 = require("./ComponentsTree");
var WebApplicationGISEvent_1 = require("../../WebApplicationGIS/WebApplicationGISEvent");
var LayerTree = /** @class */ (function (_super) {
    __extends(LayerTree, _super);
    function LayerTree(config) {
        var _this = this;
        config.type = 'Tree';
        _this = _super.call(this, config) || this;
        var tree = _this._element;
        var treeData = config.config.content;
        tree.addClass('bfui-tree-layer');
        _this.rootNode = tree;
        // 全部节点
        var allNodeData = [{
                id: 'all',
                typeName: 'all',
                name: '全部图层',
                children: treeData,
            }];
        _this.initNode(tree, allNodeData);
        return _this;
    }
    LayerTree.prototype.initNode = function (parentNode, datas) {
        var _this = this;
        datas.map(function (data) {
            var isControl = parentNode.getControl({ id: "" + data.id });
            var treeNode;
            if (isControl) {
                treeNode = isControl;
                isControl.show();
            }
            else {
                treeNode = _this.creatTreeNode(parentNode, data);
                parentNode === _this.rootNode ? parentNode.addTreeNode(treeNode)
                    : parentNode.addChildNode(treeNode);
            }
        });
    };
    LayerTree.prototype.creatTreeNode = function (parentNode, data) {
        var _this = this;
        var layerManager = this.getViewer().getLayerManager();
        var checkState = data.isVisible;
        var parentCheckState;
        if (parentNode !== this.rootNode)
            parentCheckState = parentNode.getCheckedState();
        if (parentNode.getId() !== 'all') {
            switch (parentCheckState) { // 父组件勾选状态
                case 'unchecked':
                    checkState = false;
                    break;
                case 'checked':
                    checkState = true;
                    break;
                case undefined:
                    checkState = true;
                    break;
                default:
                    checkState = data.isVisible;
                    break;
            }
        }
        else { // 全部层级及第一层默认勾选
            checkState = data.isVisible;
        }
        var isLoaded = true;
        if ((data.typeName === 'BIMLayer' || data.typeName === 'FeatureLayer') && data.isVisible && data.modelId) {
            //是模型，且可见时，判断其加载状态是否完成
            isLoaded = this.getViewer().getModel(data.modelId) ? true : false;
        }
        this.instanceIds = this.setInstanceIds(data, []);
        var nodeConfig = {
            rootTree: this.rootNode,
            content: data,
            id: data.id,
            type: data.typeName,
            hasCheckBox: true,
            hasSelection: (data.typeName === 'BIMLayer' || data.typeName === 'FeatureLayer') ? true : false,
            hasCollapse: data.children && data.children.length > 0 ? true : false,
            isExpand: data.typeName === 'all' ? true : false,
            isChecked: checkState,
            isLoaded: isLoaded,
            instanceIds: this.instanceIds,
            parent: parentNode
        };
        var iconClass = {
            type: 'svg',
            name: '',
        };
        switch (data.typeName) {
            case "all":
                iconClass.name = 'gld-bf-folder-open-c-sm';
                break;
            case "GroupLayer":
                iconClass.name = 'gld-bf-folder-open-c-sm';
                break;
            case "TileLayer":
                iconClass.name = 'gld-bf-map-c-sm';
                break;
            case "TerrainLayer":
                iconClass.name = 'gld-bf-scene-c-sm';
                break;
            default:
                iconClass.name = 'gld-bf-file-c-sm';
                break;
        }
        var node = new TreeNode_1.default(nodeConfig);
        node.initTreeNode(data.name, iconClass);
        nodeConfig.isExpand && data.children && this.initNode(node, data.children);
        // 监听事件
        node.on('ExpendChanged', function (node, isExpand) {
            isExpand && data.children && _this.initNode(node, data.children);
        });
        node.on('CheckedChanged', function (node, isChecked) {
            var layer = data.typeName === 'all' ? layerManager.getRootLayer() : layerManager.getLayer(data.id);
            layer && (isChecked ? layer.show() : layer.hide());
            _this.getViewer().render();
        });
        node.on('SelectionChanged', function (node, isSelected) {
            if (data.typeName === "BIMLayer" || data.typeName === "FeatureLayer") {
                isSelected && _this.creatComponentsTree(data.id);
                !isSelected && _this.hideComponentsTree(data.id);
                isSelected && layerManager.zoomToLayer(data.id);
            }
        });
        node.getTreeInfoDom().on('click', function (event) {
            var response = {
                eventType: "Click",
                layerType: data.typeName,
                layerId: data.id,
                event: event
            };
            _this.getWebApplication().trigger(WebApplicationGISEvent_1.default.LayerTreeNodeClicked, response);
        });
        return node;
    };
    LayerTree.prototype.creatComponentsTree = function (layerId) {
        var _this = this;
        var cTree = this.parentPanel && this.parentPanel.getControl({ id: "ComponentsTree-" + layerId });
        //生成构件树
        if (cTree) {
            this.parentPanel.getControl({ id: "ComponentsTree-" + layerId }).show();
            this.rootNode.addClass('limit-height');
        }
        else {
            var model = this.getViewer().getLayerManager().getLayer(layerId).model;
            model && model.getModelTree(function (data, modelType, treeType) {
                if (data) {
                    var componentsTreeConfig = {
                        manager: _this._manager,
                        type: 'Tree',
                        name: 'ComponentsTree',
                        config: {
                            id: "ComponentsTree-" + layerId,
                            title: '构件',
                            content: data
                        }
                    };
                    var componentsTree = new ComponentsTree_1.default(componentsTreeConfig);
                    _this.parentPanel = _this.getUIManager().getModule('Panel', 'LayerTreePanel', false).getElement();
                    _this.parentPanel.addControl(componentsTree.getElement());
                    _this.rootNode.addClass('limit-height');
                }
            });
        }
    };
    LayerTree.prototype.hideComponentsTree = function (layerId) {
        var treeControl = this.parentPanel && this.parentPanel.getControl({ id: "ComponentsTree-" + layerId });
        treeControl && treeControl.hide();
        this.rootNode.removeClass('limit-height');
    };
    LayerTree.prototype.setInstanceIds = function (data, result) {
        if (data.children) {
            for (var i = 0; i < data.children.length; i++) {
                if (!data.id) {
                    this.setInstanceIds(data.children[i], result);
                }
                else {
                    result.push(data.id.toString());
                    continue;
                }
            }
        }
        else {
            if (data.id)
                result.push(data.id.toString());
        }
        return result;
    };
    /**
     * 根据图层显隐信息更新图层树的节点check状态
     */
    LayerTree.prototype.updateCheckState = function () {
        var _this = this;
        var rootTreeNode = this.getElement().getControl({ id: 'all' });
        var groupLayers = [];
        var updateTreeNode = function (id, isVisible) {
            var treeNode = rootTreeNode.getControl({ id: id }, true);
            if (treeNode) {
                treeNode.setCheckState(isVisible);
                treeNode.trigger('CheckedChanged', treeNode, isVisible);
            }
        };
        var update = function (node) {
            if (node.typeName === 'GroupLayer') {
                groupLayers.push(node);
                node.children && node.children.forEach(function (child) {
                    update(child);
                });
            }
            else {
                updateTreeNode(node.id, node.isVisible);
            }
        };
        var layerConfig = this.getViewer().getLayerManager().getLayerConfigsObject();
        update(layerConfig);
        groupLayers = groupLayers.reverse();
        groupLayers.forEach(function (node) {
            var id = node.id, isVisible = node.isVisible;
            var treeNode = rootTreeNode.getControl({ id: id }, true);
            if (treeNode) {
                if (isVisible) {
                    var groupLayer = _this.getViewer().getLayerManager().getLayer(id);
                    var allChecked_1;
                    groupLayer.query('!.GroupLayer').every(function (layer) { return allChecked_1 = layer.isVisible; });
                    treeNode.checkedState = allChecked_1 ? 'checked' : 'half';
                    treeNode.setParentCheckState(undefined);
                }
                else {
                    treeNode.setCheckState(isVisible);
                }
            }
        });
    };
    return LayerTree;
}(UIModule_1.UIModule));
exports.default = LayerTree;

},{"../../../UI/Controls/Tree/TreeNode":80,"../../WebApplicationGIS/WebApplicationGISEvent":49,"../UIModule":44,"./ComponentsTree":41}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UIModuleMap_1 = require("./UIModuleMap");
var Theme_1 = require("./Theme");
// 用于管理WebApplication层加载的UI元素
var UIManager = /** @class */ (function () {
    function UIManager(webApplication) {
        this._modules = {};
        this._controls = [];
        this._webApplication = webApplication;
        this.domElement = webApplication.getDomElement();
    }
    UIManager.prototype.getWebApplication = function () {
        return this._webApplication;
    };
    // 加载Application层已封装的UIModule
    UIManager.prototype.loadModule = function (type, name, options) {
        var loadedModule = this.getModule(type, name);
        if (loadedModule)
            return loadedModule;
        if (UIModuleMap_1.default.hasOwnProperty(type) && UIModuleMap_1.default[type].hasOwnProperty(name)) {
            var config = {
                manager: this,
                type: type,
                name: name
            };
            for (var key in options) {
                config[key] = options[key];
            }
            config.config = config.config || {};
            config.config.parent = config.config.parent || this.domElement;
            var module = new UIModuleMap_1.default[type][name](config);
            this._modules[type] = this._modules[type] || {};
            this._modules[type][name] = module;
            return module;
        }
    };
    // 返回已加载的UIModule，未加载则返回undefined
    UIManager.prototype.getModule = function (type, name, searchChildren) {
        if (searchChildren === void 0) { searchChildren = true; }
        if (!searchChildren) {
            if (this._modules[type]) {
                return this._modules[type][name];
            }
        }
        else {
            var resultModule = this.getModule(type, name, false);
            if (!resultModule) { // searchChildren为true时，递归遍历Module的子级Module直至叶子节点或已查找到对应Module
                for (var typeKey in this._modules) {
                    var modules = this._modules[typeKey];
                    for (var key in modules) {
                        var cModule = modules[key];
                        resultModule = cModule.getModule(type, name, true);
                        if (resultModule)
                            return resultModule;
                    }
                }
            }
            else {
                return resultModule;
            }
        }
    };
    // 返回所有已加载的UIModule对象
    UIManager.prototype.getAllModules = function () {
        return this._modules;
    };
    // 直接加载UI层的Control
    UIManager.prototype.addControl = function (control, option) {
        this._controls.push(control);
        this.domElement.append(control.getDomElement());
        if (option) {
            if (option.position) {
                control.setPosition(option.position);
            }
        }
        control.getType() === 'Panel' && control.topShow();
    };
    // 获取所有Control
    UIManager.prototype.getAllControls = function () {
        return this._controls;
    };
    // 删除Control
    UIManager.prototype.removeControl = function (control) {
        var _this = this;
        this._controls.some(function (cControl, index) {
            if (cControl === control) {
                _this._controls.splice(index, 1);
                _this.domElement.remove(cControl.getDomElement());
                return true;
            }
        });
        return this;
    };
    // 按条件查找Control
    UIManager.prototype.getControl = function (condition) {
        var resultControl;
        if (!condition)
            return;
        this._controls.some(function (control) {
            if (control.getId() === condition.id) {
                resultControl = control;
                return true;
            }
        });
        return resultControl;
    };
    UIManager.prototype.setTheme = function (theme) {
        var themeClass = Theme_1.default[theme];
        if (themeClass === undefined)
            return this;
        for (var key in Theme_1.default) {
            var className = Theme_1.default[key];
            className !== '' && this.domElement.removeClass(className);
        }
        themeClass !== '' && this.domElement.addClass(themeClass);
        return this;
    };
    // 获取Toolbar对象
    UIManager.prototype.getToolbar = function (name) {
        return this.getModule('Toolbar', name);
    };
    // 获取模型目录树panel对象
    UIManager.prototype.getContentBrowser = function () {
    };
    // 获取GIS图层结构树panel对象
    UIManager.prototype.getLayerBrowser = function () {
    };
    // 获取InfoBar对象
    UIManager.prototype.getInfoBar = function () {
        return this._webApplication.getViewer().getInfoBar ? this._webApplication.getViewer().getInfoBar() : undefined;
    };
    // 获取ScaleBar对象
    UIManager.prototype.getScaleBar = function () {
        return this._webApplication.getViewer().getScaleBar ? this._webApplication.getViewer().getScaleBar() : undefined;
    };
    // 更新图层树及其关联构件树
    UIManager.prototype.updateLayerTree = function () {
        var layerTreePanel = this.getModule('Panel', 'LayerTreePanel');
        if (layerTreePanel) {
            var trees = layerTreePanel.getElement().getContent();
            trees.clearControls(true);
        }
    };
    // 还原UI状态
    UIManager.prototype.reset = function () {
        var _this = this;
        var execute = function (toolbarName) {
            var toolbar = _this.getModule('Toolbar', toolbarName);
            toolbar && toolbar.getButtons().forEach(function (button) {
                if (button.getSelect()) {
                    button.setSelect(false);
                }
            });
        };
        ['MainToolbar', 'SubToolbarMeasure'].forEach(function (toolbarName) { return execute(toolbarName); });
        var measureClearBtn = this.getModule('Button', 'MeasureClear');
        measureClearBtn.click();
    };
    UIManager.prototype.destroy = function () {
        for (var type in this._modules) {
            var array = this._modules[type];
            for (var key in array) {
                array[key].destroy();
            }
        }
        this._controls.forEach(function (control) { return control.destroy(); });
        this._modules = null;
        this._controls = null;
        this._webApplication = null;
        this.domElement = null;
    };
    return UIManager;
}());
exports.default = UIManager;

},{"./Theme":34,"./UIModuleMap":45}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UIModule = void 0;
var bimface_ui_1 = require("../../UI/bimface.ui");
var UIModuleMap_1 = require("./UIModuleMap");
var UIModule = /** @class */ (function () {
    function UIModule(config) {
        this._modules = {};
        this._controls = [];
        this.type = config.type;
        this.name = config.name;
        this._UIConfig = config.config;
        this._manager = config.manager;
        this.load();
    }
    // 加载本模块
    UIModule.prototype.load = function () {
        if (this._element) {
            this._element.show();
        }
        else {
            this._element = new bimface_ui_1.default[this.type](this._UIConfig);
        }
        return this;
    };
    // 卸载本模块
    UIModule.prototype.unload = function () {
        this._element && this._element.hide();
    };
    UIModule.prototype.destroy = function () {
        for (var type in this._modules) {
            var array = this._modules[type];
            for (var key in array) {
                array[key].destroy();
            }
        }
        this._controls.forEach(function (control) { return control.destroy(); });
        this._modules = null;
        this._controls = null;
        this._element && this._element.destroy();
        this._element = null;
        this._manager = null;
    };
    // 加载Application层已封装的UIModule
    UIModule.prototype.loadModule = function (type, name, options) {
        var loadedModule = this.getModule(type, name);
        if (loadedModule)
            return loadedModule;
        var module;
        if (UIModuleMap_1.default.hasOwnProperty(type) && UIModuleMap_1.default[type].hasOwnProperty(name)) {
            var config = {
                manager: this._manager,
                type: type,
                name: name
            };
            for (var key in options) {
                config[key] = options[key];
            }
            config.config = config.config || {};
            config.config.parent = config.config.parent || this._element.getDomElement();
            module = new UIModuleMap_1.default[type][name](config);
        }
        this._modules[type] = this._modules[type] || {};
        this._modules[type][name] = module;
        return module;
    };
    // 返回已加载的UIModule，未加载则返回undefined
    UIModule.prototype.getModule = function (type, name, searchChildren) {
        if (searchChildren === void 0) { searchChildren = true; }
        if (!searchChildren) {
            if (this._modules[type]) {
                return this._modules[type][name];
            }
        }
        else { // searchChildren为true时，递归遍历Module的子级Module直至叶子节点或已查找到对应Module
            var resultModule_1;
            var searchModule_1 = function (module) {
                var result = module.getModule(type, name, false);
                if (result) {
                    resultModule_1 = result;
                }
                else {
                    var moduleMap = module.getAllModules();
                    for (var typeKey in moduleMap) {
                        var modules = moduleMap[typeKey];
                        for (var key in modules) {
                            var cModule = modules[key];
                            searchModule_1(cModule);
                        }
                    }
                }
            };
            searchModule_1(this);
            return resultModule_1;
        }
    };
    // 返回所有已加载的UIModule对象
    UIModule.prototype.getAllModules = function () {
        return this._modules;
    };
    // 直接加载UI层的Control
    UIModule.prototype.addControl = function (control, option) {
        this._controls.push(control);
        this._element.getDomElement().append(control.getDomElement());
        if (option) {
            if (option.position) {
                control.setPosition(option.position);
            }
        }
    };
    // 获取所有Control
    UIModule.prototype.getAllControls = function () {
        return this._controls;
    };
    // 删除Control
    UIModule.prototype.removeControl = function (control) {
        var _this = this;
        this._controls.some(function (cControl, index) {
            if (cControl === control) {
                _this._controls.splice(index, 1);
                _this._element.getDomElement().remove(cControl.getDomElement());
                return true;
            }
        });
        return this;
    };
    // 按条件查找Control
    UIModule.prototype.getControl = function (condition) {
        var resultControl;
        if (!condition)
            return;
        this._controls.some(function (control) {
            if (control.getId() === condition.id) {
                resultControl = control;
                return true;
            }
        });
        return resultControl;
    };
    // 获取Control对象
    UIModule.prototype.getElement = function () {
        return this._element;
    };
    // 获取UIMananger对象
    UIModule.prototype.getUIManager = function () {
        return this._manager;
    };
    // 获取WebApplication对象
    UIModule.prototype.getWebApplication = function () {
        return this.getUIManager().getWebApplication();
    };
    // 获取Viewer对象
    UIModule.prototype.getViewer = function () {
        return this.getWebApplication().getViewer();
    };
    UIModule.prototype.getEnableUIAnimation = function () {
        return this.getWebApplication().getEnableUIAnimation();
    };
    // 显示
    UIModule.prototype.show = function () {
        this._element.show();
        return this;
    };
    // 隐藏
    UIModule.prototype.hide = function () {
        this._element.hide();
        return this;
    };
    // 隐藏
    UIModule.prototype.isVisible = function () {
        return this._element.isVisible();
    };
    // 获取name
    UIModule.prototype.getName = function () {
        return this.name;
    };
    // 设置onclick事件
    UIModule.prototype.onClick = function (fn) {
        this.getElement().onClick(fn);
        return this;
    };
    // 点击组件
    UIModule.prototype.click = function () {
        this.getElement().click();
        return this;
    };
    return UIModule;
}());
exports.UIModule = UIModule;

},{"../../UI/bimface.ui":83,"./UIModuleMap":45}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Home_1 = require("./Buttons/MainToolbarButtons/Home");
var LayerTree_1 = require("./Buttons/MainToolbarButtons/LayerTree");
var FullScreen_1 = require("./Buttons/MainToolbarButtons/FullScreen");
var Measure_1 = require("./Buttons/MainToolbarButtons/Measure");
var MeasureDistance_1 = require("./Buttons/MainToolbarButtons/MeasureDistance");
var MeasureGroundlineDistance_1 = require("./Buttons/MainToolbarButtons/MeasureGroundlineDistance");
var MeasurePolylineDistance_1 = require("./Buttons/MainToolbarButtons/MeasurePolylineDistance");
var MeasurePosition_1 = require("./Buttons/MainToolbarButtons/MeasurePosition");
var MeasureArea_1 = require("./Buttons/MainToolbarButtons/MeasureArea");
var MeasureSpatialArea_1 = require("./Buttons/MainToolbarButtons/MeasureSpatialArea");
var MeasureProjectedArea_1 = require("./Buttons/MainToolbarButtons/MeasureProjectedArea");
var MeasureSurfaceArea_1 = require("./Buttons/MainToolbarButtons/MeasureSurfaceArea");
var MeasureTriangleDistance_1 = require("./Buttons/MainToolbarButtons/MeasureTriangleDistance");
var MeasureAngle_1 = require("./Buttons/MainToolbarButtons/MeasureAngle");
var MeasureSetting_1 = require("./Buttons/MainToolbarButtons/MeasureSetting");
var MeasureClear_1 = require("./Buttons/MainToolbarButtons/MeasureClear");
var Walkthrough_1 = require("./Buttons/MainToolbarButtons/Walkthrough");
var Property_1 = require("./Buttons/MainToolbarButtons/Property");
var Setting_1 = require("./Buttons/MainToolbarButtons/Setting");
var LayerTreePanel_1 = require("./Panels/DrawerPanels/LayerTreePanel");
var SettingPanel_1 = require("./Panels/DrawerPanels/SettingPanel");
var PropertyPanel_1 = require("./Panels/PropertyPanel/PropertyPanel");
var WalkthroughPanel_1 = require("./Panels/WalkthroughPanel/WalkthroughPanel");
var MeasureSettingPanel_1 = require("./Panels/MeasureSettingPanel/MeasureSettingPanel");
var MainToolbar_1 = require("./Toolbars/MainToolbar");
var SubToolbarMeasure_1 = require("./Toolbars/SubToolbarMeasure");
var SubToolbarAreaMeasure_1 = require("./Toolbars/SubToolbarAreaMeasure");
var SubToolbarDistanceMeasure_1 = require("./Toolbars/SubToolbarDistanceMeasure");
var LayerTree_2 = require("./Tree/LayerTree");
var UIModuleMap = {
    Button: {
        'Home': Home_1.default,
        'LayerTree': LayerTree_1.default,
        'Measure': Measure_1.default,
        'MeasureDistance': MeasureDistance_1.default,
        'MeasureGroundlineDistance': MeasureGroundlineDistance_1.default,
        'MeasurePolylineDistance': MeasurePolylineDistance_1.default,
        'MeasurePosition': MeasurePosition_1.default,
        'MeasureArea': MeasureArea_1.default,
        'MeasureSpatialArea': MeasureSpatialArea_1.default,
        'MeasureProjectedArea': MeasureProjectedArea_1.default,
        'MeasureSurfaceArea': MeasureSurfaceArea_1.default,
        'MeasureTriangleDistance': MeasureTriangleDistance_1.default,
        'MeasureAngle': MeasureAngle_1.default,
        'MeasureSetting': MeasureSetting_1.default,
        'MeasureClear': MeasureClear_1.default,
        'Walkthrough': Walkthrough_1.default,
        'Property': Property_1.default,
        'Setting': Setting_1.default,
        'FullScreen': FullScreen_1.default,
    },
    Panel: {
        'LayerTreePanel': LayerTreePanel_1.default,
        'SettingPanel': SettingPanel_1.default,
        'PropertyPanel': PropertyPanel_1.default,
        'WalkthroughPanel': WalkthroughPanel_1.default,
        'MeasureSettingPanel': MeasureSettingPanel_1.default,
    },
    Toolbar: {
        'MainToolbar': MainToolbar_1.MainToolbar,
        'SubToolbarMeasure': SubToolbarMeasure_1.default,
        'SubToolbarAreaMeasure': SubToolbarAreaMeasure_1.default,
        'SubToolbarDistanceMeasure': SubToolbarDistanceMeasure_1.default
    },
    Tree: {
        'LayerTree': LayerTree_2.default
    }
};
exports.default = UIModuleMap;

},{"./Buttons/MainToolbarButtons/FullScreen":2,"./Buttons/MainToolbarButtons/Home":3,"./Buttons/MainToolbarButtons/LayerTree":4,"./Buttons/MainToolbarButtons/Measure":5,"./Buttons/MainToolbarButtons/MeasureAngle":6,"./Buttons/MainToolbarButtons/MeasureArea":7,"./Buttons/MainToolbarButtons/MeasureClear":8,"./Buttons/MainToolbarButtons/MeasureDistance":9,"./Buttons/MainToolbarButtons/MeasureGroundlineDistance":10,"./Buttons/MainToolbarButtons/MeasurePolylineDistance":11,"./Buttons/MainToolbarButtons/MeasurePosition":12,"./Buttons/MainToolbarButtons/MeasureProjectedArea":13,"./Buttons/MainToolbarButtons/MeasureSetting":14,"./Buttons/MainToolbarButtons/MeasureSpatialArea":15,"./Buttons/MainToolbarButtons/MeasureSurfaceArea":16,"./Buttons/MainToolbarButtons/MeasureTriangleDistance":17,"./Buttons/MainToolbarButtons/Property":18,"./Buttons/MainToolbarButtons/Setting":19,"./Buttons/MainToolbarButtons/Walkthrough":21,"./Panels/DrawerPanels/LayerTreePanel":23,"./Panels/DrawerPanels/SettingPanel":24,"./Panels/MeasureSettingPanel/MeasureSettingPanel":25,"./Panels/PropertyPanel/PropertyPanel":26,"./Panels/WalkthroughPanel/WalkthroughPanel":29,"./Toolbars/MainToolbar":35,"./Toolbars/SubToolbarAreaMeasure":37,"./Toolbars/SubToolbarDistanceMeasure":38,"./Toolbars/SubToolbarMeasure":39,"./Tree/LayerTree":42}],46:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebApplication = void 0;
var EventEmmiter_1 = require("../Event/EventEmmiter");
var UIManager_1 = require("./UIModule/UIManager");
var Dom_1 = require("../UI/Dom");
// WebApplication基类
var WebApplication = /** @class */ (function (_super) {
    __extends(WebApplication, _super);
    function WebApplication(config) {
        var _this = _super.call(this) || this;
        _this._config = config;
        _this.type = config.type;
        var domElement = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-app' });
        config.domElement.appendChild(domElement.getElement());
        _this.domElement = domElement;
        _this._enableUIAnimation = config.enableUIAnimation;
        _this._plugins = [];
        _this._UIManager = new UIManager_1.default(_this);
        return _this;
    }
    WebApplication.prototype.getConfig = function () {
        return this._config;
    };
    WebApplication.prototype.getType = function () {
        return this.type;
    };
    WebApplication.prototype.getDomElement = function () {
        return this.domElement;
    };
    WebApplication.prototype.getUIManager = function () {
        return this._UIManager;
    };
    WebApplication.prototype.getViewer = function () {
        return this._viewer;
    };
    // 是否开启UI的动画过渡效果，通过config配置，在具体的Module逻辑中，可根据此配置分别实现动画过渡版和无动画版的逻辑（主要在各Module的show、hide时，参考drawerPanel）
    WebApplication.prototype.getEnableUIAnimation = function () {
        return this._enableUIAnimation;
    };
    WebApplication.prototype.addPlugin = function (plugin) {
        this._plugins.push(plugin);
    };
    WebApplication.prototype.removePlugin = function (id) {
        this._plugins.find(function (item, index, array) {
            if (item.id == id) {
                return array.splice(index, 1);
            }
            ;
        });
    };
    WebApplication.prototype.getPlugin = function (id) {
        return this._plugins.find(function (item) {
            return item.id == id;
        });
    };
    WebApplication.prototype.getPlugins = function () {
        return __spreadArrays(this._plugins);
    };
    WebApplication.prototype.addEventListener = function (type, fn) {
        this.on(type, fn);
        return this;
    };
    WebApplication.prototype.removeEventListener = function (type, fn) {
        this.off(type, fn);
        return this;
    };
    WebApplication.prototype.destroy = function () {
        if (this._destroyed)
            return;
        this._plugins = null;
        this._config = null;
        this._UIManager.destroy();
        this.domElement.destroy();
        this._destroyed = true;
    };
    return WebApplication;
}(EventEmmiter_1.default));
exports.WebApplication = WebApplication;

},{"../Event/EventEmmiter":54,"../UI/Dom":81,"./UIModule/UIManager":43}],47:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var WebApplication_1 = require("../WebApplication");
var WebApplicationGISEvent_1 = require("./WebApplicationGISEvent");
var Glodon_1 = require("../../Common/Glodon");
var WebApplicationGIS = /** @class */ (function (_super) {
    __extends(WebApplicationGIS, _super);
    function WebApplicationGIS(config) {
        return _super.call(this, config) || this;
    }
    WebApplicationGIS.prototype.initUI = function () {
        var options = this._config;
        if (options.toolbars) {
            var mainToolbarConfig = options.toolbars.mainToolbar;
            if (mainToolbarConfig && mainToolbarConfig.create) {
                var mainToolbar = this.getUIManager().loadModule('Toolbar', 'MainToolbar');
                var buttons = [];
                for (var key in mainToolbarConfig.items) {
                    var button = mainToolbarConfig.items[key];
                    if (button.create) {
                        var param = { type: 'Button', name: key };
                        buttons.push(param);
                        if (key === 'Measure') {
                            var subToolbarButtons = [];
                            var childrenButtons = button.items;
                            for (var childKey in childrenButtons) {
                                var childButton = childrenButtons[childKey];
                                if (childButton.create) {
                                    var childParam = { type: 'Button', name: "Measure" + childKey };
                                    subToolbarButtons.push(childParam);
                                }
                            }
                            var subToolbarMeasureParam = { type: 'Toolbar', name: 'SubToolbarMeasure', option: { modules: subToolbarButtons } };
                            buttons.push(subToolbarMeasureParam);
                        }
                    }
                }
                mainToolbar.loadModules(buttons);
                var measureButton = mainToolbar.getButton('Measure');
                measureButton && measureButton.setSubToolbar(mainToolbar.getModule('Toolbar', 'SubToolbarMeasure'));
            }
        }
        this.trigger(WebApplicationGISEvent_1.default.Loaded);
    };
    WebApplicationGIS.prototype.getViewer = function () {
        var _this = this;
        if (!this._viewer) {
            var option = new Glodon_1.default.Bimface.Viewer.ViewerGISConfig();
            for (var key in this._config) {
                option[key] = this._config[key];
            }
            option.domElement = this.getDomElement().getElement();
            this._viewer = new Glodon_1.default.Bimface.Viewer.ViewerGIS(option);
            this._viewer.addEventListener(Glodon_1.default.Bimface.Viewer.ViewerGISEvent.SceneAdded, function () { return _this.initUI(); });
            this._viewer.addEventListener(Glodon_1.default.Bimface.Viewer.ViewerGISEvent.ModelRemoved, function (modelId) {
                _this.trigger(WebApplicationGISEvent_1.default.ModelRemoved, modelId);
            });
            this._viewer.addEventListener(Glodon_1.default.Bimface.Viewer.ViewerGISEvent.ModelAdded, function (modelId) {
                _this.trigger(WebApplicationGISEvent_1.default.ModelAdded, modelId);
            });
        }
        return this._viewer;
    };
    WebApplicationGIS.prototype.addScene = function (viewToken) {
        this.getViewer().addScene(viewToken);
    };
    return WebApplicationGIS;
}(WebApplication_1.WebApplication));
exports.default = WebApplicationGIS;

},{"../../Common/Glodon":50,"../WebApplication":46,"./WebApplicationGISEvent":49}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebApplicationGISConfig = void 0;
var WebApplicationGISConfig = /** @class */ (function () {
    function WebApplicationGISConfig(domElement) {
        var config = {
            type: 'WebApplicationGIS',
            toolbars: {
                mainToolbar: {
                    create: true,
                    items: {
                        Home: {
                            create: true
                        },
                        LayerTree: {
                            create: true
                        },
                        Measure: {
                            create: true,
                            items: {
                                Distance: {
                                    create: true,
                                    items: {
                                        PolylineDistance: {
                                            create: true
                                        },
                                        GroundlineDistance: {
                                            create: true
                                        }
                                    }
                                },
                                Position: {
                                    create: true
                                },
                                Area: {
                                    create: true,
                                    items: {
                                        SpatialArea: {
                                            create: true
                                        },
                                        ProjectedArea: {
                                            create: true
                                        },
                                        SurfaceArea: {
                                            create: true
                                        }
                                    }
                                },
                                TriangleDistance: {
                                    create: true
                                },
                                Angle: {
                                    create: true
                                },
                                Setting: {
                                    create: true
                                },
                                Clear: {
                                    create: true
                                }
                            },
                            isCollapsed: true
                        },
                        Walkthrough: {
                            create: true
                        },
                        Property: {
                            create: true
                        },
                    }
                }
            },
            enableCompassControl: true,
            enableScaleBar: true,
            enableInfoBar: true,
            enableUIAnimation: true,
        };
        domElement && (config.domElement = domElement);
        return config;
    }
    return WebApplicationGISConfig;
}());
exports.WebApplicationGISConfig = WebApplicationGISConfig;

},{}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WebApplicationGISEvent;
(function (WebApplicationGISEvent) {
    WebApplicationGISEvent["Loaded"] = "Loaded";
    WebApplicationGISEvent["ViewChanged"] = "ViewChanged";
    WebApplicationGISEvent["ModelAdded"] = "ModelAdded";
    WebApplicationGISEvent["ModelRemoved"] = "ModelRemoved";
    WebApplicationGISEvent["LayerTreeNodeClicked"] = "LayerTreeNodeClicked";
})(WebApplicationGISEvent || (WebApplicationGISEvent = {}));
exports.default = WebApplicationGISEvent;

},{}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Glodon = window.Glodon || {};
window.Glodon = Glodon;
exports.default = Glodon;

},{}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUINamespace = exports.SDM = void 0;
var DataUtil_1 = require("./Utils/DataUtil");
var SDM = window.Glodon.Bimface.Data.StatisticsDataManager.getInstance();
exports.SDM = SDM;
var UINamespace = 'Gldon.Bimface.Tiles.UI';
var getUINamespace = function (className) {
    if (DataUtil_1.default.assertType(className, 'str') && className.length > 0) {
        className[0] !== '.' && (className = "." + className);
        return "" + UINamespace + className;
    }
    else {
        return UINamespace;
    }
};
exports.getUINamespace = getUINamespace;

},{"./Utils/DataUtil":52}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// 此对象用于简化处理各类数据，包括判断数据类型、判断属性、及数据的各类其他操作等，待丰富
var DataUtil = {
    // 用于判断数据类型
    assertType: function (param, typeName) {
        var assert = function (fullTypeName) { return Object.prototype.toString.call(param) === "[object " + fullTypeName + "]"; };
        switch (typeName) {
            case 'obj':
            case 'Obj':
            case 'object':
            case 'Object':
                return assert('Object');
            case 'arr':
            case 'Arr':
            case 'array':
            case 'Array':
                return assert('Array');
            case 'num':
            case 'Num':
            case 'number':
            case 'Number':
                return assert('Number');
            case 'func':
            case 'Func':
            case 'function':
            case 'Function':
                return assert('Function');
            case 'str':
            case 'Str':
            case 'string':
            case 'String':
                return assert('String');
            default:
                return assert(typeName);
        }
    },
    // 判断多个参数是否都是某个数据类型（参数平铺传入，最后一个参数是类型名）
    assertParamsType: function () {
        var _this = this;
        var params = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            params[_i] = arguments[_i];
        }
        if (params.length > 1) {
            var typeName_1 = params.splice(params.length - 1, 1)[0];
            var result_1 = true;
            params.every(function (param) {
                result_1 = _this.assertType(param, typeName_1);
                return result_1;
            });
            return result_1;
        }
    },
    // 判断对象是否包含某属性
    hasProperty: function (param, propertyName) {
        if (this.assertType(param, 'obj')) {
            return param[propertyName] !== undefined;
        }
    }
};
exports.default = DataUtil;

},{}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ButtonCode = exports.KeyCode = void 0;
var KeyCode;
(function (KeyCode) {
    KeyCode[KeyCode["BACKSPACE"] = 8] = "BACKSPACE";
    KeyCode[KeyCode["TAB"] = 9] = "TAB";
    KeyCode[KeyCode["ALT"] = 18] = "ALT";
    KeyCode[KeyCode["ESC"] = 27] = "ESC";
    KeyCode[KeyCode["LEFT"] = 37] = "LEFT";
    KeyCode[KeyCode["UP"] = 38] = "UP";
    KeyCode[KeyCode["RIGHT"] = 39] = "RIGHT";
    KeyCode[KeyCode["DOWN"] = 40] = "DOWN";
    KeyCode[KeyCode["ZERO"] = 48] = "ZERO";
    KeyCode[KeyCode["A"] = 65] = "A";
    KeyCode[KeyCode["D"] = 68] = "D";
    KeyCode[KeyCode["E"] = 69] = "E";
    KeyCode[KeyCode["Q"] = 81] = "Q";
    KeyCode[KeyCode["S"] = 83] = "S";
    KeyCode[KeyCode["W"] = 87] = "W";
    KeyCode[KeyCode["PLUS"] = 187] = "PLUS";
    KeyCode[KeyCode["SUB"] = 189] = "SUB";
})(KeyCode || (KeyCode = {}));
exports.KeyCode = KeyCode;
var ButtonCode;
(function (ButtonCode) {
    ButtonCode[ButtonCode["LEFT"] = 0] = "LEFT";
    ButtonCode[ButtonCode["MIDDLE"] = 1] = "MIDDLE";
    ButtonCode[ButtonCode["RIGHT"] = 2] = "RIGHT";
})(ButtonCode || (ButtonCode = {}));
exports.ButtonCode = ButtonCode;

},{}],54:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var EventManager_1 = require("./EventManager");
// 事件处理类
var EventEmmiter = /** @class */ (function (_super) {
    __extends(EventEmmiter, _super);
    function EventEmmiter() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._onceEvents = {};
        _this._pausedEvents = {};
        return _this;
    }
    // 增加监听事件
    EventEmmiter.prototype.on = function (type, fn) {
        return this.addEvent(type, fn);
    };
    // 删除监听事件
    EventEmmiter.prototype.off = function (type, fn) {
        var index;
        if (this._onceEvents[type]) { // once列表中查找并删除此事件
            (index = this._onceEvents[type].indexOf(fn)) >= 0 && this._onceEvents[type].splice(index, 1);
            this._onceEvents[type].length === 0 && delete this._onceEvents[type];
        }
        if (this._pausedEvents[type]) { // pause列表中查找并删除此事件
            (index = this._pausedEvents[type].indexOf(fn)) >= 0 && this._pausedEvents[type].splice(index, 1);
            this._pausedEvents[type].length === 0 && delete this._pausedEvents[type];
        }
        return this.removeEvent(type, fn);
    };
    // 触发一类监听事件
    EventEmmiter.prototype.trigger = function (type) {
        var _this = this;
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (!this._eventContainer[type])
            return this;
        var originEvents = __spreadArrays(this._eventContainer[type]);
        if (this._pausedEvents[type]) { // 此类监听事件中存在pause项时，另外记录完整的事件数组，并在现有的数组中删除pause项
            this._pausedEvents[type].forEach(function (fn) {
                _this.removeEvent(type, fn);
            });
        }
        this.fireEvent.apply(this, __spreadArrays([type], args));
        this._eventContainer[type] = originEvents; // 恢复完整的事件数组
        if (this._onceEvents[type]) { // 单次执行的事件，执行后从数组中删除
            this._onceEvents[type].forEach(function (fn) {
                _this._pausedEvents[type].indexOf(fn) < 0 && _this.off(type, fn); // 排除once事件pause状态
            });
        }
        return this;
    };
    // 增加单次执行的事件
    EventEmmiter.prototype.once = function (type, fn) {
        this.on(type, fn);
        this._onceEvents[type] = this._onceEvents[type] || [];
        this._onceEvents[type].indexOf(fn) < 0 && this._onceEvents[type].push(fn);
        return this;
    };
    // 暂停事件
    EventEmmiter.prototype.pause = function (type, fn) {
        this._pausedEvents[type] = this._pausedEvents[type] || [];
        this._pausedEvents[type].indexOf(fn) < 0 && this._pausedEvents[type].push(fn);
        return this;
    };
    // 恢复事件
    EventEmmiter.prototype.resume = function (type, fn) {
        if (!this._pausedEvents[type])
            return this;
        var index = this._pausedEvents[type].indexOf(fn);
        index >= 0 && this._pausedEvents[type].splice(index, 1);
        this._pausedEvents[type].length === 0 && delete this._pausedEvents[type];
        return this;
    };
    return EventEmmiter;
}(EventManager_1.EventManager));
exports.default = EventEmmiter;

},{"./EventManager":55}],55:[function(require,module,exports){
"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventManager = void 0;
// 事件处理基类
var EventManager = /** @class */ (function () {
    function EventManager() {
        this._eventContainer = {};
    }
    // 添加监听事件
    EventManager.prototype.addEvent = function (type, fn) {
        this._eventContainer[type] = this._eventContainer[type] || [];
        this._eventContainer[type].push(fn);
        return this;
    };
    // 删除监听事件
    EventManager.prototype.removeEvent = function (type, fn) {
        if (this._eventContainer[type]) {
            var index = this._eventContainer[type].indexOf(fn);
            index >= 0 && this._eventContainer[type].splice(index, 1);
        }
        return this;
    };
    // 触发监听事件
    EventManager.prototype.fireEvent = function (type) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (type && this._eventContainer[type]) {
            __spreadArrays(this._eventContainer[type]).forEach(function (fn) {
                fn.apply(null, args);
            });
        }
        return this;
    };
    return EventManager;
}());
exports.EventManager = EventManager;

},{}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SyleUtil = /** @class */ (function () {
    function SyleUtil() {
    }
    SyleUtil.formatElementParam = function (defaultParam, customParam) {
        if (typeof customParam == 'undefined')
            return defaultParam;
        var className = defaultParam.className, customClassName = customParam.className;
        // style = customParam.style;
        // 默认类名 自定义类名
        if (customClassName) {
            className = className + " " + customClassName;
        }
        // // 类型类名
        // if(style) {
        //   className = `${className} is-${customClassName}`;
        // }
        var elementParam = window.Object.assign(defaultParam, customParam);
        elementParam.className = className;
        return elementParam;
    };
    return SyleUtil;
}());
exports.default = SyleUtil;

},{}],57:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Control = void 0;
var EventEmmiter_1 = require("../Event/EventEmmiter");
var Dom_1 = require("./Dom");
var UIEvents_1 = require("./UIEvents");
var ControlAnchor_1 = require("./ControlAnchor/ControlAnchor");
// UI组件基类
var Control = /** @class */ (function (_super) {
    __extends(Control, _super);
    function Control(param) {
        var _this = _super.call(this) || this;
        _this._domElement = param.element || new Dom_1.Dom().createElement(param.elementParam);
        if (param.parent) {
            var parentElement = param.parent instanceof Control ? param.parent._domElement
                : param.parent instanceof Dom_1.Dom ? param.parent : new Dom_1.Dom(param.parent);
            parentElement.append(_this._domElement);
            param.parent instanceof Control && (_this._parent = param.parent);
        }
        _this.id = param.id; // || uuid
        _this.type = param.type;
        _this.position = { anchor: 'TopLeft', offset: { x: 0, y: 0 } };
        return _this;
    }
    //
    Control.prototype.getParent = function () {
        return this._parent;
    };
    // 设置本对象的父级Control对象
    Control.prototype.setParent = function (control) {
        this._parent = control;
    };
    // 获取DomElement对象
    Control.prototype.getDomElement = function () {
        return this._domElement;
    };
    // 设置点击事件
    Control.prototype.onClick = function (fn) {
        var _this = this;
        this._domElement.on('click', function (eventData) {
            fn(eventData);
            _this.trigger(UIEvents_1.default.Clicked, _this);
        });
        return this;
    };
    // 设置鼠标移入事件
    Control.prototype.onMouseOver = function (fn) {
        var _this = this;
        this._domElement.on('mouseover', function (eventData) {
            fn(eventData);
            _this.trigger(UIEvents_1.default.MouseOver, _this);
        });
        return this;
    };
    // 设置鼠标移出事件
    Control.prototype.onMouseOut = function (fn) {
        var _this = this;
        this._domElement.on('mouseout', function (eventData) {
            fn(eventData);
            _this.trigger(UIEvents_1.default.MouseOut, _this);
        });
        return this;
    };
    // 显示
    Control.prototype.show = function () {
        this._domElement.show();
        return this;
    };
    // 隐藏
    Control.prototype.hide = function () {
        this._domElement.hide();
        return this;
    };
    // 获取可见性
    Control.prototype.isVisible = function () {
        return this._domElement.isVisible();
    };
    // 销毁
    Control.prototype.destroy = function () {
        this._domElement.destroy();
    };
    // 添加一个或多个css class
    Control.prototype.addClass = function () {
        var _a;
        var classes = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            classes[_i] = arguments[_i];
        }
        (_a = this._domElement).addClass.apply(_a, classes);
        return this;
    };
    // 删除一个或多个css class
    Control.prototype.removeClass = function () {
        var _a;
        var classes = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            classes[_i] = arguments[_i];
        }
        (_a = this._domElement).removeClass.apply(_a, classes);
        return this;
    };
    // 删除一个或多个css class
    Control.prototype.toggleClass = function (className) {
        this._domElement.toggleClass(className);
        return this;
    };
    // 根据anchor和offset参数设置Control的位置
    Control.prototype.setPosition = function (position) {
        if (position.anchor && ControlAnchor_1.default.hasOwnProperty(position.anchor)) {
            for (var key in ControlAnchor_1.default) {
                this.removeClass("bfui-anchor-" + key.toLowerCase());
            }
            var anchor = position.anchor.toLowerCase();
            this.addClass("bfui-anchor-" + anchor);
            this.position.anchor = position.anchor;
        }
        this.setOffset(position.offset);
        return this;
    };
    Control.prototype.setOffset = function (offset) {
        if (offset) {
            var offsetX = offset.x || 0;
            var offsetY = offset.y || 0;
            var anchor = this.position.anchor.toLowerCase();
            this.setStyle(anchor.indexOf('right') >= 0 ? { marginRight: -offsetX + "px" } : { marginLeft: offsetX + "px" })
                .setStyle(anchor.indexOf('bottom') >= 0 ? { marginBottom: -offsetY + "px" } : { marginTop: offsetY + "px" });
            this.position.offset.x = offsetX;
            this.position.offset.y = offsetY;
        }
        return this;
    };
    Control.prototype.getPositionParam = function () {
        return this.position;
    };
    // 获取ID
    Control.prototype.getId = function () {
        return this.id;
    };
    // 获取Control类型
    Control.prototype.getType = function () {
        return this.type;
    };
    // 获取元素当前位置信息
    Control.prototype.getPosition = function () {
        return this._domElement.getPosition();
    };
    // 获取元素的尺寸信息
    Control.prototype.getDimensions = function () {
        return this._domElement.getDimensions();
    };
    // 获取元素宽度
    Control.prototype.getWidth = function () {
        return this._domElement.getWidth();
    };
    // 获取元素高度
    Control.prototype.getHeight = function () {
        return this._domElement.getHeight();
    };
    // 设置css style（传入多个键值对组成的对象参数）
    Control.prototype.setStyle = function (style) {
        this._domElement.css(style);
        return this;
    };
    Control.prototype.getTooltip = function () {
        return this.tooltip;
    };
    Control.prototype.setTooltip = function (tooltip) {
        this.tooltip = tooltip;
        this.getDomElement().attribute('title', tooltip);
        return this;
    };
    /**
     * 通过HTML字符串初始化Control内容，支持在字符串中插入Control对象标记，配合controlMap实现html与Control混合结构的整体初始化
     * @param {string} html Control的内容html字符串。如需插入Control对象，则在插入的位置写入<Control id="abc"></Control>作为标记，id与controlMap中的key对应
     * @param {IControlMap} controlMap 通过key、value方式提供需插入html中的各个Control对象，key与html字符串中标记处的id对应
     */
    Control.prototype.setHTML = function (html, controlMap) {
        var controlReg = /<[C,c]ontrol id="(.*?)".*?>.*?<\/[C,c]ontrol>/g;
        var computedHtml = html.replace(controlReg, function (value) {
            var execResult = controlReg.exec(value);
            controlReg.lastIndex = 0;
            var id = execResult[1];
            var replaceHtml = "<div class=\"BFUI_Control_" + id + "\"></div>";
            return replaceHtml;
        });
        var dom = this.getDomElement();
        dom.html(computedHtml);
        for (var id in controlMap) {
            var elements = dom.getElement().getElementsByClassName("BFUI_Control_" + id);
            if (elements.length === 1) {
                var element = elements[0];
                var parent_1 = new Dom_1.Dom(element.parentElement);
                parent_1.replace(controlMap[id].getDomElement && controlMap[id].getDomElement() || controlMap[id], new Dom_1.Dom(element));
            }
        }
        return this;
    };
    /**
     * 点击组件
     */
    Control.prototype.click = function () {
        this.getDomElement().click();
        return this;
    };
    return Control;
}(EventEmmiter_1.default));
exports.Control = Control;

},{"../Event/EventEmmiter":54,"./ControlAnchor/ControlAnchor":59,"./Dom":81,"./UIEvents":82}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ControlAlignOption;
(function (ControlAlignOption) {
    ControlAlignOption["Left"] = "Left";
    ControlAlignOption["Center"] = "Center";
    ControlAlignOption["Right"] = "Right";
    ControlAlignOption["Top"] = "Top";
    ControlAlignOption["Middle"] = "Middle";
    ControlAlignOption["Bottom"] = "Bottom";
})(ControlAlignOption || (ControlAlignOption = {}));
exports.default = ControlAlignOption;

},{}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ControlAnchor;
(function (ControlAnchor) {
    ControlAnchor["TopLeft"] = "TopLeft";
    ControlAnchor["TopCenter"] = "TopCenter";
    ControlAnchor["TopRight"] = "TopRight";
    ControlAnchor["MiddleLeft"] = "MiddleLeft";
    ControlAnchor["MiddleRight"] = "MiddleRight";
    ControlAnchor["BottomLeft"] = "BottomLeft";
    ControlAnchor["BottomCenter"] = "BottomCenter";
    ControlAnchor["BottomRight"] = "BottomRight";
    ControlAnchor["MiddleCenter"] = "MiddleCenter";
})(ControlAnchor || (ControlAnchor = {}));
exports.default = ControlAnchor;

},{}],60:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Control = exports.ControlGroup = void 0;
var Control_1 = require("./Control");
Object.defineProperty(exports, "Control", { enumerable: true, get: function () { return Control_1.Control; } });
// 组件Group
var ControlGroup = /** @class */ (function (_super) {
    __extends(ControlGroup, _super);
    function ControlGroup(param) {
        var _this = _super.call(this, param) || this;
        _this._children = [];
        return _this;
    }
    // 添加子组件
    ControlGroup.prototype.addControl = function (control, option) {
        if (!option || isNaN(option.index) || option.index === -1) {
            this._children.push(control);
            control.setParent(this);
            this._domElement.append(control.getDomElement());
        }
        else {
            var index = option.index;
            if (index < -1) {
                index = this.getControlCount() + index + 1;
            }
            this.insertControl(control, index);
        }
        return this;
    };
    // 插入子组件到指定index
    ControlGroup.prototype.insertControl = function (control, index) {
        if (!isNaN(index) && index < this._children.length) {
            this._children.splice(index, 0, control);
            control.setParent(this);
            this._domElement.insert(control.getDomElement(), index);
        }
        else {
            this.addControl(control);
        }
        return this;
    };
    // 删除子组件
    ControlGroup.prototype.removeControl = function (control) {
        var index = this.indexOf(control);
        if (index >= 0) {
            this._children.splice(index, 1);
            control.setParent(undefined);
            this._domElement.remove(control.getDomElement());
        }
        return this;
    };
    ControlGroup.prototype.clearControls = function (destroy) {
        if (destroy === void 0) { destroy = false; }
        while (this.getControlCount() > 0) {
            var control = this.getControl({ index: 0 });
            this.removeControl(control);
            destroy && control.destroy();
        }
        return this;
    };
    // 根据index获取子组件
    ControlGroup.prototype.getControl = function (condition) {
        var resultControl;
        if (!condition)
            return;
        if (condition.id) {
            this.getAllControls().some(function (control) {
                if (control.getId() === condition.id) {
                    resultControl = control;
                    return true;
                }
            });
        }
        else if (!isNaN(condition.index) && condition.index < this.getControlCount()) {
            resultControl = this._children[condition.index];
        }
        return resultControl;
    };
    ControlGroup.prototype.getAllControls = function () {
        return this._children;
    };
    // 根据子组件获取index
    ControlGroup.prototype.indexOf = function (control) {
        return this._children.indexOf(control);
    };
    // 获取当前已有子组件数量
    ControlGroup.prototype.getControlCount = function () {
        return this._children.length;
    };
    return ControlGroup;
}(Control_1.Control));
exports.ControlGroup = ControlGroup;

},{"./Control":57}],61:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PropertyControl = void 0;
var Control_1 = require("../../Control");
var Collapse_1 = require("../../Controls/Collapse/Collapse");
//PropertyPanel组件类
var PropertyControl = /** @class */ (function (_super) {
    __extends(PropertyControl, _super);
    function PropertyControl(param) {
        var _this = this;
        param = param || {};
        var elementParam = {
            elementType: 'table',
            className: 'bfui-property-panel'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'PropertyPanel',
        };
        _this = _super.call(this, controlParam) || this;
        _this.createCollapse(param.propertyData);
        return _this;
    }
    // 清空radio
    PropertyControl.prototype.clear = function () {
        this._domElement.html('');
    };
    PropertyControl.prototype.createCollapse = function (properties) {
        var _this = this;
        this.clear();
        if (properties) {
            properties.forEach(function (item) {
                item.parent = _this.getDomElement();
                new Collapse_1.Collapse(item);
            });
        }
    };
    return PropertyControl;
}(Control_1.Control));
exports.PropertyControl = PropertyControl;

},{"../../Control":57,"../../Controls/Collapse/Collapse":68}],62:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../Control");
var UIEvents_1 = require("../../UIEvents");
var Radio_1 = require("../../Controls/Radio/Radio");
var StatisticsDataManager_1 = require("../../../Common/StatisticsDataManager");
var SNS = StatisticsDataManager_1.getUINamespace('RadioGroup');
//RadioGroup组件类
var RadioGroup = /** @class */ (function (_super) {
    __extends(RadioGroup, _super);
    function RadioGroup(param) {
        var _this = this;
        StatisticsDataManager_1.SDM.send(SNS, "bf_c_UIRadioGroup_new");
        param = param || {};
        var elementParam = {
            elementType: 'div',
            className: 'bfui-radioGroup'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'RadioGroup',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        _this.radioArray = [];
        param.options && _this.setOptions(param.options);
        _this.on(UIEvents_1.default.ValueChanged, function (radio, value, checked) {
            checked && _this.setCheckedByValue(value);
        });
        return _this;
    }
    // 创建单个radio
    RadioGroup.prototype.addRadio = function (param) {
        var _this = this;
        param.parent = this.getDomElement();
        var radio = new Radio_1.default(param);
        radio.onChange(function (radio, value) {
            radio.isChecked() && _this.trigger(UIEvents_1.default.ValueChanged, radio, value, radio.isChecked());
        });
        this.radioArray.push(radio);
        return radio;
    };
    // 创建多个radio
    RadioGroup.prototype.setOptions = function (options) {
        var _this = this;
        var checkedIndex;
        this.clearOptions();
        options.forEach(function (label, index) {
            if (checkedIndex == undefined && label.checked) {
                checkedIndex = index;
            }
            _this.addRadio(label);
        });
        this.setChecked(checkedIndex == undefined ? 0 : checkedIndex);
    };
    // 获取单选框数值内容列表
    RadioGroup.prototype.getOptions = function () {
        var options = [];
        this.radioArray.forEach(function (radio) {
            options.push({ value: radio.getValue(), enabled: radio.isEnabled(), checked: radio.isChecked(), label: radio.getLabel() });
        });
        return options;
    };
    //设置选中的单选框
    RadioGroup.prototype.setChecked = function (index) {
        this.radioArray.forEach(function (radio, idx) {
            radio.setChecked(idx === index);
        });
    };
    //设置选中的单选框
    RadioGroup.prototype.setCheckedByValue = function (value) {
        this.radioArray.forEach(function (radio) {
            radio.setChecked(radio.getValue() == value);
        });
    };
    //获取当前选中选项的序号
    RadioGroup.prototype.getChecked = function () {
        var index;
        this.radioArray.forEach(function (radio, idx) {
            radio.isChecked() && (index = idx);
        });
        return index;
    };
    // 清空radio
    RadioGroup.prototype.clearOptions = function () {
        this.radioArray = [];
        this._domElement.html('');
    };
    //设置可用的单选框选项
    RadioGroup.prototype.setEnabled = function (indexs) {
        this.radioArray.forEach(function (radio, idx) {
            radio.setEnabled(indexs.indexOf(idx) > -1);
        });
    };
    //获取可用的单选框选项
    RadioGroup.prototype.getEnabled = function () {
        var indexs = [];
        this.radioArray.forEach(function (radio, idx) {
            radio.isEnabled() && indexs.push(idx);
        });
        return indexs;
    };
    //单选框值发生变化的事件
    RadioGroup.prototype.onChange = function (fn) {
        this.on(UIEvents_1.default.ValueChanged, fn);
        return this;
    };
    return RadioGroup;
}(Control_1.Control));
exports.default = RadioGroup;

},{"../../../Common/StatisticsDataManager":51,"../../Control":57,"../../Controls/Radio/Radio":73,"../../UIEvents":82}],63:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ControlGroup_1 = require("../../ControlGroup");
var JustifyContent;
(function (JustifyContent) {
    JustifyContent["Start"] = "flex-start";
    JustifyContent["End"] = "flex-end";
    JustifyContent["Center"] = "center";
    JustifyContent["Between"] = "space-between";
    JustifyContent["Around"] = "space-around";
})(JustifyContent || (JustifyContent = {}));
var Row = /** @class */ (function (_super) {
    __extends(Row, _super);
    function Row(param) {
        var _this = this;
        param = param || {};
        var elementParam = {
            elementType: 'div',
            className: 'bfui-row'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Row',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        _this.setJustifyContent(param.justifyContent);
        param.contents && param.contents.forEach(function (control) {
            _this.addControl(control);
        });
        return _this;
    }
    Row.prototype.setJustifyContent = function (justifyContentKeyParam) {
        var justifyContentKey = Object.keys(JustifyContent).indexOf(justifyContentKeyParam) >= 0 ? justifyContentKeyParam : 'Between';
        var justifyContent = JustifyContent[justifyContentKey];
        this.getDomElement().css('justifyContent', justifyContent);
    };
    return Row;
}(ControlGroup_1.ControlGroup));
exports.default = Row;

},{"../../ControlGroup":60}],64:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ControlGroup_1 = require("../../ControlGroup");
var ControlAlignOption_1 = require("../../ControlAlign/ControlAlignOption");
var StyleUtil_1 = require("../../Common/Utils/StyleUtil");
// 工具条
var Toolbar = /** @class */ (function (_super) {
    __extends(Toolbar, _super);
    function Toolbar(param) {
        var _this = this;
        param = param || {};
        var elementParam = StyleUtil_1.default.formatElementParam({
            elementType: 'div',
            className: 'bfui-toolbar'
        }, param.elementParam);
        var controlParam = {
            elementParam: elementParam,
            type: 'Toolbar',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        _this.isHorizontal = param.isHorizontal !== false;
        _this.isFullLength = param.isFullLength === true;
        _this.controlAlign = param.controlAlign || (_this.isHorizontal ? ControlAlignOption_1.default.Left : ControlAlignOption_1.default.Top);
        var fullClass = _this.isFullLength ? '-full' : '';
        _this.isHorizontal ? _this.addClass("bfui-toolbar-horizontal" + fullClass) : _this.addClass("bfui-toolbar-vertical" + fullClass);
        _this.addClass("bfui-align-" + _this.controlAlign.toLowerCase());
        return _this;
    }
    return Toolbar;
}(ControlGroup_1.ControlGroup));
exports.default = Toolbar;

},{"../../Common/Utils/StyleUtil":56,"../../ControlAlign/ControlAlignOption":58,"../../ControlGroup":60}],65:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../Control");
var Dom_1 = require("../../Dom");
var StyleUtil_1 = require("../../Common/Utils/StyleUtil");
//Button组件类
var Button = /** @class */ (function (_super) {
    __extends(Button, _super);
    function Button(param) {
        var _this = this;
        param = param || {};
        var elementParam = StyleUtil_1.default.formatElementParam({
            elementType: 'div',
            className: 'bfui-button'
        }, param.elementParam);
        var controlParam = {
            elementParam: elementParam,
            type: 'Button',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        param.text && _this.setText(param.text);
        _this.selectable = param.selectable === true;
        _this.selectable && (_this.select = false);
        param.iconClass && _this.setIcon(param.iconClass);
        param.tooltip && _this.setTooltip(param.tooltip);
        param.clickCallback instanceof Function && _this.onClick(param.clickCallback);
        return _this;
    }
    // 获取文本
    Button.prototype.getText = function () {
        return this._domElement.html();
    };
    // 设置文本
    Button.prototype.setText = function (text) {
        this._domElement.html(text);
        return this;
    };
    // 设置按钮的图标
    Button.prototype.setIcon = function (iconClass) {
        if (!iconClass)
            return this;
        if (!this.icon) {
            this.icon = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-button-icon' });
            this._domElement.append(this.icon);
        }
        else {
            this.icon.removeClass(this.iconClass);
        }
        this.iconClass = iconClass;
        this.icon.addClass(iconClass);
        return this;
    };
    // 获取是否可Select
    Button.prototype.isSelectable = function () {
        return this.selectable;
    };
    // 获取当前的Select状态
    Button.prototype.isSelected = function () {
        return this.select;
    };
    // 设置Select状态
    Button.prototype.setSelected = function (select) {
        if (!this.selectable)
            return this;
        select = select === true;
        if (select) {
            this._domElement.addClass('bfui-button-select');
        }
        else {
            this._domElement.removeClass('bfui-button-select');
        }
        this.select = select;
        return this;
    };
    return Button;
}(Control_1.Control));
exports.default = Button;

},{"../../Common/Utils/StyleUtil":56,"../../Control":57,"../../Dom":81}],66:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckState = void 0;
var Control_1 = require("../../Control");
var UIEvents_1 = require("../../UIEvents");
var Dom_1 = require("../../Dom");
//CheckState组件类
var CheckState = /** @class */ (function (_super) {
    __extends(CheckState, _super);
    function CheckState(param) {
        var _this = _super.call(this, param) || this;
        var inputPart = _this.inputPart = new Dom_1.Dom().createElement({ elementType: 'input', className: param.className });
        inputPart.attribute('type', param.name);
        _this._domElement.on('click', function (evt) {
            if (!evt.target.hasClass(param.className)) {
                _this.inputPart.getElement().click();
            }
        });
        inputPart.on('change', function () {
            _this.trigger(UIEvents_1.default.ValueChanged, _this, _this.getValue(), _this.isChecked());
        });
        var textPart = _this.textPart = new Dom_1.Dom().createElement({ elementType: 'label', className: "bfui-checkState-text" });
        _this._domElement.append(inputPart).append(textPart);
        _this.setValue(param.value === undefined ? true : param.value);
        param.label && _this.setLabel(param.label);
        param.enabled === false && _this.setEnabled(param.enabled);
        param.checked === true && _this.setChecked(param.checked);
        return _this;
    }
    // 多选框选中状态发生变化的事件
    CheckState.prototype.onChange = function (fn) {
        this.on(UIEvents_1.default.ValueChanged, fn);
        return this;
    };
    // 获取文本
    CheckState.prototype.getLabel = function () {
        return this.textPart.html();
    };
    // 设置文本
    CheckState.prototype.setLabel = function (text) {
        this.textPart.html(text);
        return this;
    };
    // 获取多选框的启用状态
    CheckState.prototype.isEnabled = function () {
        return !this.inputPart.attribute('disabled');
    };
    // 设置多选框的启用状态
    CheckState.prototype.setEnabled = function (isEnabled) {
        if (isEnabled != this.isEnabled()) {
            this.textPart.toggle('bfui-checkState-text-disabled');
            this.inputPart.attribute('disabled', !isEnabled);
        }
        return this;
    };
    // 获取多选框的选中状态
    CheckState.prototype.isChecked = function () {
        return this.inputPart.attribute('checked');
    };
    // 设置多选框的选中状态
    CheckState.prototype.setChecked = function (checked) {
        if (checked != this.isChecked()) {
            this.inputPart.attribute('checked', checked);
            this.trigger(UIEvents_1.default.ValueChanged, this, this.getValue(), checked);
        }
        return this;
    };
    // 获取当前checkState状态
    CheckState.prototype.getValue = function () {
        return this.value;
    };
    // 设置checkState状态
    CheckState.prototype.setValue = function (value) {
        this.value = value;
        return this;
    };
    return CheckState;
}(Control_1.Control));
exports.CheckState = CheckState;

},{"../../Control":57,"../../Dom":81,"../../UIEvents":82}],67:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var CheckState_1 = require("./../CheckState/CheckState");
var StatisticsDataManager_1 = require("../../../Common/StatisticsDataManager");
var SNS = StatisticsDataManager_1.getUINamespace('Checkbox');
//Checkbox组件类
var Checkbox = /** @class */ (function (_super) {
    __extends(Checkbox, _super);
    function Checkbox(param) {
        var _this = this;
        StatisticsDataManager_1.SDM.send(SNS, "bf_c_UICheckBox_new");
        var elementParam = {
            elementType: 'div',
            className: 'bfui-checkbox'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Checkbox',
            name: 'checkbox',
            id: param.id,
            className: 'bfui-checkbox-checkbox',
            parent: param.parent
        };
        param = Object.assign({}, controlParam, param);
        _this = _super.call(this, param) || this;
        return _this;
    }
    return Checkbox;
}(CheckState_1.CheckState));
exports.default = Checkbox;

},{"../../../Common/StatisticsDataManager":51,"./../CheckState/CheckState":66}],68:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Collapse = void 0;
var Control_1 = require("../../Control");
var Dom_1 = require("../../Dom");
//Collapse组件类
var Collapse = /** @class */ (function (_super) {
    __extends(Collapse, _super);
    function Collapse(param) {
        var _this = this;
        var elementParam = {
            elementType: 'tbody',
            className: 'bfui-collapse-tbody'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Collapse',
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        // let tbodyPart = this.tbodyPart = new Dom().createElement({ elementType: 'tbody', className :param.isCollapse?'bf-collapse':'' });
        var tbodyPart = _this._domElement;
        var titlePart = new Dom_1.Dom().createElement({ elementType: 'tr', className: 'bfui-collapse-title bfui-transition' });
        titlePart.html("<td colspan=\"2\"><i class=\"bfui-collapse-icon\"></i>" + param.group + "</td>");
        tbodyPart.append(titlePart);
        if (param.items && param.items.length > 0) {
            param.items.forEach(function (item) {
                var tr = new Dom_1.Dom().createElement({ elementType: 'tr', className: 'bfui-collapse-content' });
                tr.html("<td class=\"bfui-collapse-content-key\"><div  class=\"bfui-collapse-content-padding\"></div><div   class=\"bfui-collapse-content-name\">" + item.key + "</div></td><td class=\"bfui-collapse-content-value\">" + item.value + "</td>");
                tbodyPart.append(tr);
            });
        }
        titlePart.on('click', function () {
            tbodyPart.toggleClass('bfui-collapse-collapse');
        });
        return _this;
    }
    return Collapse;
}(Control_1.Control));
exports.Collapse = Collapse;

},{"../../Control":57,"../../Dom":81}],69:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../Control");
//Input组件类
var Input = /** @class */ (function (_super) {
    __extends(Input, _super);
    function Input(param) {
        var _this = this;
        param = param || {};
        var elementParam = {
            elementType: 'input',
            className: 'bfui-input'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Input',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        _this._domElement.attribute('type', 'text');
        param.onClick && _this.onClick(param.onClick);
        param.onBlur && _this.onBlur(param.onBlur);
        return _this;
    }
    Input.prototype.getValue = function () {
        return this._domElement.attribute('value');
    };
    Input.prototype.setValue = function (value) {
        return this._domElement.attribute('value', value);
    };
    Input.prototype.onChange = function (fn) {
        var _this = this;
        this.onChangeFn && this._domElement.off('blur', this.onChangeFn);
        this._domElement.on('change', function (evt) {
            _this.onChangeFn(evt.target.value);
        });
        this.onChangeFn = fn;
    };
    Input.prototype.onBlur = function (fn) {
        this.onBlurFn && this._domElement.off('blur', this.onBlurFn);
        this._domElement.on('blur', fn);
        this.onBlurFn = fn;
    };
    Input.prototype.enabled = function (isEnabled) {
        this._domElement.attribute('disabled', isEnabled ? '' : true);
        return this;
    };
    return Input;
}(Control_1.Control));
exports.default = Input;

},{"../../Control":57}],70:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../Control");
//Label组件类
var Label = /** @class */ (function (_super) {
    __extends(Label, _super);
    function Label(param) {
        var _this = this;
        param = param || {};
        var elementParam = {
            elementType: 'div',
            className: 'bfui-label'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Label',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        param.text && _this.setText(param.text);
        param.onClick && _this.onClick(param.onClick);
        param.className && _this.addClass(param.className);
        return _this;
    }
    // 获取文本
    Label.prototype.getText = function () {
        return this._domElement.html();
    };
    // 设置文本
    Label.prototype.setText = function (text) {
        this._domElement.html(text);
        return this;
    };
    return Label;
}(Control_1.Control));
exports.default = Label;

},{"../../Control":57}],71:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../Control");
//Link组件类
var Link = /** @class */ (function (_super) {
    __extends(Link, _super);
    function Link(param) {
        var _this = this;
        param = param || {};
        var elementParam = {
            elementType: 'a',
            className: 'bfui-link'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Link',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        param.text && _this.setText(param.text);
        _this.setHref(param.href);
        param.onClick && _this.onClick(param.onClick);
        return _this;
    }
    // 获取文本
    Link.prototype.getText = function () {
        return this._domElement.html();
    };
    // 设置文本
    Link.prototype.setText = function (text) {
        this._domElement.html(text);
        return this;
    };
    Link.prototype.getHref = function () {
        return this.href;
    };
    Link.prototype.setHref = function (href) {
        this.href = href || 'javascript:void(0)';
        this._domElement.attribute('href', this.href);
        return this;
    };
    return Link;
}(Control_1.Control));
exports.default = Link;

},{"../../Control":57}],72:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ControlGroup_1 = require("../../ControlGroup");
var Dom_1 = require("../../Dom");
var StatisticsDataManager_1 = require("../../../Common/StatisticsDataManager");
var SNS = StatisticsDataManager_1.getUINamespace('Panel');
//Panel组件类
var Panel = /** @class */ (function (_super) {
    __extends(Panel, _super);
    function Panel(param) {
        var _this = this;
        StatisticsDataManager_1.SDM.send(SNS, "bf_c_UIPanel_new");
        param = param || {};
        var elementParam = {
            elementType: 'div',
            className: 'bfui-panel'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Panel',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        param.onClick && _this.onClick(param.onClick);
        var header = _this.header = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-panel-header' });
        var contentElementParam = {
            elementType: 'div',
            className: 'bfui-panel-content'
        };
        var contentControlParam = {
            elementParam: contentElementParam,
            type: 'ControlGroup',
        };
        var content = _this.content = new ControlGroup_1.ControlGroup(contentControlParam);
        _this._domElement.append(header).append(content.getDomElement());
        var title = _this.title = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-panel-title' });
        var headerCloseButton = _this.headerCloseButton = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-button bfui-panel-headerclosebutton gld-bf-close-sm' });
        header.append(title).append(headerCloseButton);
        _this.onCloseFn = function () { _this.hide(); };
        headerCloseButton.on('click', _this.onCloseFn);
        param.title && _this.setTitle(param.title);
        _this.sizeFixed = param.sizeFixed === true;
        _this.draggable = param.draggable !== false;
        _this.footerDisabled = param.footerDisabled === true;
        param.position && _this.setPosition(param.position);
        if (!isNaN(param.width)) {
            _this.width = param.width;
            if (!isNaN(param.minWidth) && param.minWidth > _this.width) {
                param.minWidth = _this.width;
            }
        }
        else {
            _this.width = 300;
        }
        param.minWidth = param.minWidth || 100;
        _this.getDomElement().css({ 'width': _this.width + "px" });
        if (!isNaN(param.height)) {
            _this.height = param.height;
            if (!isNaN(param.minHeight) && param.minHeight > _this.height) {
                param.minHeight = _this.height;
            }
            _this.getDomElement().css('height', _this.height + "px");
        }
        else { // 根据产品定义，用户未定义高度时，默认最小高度200px，最大高度420px，中间根据内容浮动
            _this.height = 200;
            _this.getDomElement().css({ 'minHeight': "200px", 'maxHeight': "420px" });
        }
        param.minHeight = param.minHeight || 80;
        // 鼠标按下时此panel移到最上层
        _this.getDomElement().on('mousedown', function () {
            _this.topShow();
        });
        // 设置拖动位置事件
        if (_this.draggable) {
            var dragging_1 = false, startX_1, startY_1, startOffsetX_1, startOffsetY_1, parentDom_1, parentDimensions_1, selfDimensions_1, selfAnchor_1;
            var mousemove_1 = function (event) {
                if (!dragging_1)
                    return;
                var x = event.clientX - startX_1 + startOffsetX_1;
                var y = event.clientY - startY_1 + startOffsetY_1;
                // 控制panel不超出父级div范围
                var parentWidth = parentDimensions_1.width, parentHeight = parentDimensions_1.height;
                var selfWidth = selfDimensions_1.width, selfHeight = selfDimensions_1.height;
                var minX, minY, maxX, maxY;
                if (selfAnchor_1.indexOf('left') >= 0) {
                    minX = 0;
                    maxX = parentWidth - selfWidth;
                }
                else if (selfAnchor_1.indexOf('right') >= 0) {
                    minX = -parentWidth + selfWidth;
                    maxX = 0;
                }
                else if (selfAnchor_1.indexOf('center') >= 0) {
                    minX = -(parentWidth - selfWidth) / 2;
                    maxX = (parentWidth - selfWidth) / 2;
                }
                if (selfAnchor_1.indexOf('top') >= 0) {
                    minY = 0;
                    maxY = parentHeight - selfHeight;
                }
                else if (selfAnchor_1.indexOf('bottom') >= 0) {
                    minY = -parentHeight + selfHeight;
                    maxY = 0;
                }
                else if (selfAnchor_1.indexOf('middle') >= 0) {
                    minY = -(parentHeight - selfHeight) / 2;
                    maxY = (parentHeight - selfHeight) / 2;
                }
                x = Math.max(x, minX);
                x = Math.min(x, maxX);
                y = Math.max(y, minY);
                y = Math.min(y, maxY);
                _this.setOffset({ x: x, y: y });
            };
            var mouseup_1 = function (event) {
                dragging_1 = false;
                parentDom_1.off('mousemove', mousemove_1).off('mouseup', mouseup_1);
            };
            header.on('mousedown', function (event) {
                dragging_1 = true;
                startX_1 = event.clientX;
                startY_1 = event.clientY;
                var _a = _this.getPositionParam(), anchor = _a.anchor, _b = _a.offset, x = _b.x, y = _b.y;
                selfAnchor_1 = anchor.toLowerCase();
                startOffsetX_1 = x;
                startOffsetY_1 = y;
                parentDom_1 = parentDom_1 || new Dom_1.Dom(_this.getDomElement().getElement().parentElement);
                parentDom_1.on('mousemove', mousemove_1).on('mouseup', mouseup_1);
                parentDimensions_1 = parentDom_1.getDimensions();
                selfDimensions_1 = _this.getDimensions();
            }).on('mousemove', mousemove_1).on('mouseup', mouseup_1).addClass('bfui-panel-header-dragable');
        }
        // 设置拖动大小事件
        if (!_this.sizeFixed) {
            var minWidth_1 = param.minWidth, minHeight_1 = param.minHeight;
            _this.sizeFixedDom = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-panel-sizefixed' });
            _this.getDomElement().append(_this.sizeFixedDom);
            var dragging_2 = false, startX_2, startY_2, startWidth_1, startHeight_1, parentDom_2;
            var mousemove_2 = function (event) {
                if (!dragging_2)
                    return;
                var formerWidth = _this.width, formerHeight = _this.height;
                _this.width = event.clientX - startX_2 + startWidth_1;
                _this.height = event.clientY - startY_2 + startHeight_1;
                _this.width < minWidth_1 && (_this.width = minWidth_1);
                _this.height < minHeight_1 && (_this.height = minHeight_1);
                _this.getDomElement().css({ width: _this.width + "px", height: _this.height + "px" });
                var _a = _this.getPositionParam(), _b = _a.offset, x = _b.x, y = _b.y, anchor = _a.anchor;
                var deltaX = _this.width - formerWidth, deltaY = _this.height - formerHeight;
                if (anchor.indexOf('Center') >= 0) {
                    x += deltaX / 2;
                }
                if (anchor.indexOf('Middle') >= 0) {
                    y += deltaY / 2;
                }
                if (anchor.indexOf('Right') >= 0) {
                    x += deltaX;
                }
                if (anchor.indexOf('Bottom') >= 0) {
                    y += deltaY;
                }
                _this.setOffset({ x: x, y: y });
            };
            var mouseup_2 = function (event) {
                dragging_2 = false;
                parentDom_2.off('mousemove', mousemove_2).off('mouseup', mouseup_2);
            };
            _this.sizeFixedDom.on('mousedown', function (event) {
                _this.getDomElement().css({ height: _this.getHeight() + "px" }).css({ minWidth: minWidth_1 + "px", minHeight: minHeight_1 + "px", maxHeight: '' });
                dragging_2 = true;
                startX_2 = event.clientX;
                startY_2 = event.clientY;
                startWidth_1 = _this.getWidth();
                startHeight_1 = _this.getHeight();
                parentDom_2 = parentDom_2 || new Dom_1.Dom(_this.getDomElement().getElement().parentElement);
                parentDom_2.on('mousemove', mousemove_2).on('mouseup', mouseup_2);
            }).on('mousemove', mousemove_2).on('mouseup', mouseup_2);
        }
        // 设置footer
        if (_this.footerDisabled) {
            var footerElementParam = {
                elementType: 'div',
                className: 'bfui-panel-footer'
            };
            var footerControlParam = {
                elementParam: footerElementParam,
                type: 'ControlGroup',
            };
            _this.footer = new ControlGroup_1.ControlGroup(footerControlParam);
            _this._domElement.append(_this.footer.getDomElement());
        }
        return _this;
    }
    Panel.prototype.setTips = function (tips, type) {
        if (this.tipsElement) {
            this.tipsElement.destroy();
        }
        var classMap = {
            default: "bfui-panel-tips",
            loading: "bfui-panel-loading"
        };
        var className = classMap[type] || classMap.default;
        var tipsElement = new Dom_1.Dom().createElement({ elementType: 'div', className: className });
        tipsElement.html(tips);
        this.tipsElement = tipsElement;
        this.showTips();
    };
    Panel.prototype.showTips = function () {
        if (this.tipsElement) {
            this.content.getDomElement().html('');
            this.content.getDomElement().append(this.tipsElement);
            return this;
        }
    };
    Panel.prototype.getContent = function () {
        return this.content;
    };
    Panel.prototype.clearContent = function () {
        this.content.getDomElement().html('');
        return this;
    };
    Panel.prototype.getFooter = function () {
        return this.footer;
    };
    Panel.prototype.clearFooter = function () {
        this.footerDisabled && this.footer.getDomElement().html('');
        return this;
    };
    // 设置Header文字
    Panel.prototype.setTitle = function (text) {
        this.title.html(text);
        return this;
    };
    Panel.prototype.getTitle = function () {
        return this.title.html();
    };
    Panel.prototype.addControl = function (control, option) {
        this.content.addControl(control, option);
        return this;
    };
    Panel.prototype.removeControl = function (control) {
        this.content.removeControl(control);
        return this;
    };
    Panel.prototype.indexOf = function (control) {
        return this.content.indexOf(control);
    };
    Panel.prototype.getControl = function (condition) {
        return this.content.getControl(condition);
    };
    Panel.prototype.getAllControls = function () {
        return this.content.getAllControls();
    };
    // 设置panel的关闭事件
    Panel.prototype.onClose = function (fn, hide) {
        var _this = this;
        if (hide === void 0) { hide = true; }
        this.headerCloseButton.off('click', this.onCloseFn);
        this.onCloseFn = function (data) {
            fn(data);
            hide && _this.hide();
        };
        this.headerCloseButton.on('click', this.onCloseFn);
        return this;
    };
    Panel.prototype.topShow = function () {
        var list = document.querySelectorAll('.bfui-panel');
        list.forEach(function (element) {
            var dom = new Dom_1.Dom(element);
            dom.removeClass('bfui-panel-topshow');
        });
        this.getDomElement().addClass('bfui-panel-topshow');
    };
    return Panel;
}(ControlGroup_1.Control));
exports.default = Panel;

},{"../../../Common/StatisticsDataManager":51,"../../ControlGroup":60,"../../Dom":81}],73:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var CheckState_1 = require("./../CheckState/CheckState");
//Radio组件类
var Radio = /** @class */ (function (_super) {
    __extends(Radio, _super);
    function Radio(param) {
        var _this = this;
        var elementParam = {
            elementType: 'div',
            className: 'bfui-radio'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Radio',
            name: 'radio',
            id: param.id,
            className: 'bfui-radio-radio',
            parent: param.parent
        };
        param = Object.assign({}, controlParam, param);
        _this = _super.call(this, param) || this;
        return _this;
    }
    return Radio;
}(CheckState_1.CheckState));
exports.default = Radio;

},{"./../CheckState/CheckState":66}],74:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../Control");
var UIEvents_1 = require("../../UIEvents");
var Dom_1 = require("../../Dom");
var SelectOptionGroup_1 = require("./SelectOptionGroup");
var StatisticsDataManager_1 = require("../../../Common/StatisticsDataManager");
var SNS = StatisticsDataManager_1.getUINamespace('Select');
/**
 * Select组件类
 */
var Select = /** @class */ (function (_super) {
    __extends(Select, _super);
    function Select(param) {
        var _this = this;
        StatisticsDataManager_1.SDM.send(SNS, "bf_c_UISelect_new");
        param = param || {};
        var elementParam = {
            elementType: 'div',
            className: 'bfui-select'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Select',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        _this.enableAnimation = param.enableAnimation !== false;
        // Select的header部分，由显示的选中Text及下拉button组成
        var header = _this.header = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-select-header' });
        var title = _this.title = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-select-title' });
        title.html('请选择');
        var toggleButton = _this.toggleButton = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-button bfui-select-togglebutton gld-bf-arrow-down-sm' });
        _this.enableAnimation && toggleButton.addClass('bfui-select-animation');
        header.append(title).append(toggleButton).on('click', function (evt) {
            if (_this.disabled)
                return;
            _this.content.isVisible() ? _this.hideContent() : _this.showContent();
        });
        // Select的content部分，基于ControlGroup建立了SelectOptionGroup子类，用于管理多个SelectOption
        var content = _this.content = new SelectOptionGroup_1.default({ enableAnimation: _this.enableAnimation, values: param.values });
        _this.getDomElement().append(header);
        new Dom_1.Dom(document.body).append(content.getDomElement());
        _this.onChange(param.onChange);
        // 选中项发生变化时，更新header文字，隐藏content，并触发onChange事件
        content.on(UIEvents_1.default.ValueChanged, function (data) {
            _this.title.html(content.getSelected().getText());
            _this.onChangeCallback instanceof Function && _this.onChangeCallback(data);
        });
        content.on(UIEvents_1.default.Clicked, function (clickedOption) {
            _this.hideContent();
        });
        // this.getDomElement().on('mouseleave', ()=> this.hideContent());  // 鼠标离开Select组件时隐藏content
        param.defaultIndex !== undefined && _this.setSelected(param.defaultIndex); // 根据配置设置初始选中序号
        param.width && (_this.getDomElement().css('width', param.width + "px")); // 根据配置设置Select组件的宽度
        document.addEventListener('mousedown', function (evt) {
            var headerDom = header.getElement(), targetParent = evt.target.parentElement;
            if (evt.target == headerDom || targetParent == headerDom || targetParent == content.getDomElement().getElement() || evt.target == content.getDomElement().getElement()) {
                return;
            }
            _this.hideContent();
        }, false);
        window.addEventListener('resize', function () {
            _this._resize();
        });
        _this.scrollFunc = _this._scrollFunc.bind(_this);
        return _this;
    }
    Select.prototype._resize = function () {
        var domRect = this.header.getPosition();
        this.content.setFixedPosition(domRect);
    };
    /**
     * 设置option内容
     * @param {Array<string | IOptionParam>} values 由string或IOptionParam组成的数组
     */
    Select.prototype.setValues = function (values) {
        this.content.setValues(values);
        return this;
    };
    /**
     * 设置选中项
     * @param {Number} index 选中序号
     */
    Select.prototype.setSelected = function (index) {
        this.content.setSelectedByIndex(index);
        this.title.html(this.content.getSelected().getText());
        this.hideContent();
        return this;
    };
    /**
     * 根据Value设置Option选中状态
     * @param {String | Number} value Option的Value值
     */
    Select.prototype.setSelectedByValue = function (value) {
        this.content.setSelectedByValue(value);
        return this;
    };
    /**
     * 设置Select组件不可用状态
     * @param {Boolean} disabled 组件不可用状态，默认为true
     */
    Select.prototype.setDisabled = function (disabled) {
        if (disabled === void 0) { disabled = true; }
        this.disabled = disabled;
        disabled ? this.addClass('bfui-select-disabled') : this.removeClass('bfui-select-disabled');
    };
    /**
     * 设置onChange回调函数
     * @param {Function} fn onChange回调函数
     */
    Select.prototype.onChange = function (fn) {
        fn instanceof Function && (this.onChangeCallback = fn);
        return this;
    };
    Select.prototype._scrollFunc = function () {
        this.hideContent();
        //移除监听容器的滚动事件
        this.getDomElement().getParent().removeEventListener('scroll', this.scrollFunc, false);
    };
    /**
     * 显示options
     */
    Select.prototype.showContent = function () {
        this.toggleButton.addClass('bfui-select-togglebutton-opened');
        this._resize();
        this.content.show();
        //监听容器的滚动事件
        this.getDomElement().getParent().addEventListener('scroll', this.scrollFunc, false);
        return this;
    };
    /**
     * 隐藏options
     */
    Select.prototype.hideContent = function () {
        this.toggleButton.removeClass('bfui-select-togglebutton-opened');
        this.content.hide();
        return this;
    };
    return Select;
}(Control_1.Control));
exports.default = Select;

},{"../../../Common/StatisticsDataManager":51,"../../Control":57,"../../Dom":81,"../../UIEvents":82,"./SelectOptionGroup":76}],75:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SelectOption = void 0;
var Control_1 = require("../../Control");
var UIEvents_1 = require("../../UIEvents");
/**
 * SelectOption组件类，作为Select组件的单条option
 */
var SelectOption = /** @class */ (function (_super) {
    __extends(SelectOption, _super);
    function SelectOption(param) {
        var _this = this;
        param = param || {};
        var elementParam = {
            elementType: 'div',
            className: 'bfui-select-option'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'SelectOption',
        };
        _this = _super.call(this, controlParam) || this;
        _this.setTooltip(param.text).getDomElement().html(param.text);
        _this.disabled = param.disabled === true;
        _this.selected = param.selected === true;
        _this.value = param.value;
        _this.setDisabled(_this.disabled).setSelected(_this.selected);
        // 点击本条option时，调用SelectOptionGroup的setSelected事件，将本条option设置为选中，其他option取消选中
        _this.onClick(function () {
            if (!_this.selected && !_this.disabled) {
                _this._parent.setSelected(_this);
            }
            _this.trigger(UIEvents_1.default.Clicked);
        });
        return _this;
    }
    /**
     * 设置选中状态
     * @param {Boolean} selected 选中状态
     */
    SelectOption.prototype.setSelected = function (selected) {
        if (!this.disabled && this.selected !== selected) {
            this.selected = selected;
            selected ? this.addClass('bfui-select-option-selected') : this.removeClass('bfui-select-option-selected');
        }
        return this;
    };
    /**
     * 设置不可用状态
     * @param {Boolean} disabled 不可用状态
     */
    SelectOption.prototype.setDisabled = function (disabled) {
        if (this.disabled !== disabled) {
            this.setSelected(false);
            this.disabled = disabled;
            disabled ? this.addClass('bfui-select-option-disabled') : this.removeClass('bfui-select-option-disabled');
        }
        return this;
    };
    /**
     * 获取option的文本内容
     */
    SelectOption.prototype.getText = function () {
        return this.getDomElement().html();
    };
    /**
     * 获取option的实际value，如未设置value则返回option的text文本内容
     */
    SelectOption.prototype.getValue = function () {
        return this.value || this.getText();
    };
    return SelectOption;
}(Control_1.Control));
exports.SelectOption = SelectOption;

},{"../../Control":57,"../../UIEvents":82}],76:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ControlGroup_1 = require("../../ControlGroup");
var UIEvents_1 = require("../../UIEvents");
var SelectOption_1 = require("./SelectOption");
var DataUtil_1 = require("../../../Common/Utils/DataUtil");
/**
 * SelectOptionGroup组件类，管理多条SelectOption
 */
var SelectOptionGroup = /** @class */ (function (_super) {
    __extends(SelectOptionGroup, _super);
    function SelectOptionGroup(config) {
        var _this = this;
        var contentElementParam = {
            elementType: 'div',
            className: 'bfui-select-content'
        };
        var contentControlParam = {
            // parent: document.getElementsByTagName('body')[0],
            elementParam: contentElementParam,
            type: 'ControlGroup',
        };
        _this = _super.call(this, contentControlParam) || this;
        _this.enableAnimation = config.enableAnimation !== false;
        _this.enableAnimation && _this.addClass('bfui-select-animation');
        config.values && _this.setValues(config.values);
        _this.hide();
        return _this;
    }
    /**
     * 设置option内容
     * @param {Array<string | IOptionParam>} values option内容
     */
    SelectOptionGroup.prototype.setValues = function (values) {
        var _this = this;
        this.clearControls();
        this.values = [];
        values.forEach(function (value) {
            var param;
            if (!DataUtil_1.default.assertType(value, 'obj')) {
                param = { text: value.toString() };
            }
            else {
                param = value;
            }
            _this.values.push(param);
            var option = new SelectOption_1.SelectOption(param);
            _this.addControl(option);
            option.on(UIEvents_1.default.Clicked, function () {
                _this.trigger(UIEvents_1.default.Clicked, option);
            });
        });
        if (this.enableAnimation) { // 支持动画状态时，设置Option内容后，获取SelectOptionGroup的height值，用于show/hide
            this._height = values.length * 25 + 2; // 组件未挂载时无法通过接口获取准确高度，直接根据每个option的高度（25px）加border上下各1px得到实际高度
        }
        return this;
    };
    /**
     * 获取当前显示/隐藏状态
     */
    SelectOptionGroup.prototype.isVisible = function () {
        return this.enableAnimation ? this._visible : _super.prototype.isVisible.call(this);
    };
    SelectOptionGroup.prototype.setFixedPosition = function (position) {
        var pageHeight = window.innerHeight, maxHeight = 125, dom = this.getDomElement().getElement(), minHeight = Math.min(maxHeight, this._height);
        if (position.bottom + minHeight > pageHeight) {
            dom.style.top = '';
            dom.style.bottom = pageHeight - position.top + 'px';
        }
        else {
            dom.style.top = position.bottom + 'px';
            dom.style.bottom = '';
        }
        dom.style.left = position.left + 'px';
        dom.style.width = position.right - position.left + 'px';
    };
    /**
     * 显示组件
     */
    SelectOptionGroup.prototype.show = function () {
        var _this = this;
        if (this.enableAnimation) { // 支持动画状态时，通过height变化显示组件
            this._visible = true;
            var transitionEndFn_1 = function () {
                if (_this._inTransition) {
                    _this.getDomElement().removeClass('bfui-select-overflow-hidden').off('transitionend', transitionEndFn_1);
                    _this._inTransition = false;
                }
            };
            this._inTransition = true;
            this.getDomElement().addClass('bfui-select-overflow-hidden').css({ 'border-width': '1px', 'height': this._height + 'px' }).on('transitionend', transitionEndFn_1);
        }
        else {
            _super.prototype.show.call(this);
        }
        return this;
    };
    /**
     * 隐藏组件
     */
    SelectOptionGroup.prototype.hide = function () {
        if (this.enableAnimation) { // 支持动画状态时，通过height变化隐藏组件
            this._visible = false;
            this.getDomElement().addClass('bfui-select-overflow-hidden').css({ 'border-width': '0px', 'height': '0px' });
        }
        else {
            _super.prototype.hide.call(this);
        }
        return this;
    };
    /**
     * 设置某条option为选中状态，其他option取消选中
     * @param {SelectOption | string} option 选中的内容
     */
    SelectOptionGroup.prototype.setSelected = function (option) {
        if (option === undefined)
            return;
        var isValidOption = false;
        if (!(option instanceof SelectOption_1.SelectOption)) {
            this.getAllControls().some(function (cControl) {
                if (cControl.getText() === option.toString()) {
                    option = cControl;
                    isValidOption = true;
                    return true;
                }
            });
        }
        else if (this.indexOf(option) >= 0) {
            isValidOption = true;
        }
        if (isValidOption && this.selected !== option) {
            this.getAllControls().forEach(function (cControl) {
                cControl.setSelected(cControl === option ? true : false);
            });
            this.selected = option;
            var text = this.selected.getText();
            var index = this.indexOf(this.selected);
            var value = this.selected.getValue();
            this.trigger(UIEvents_1.default.ValueChanged, { text: text, value: value, index: index });
        }
        return this;
    };
    /**
     * 根据序号设置Option选中状态
     * @param {Number} index Option
     */
    SelectOptionGroup.prototype.setSelectedByIndex = function (index) {
        var option = this.getControl({ index: index });
        if (option) {
            this.setSelected(option);
        }
        return this;
    };
    /**
     * 根据Value设置Option选中状态
     * @param {String | Number} value Option的Value值
     */
    SelectOptionGroup.prototype.setSelectedByValue = function (value) {
        var result;
        this.getAllControls().some(function (option) {
            option = option;
            if (option.getValue() === value) {
                result = option;
                return true;
            }
        });
        return this.setSelected(result);
    };
    /**
     * 获取当前选中的Option
     */
    SelectOptionGroup.prototype.getSelected = function () {
        return this.selected;
    };
    /**
     * 获取所有Option的信息数组
     */
    SelectOptionGroup.prototype.getValues = function () {
        return this.values;
    };
    return SelectOptionGroup;
}(ControlGroup_1.ControlGroup));
exports.default = SelectOptionGroup;

},{"../../../Common/Utils/DataUtil":52,"../../ControlGroup":60,"../../UIEvents":82,"./SelectOption":75}],77:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../Control");
var UIEvents_1 = require("../../UIEvents");
var Dom_1 = require("../../Dom");
//Slider组件类
var Slider = /** @class */ (function (_super) {
    __extends(Slider, _super);
    function Slider(param) {
        var _this = this;
        param = param || {};
        var elementParam = {
            elementType: 'div',
            className: 'bfui-slider'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Slider',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        param.onClick && _this.onClick(param.onClick);
        var sliderLinePart = _this.sliderLinePart = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-slider-line' });
        var sliderValuePart = _this.sliderValuePart = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-slider-value' });
        _this._domElement.append(sliderLinePart).append(sliderValuePart);
        _this.setValue(param.value || 0);
        var dragging = false;
        var startX, startValue;
        sliderValuePart.on('mousedown', function (data) {
            dragging = true;
            startX = data.clientX;
            startValue = _this.getValue();
        });
        var setValue = function (data) {
            if (!dragging)
                return;
            var cX = data.clientX;
            var cValue = startValue + ((cX - startX) * 100 / _this.sliderLinePart.getWidth());
            cValue > 100 && (cValue = 100);
            cValue < 0 && (cValue = 0);
            _this.setValue(cValue);
            startX = cX;
            startValue = cValue;
        };
        _this._domElement.on('mousemove', setValue);
        _this._domElement.on('mouseup', function (data) { setValue(data); dragging = false; });
        _this._domElement.on('mouseout', function (data) { setValue(data); dragging = false; });
        return _this;
    }
    // 获取当前slider的值
    Slider.prototype.getValue = function () {
        return this.value;
    };
    // 设置slider的值
    Slider.prototype.setValue = function (value) {
        this.value = value;
        this.sliderValuePart.css('left', this.sliderLinePart.getWidth() * value / 100 + "px");
        this.trigger(UIEvents_1.default.ValueChanged, this, value);
        return this;
    };
    return Slider;
}(Control_1.Control));
exports.default = Slider;

},{"../../Control":57,"../../Dom":81,"../../UIEvents":82}],78:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Control_1 = require("../../Control");
var UIEvents_1 = require("../../UIEvents");
var Dom_1 = require("../../Dom");
//Switch组件类
var Switch = /** @class */ (function (_super) {
    __extends(Switch, _super);
    function Switch(param) {
        var _this = this;
        param = param || {};
        var elementParam = {
            elementType: 'div',
            className: 'bfui-switch'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Switch',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        param.onClick && _this.onClick(param.onClick);
        var switchPart = _this.switchPart = new Dom_1.Dom().createElement({ elementType: 'input', className: 'bfui-switch-switch' });
        switchPart.attribute('type', 'checkbox');
        switchPart.on('click', function () {
            _this.value = switchPart.attribute('checked');
        });
        var textPart = _this.textPart = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-switch-text' });
        _this._domElement.append(switchPart).append(textPart);
        param.text && _this.setText(param.text);
        param.value && _this.setValue(param.value);
        return _this;
    }
    // 获取文本
    Switch.prototype.getText = function () {
        return this.textPart.html();
    };
    // 设置文本
    Switch.prototype.setText = function (text) {
        this.textPart.html(text);
        return this;
    };
    // 获取当前switch状态
    Switch.prototype.getValue = function () {
        return this.value;
    };
    // 设置switch状态
    Switch.prototype.setValue = function (value) {
        this.value = value;
        this.switchPart.attribute('checked', value);
        this.trigger(UIEvents_1.default.ValueChanged, this, value);
        return this;
    };
    return Switch;
}(Control_1.Control));
exports.default = Switch;

},{"../../Control":57,"../../Dom":81,"../../UIEvents":82}],79:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ControlGroup_1 = require("../../ControlGroup");
var Dom_1 = require("../../Dom");
//Tree组件类
var Tree = /** @class */ (function (_super) {
    __extends(Tree, _super);
    function Tree(param) {
        var _this = this;
        param = param || {};
        var elementParam = {
            elementType: 'div',
            className: 'bfui-tree'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'Tree',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        var contentElementParam = {
            elementType: 'div',
            className: 'bfui-tree-content'
        };
        var contentControlParam = {
            elementParam: contentElementParam,
            type: 'ControlGroup',
        };
        var content = _this.content = new ControlGroup_1.ControlGroup(contentControlParam);
        var header = _this.header = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-tree-header' });
        var footer = _this.footer = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-tree-footer' });
        var title = _this.title = new Dom_1.Dom().createElement({ elementType: 'div', className: 'bfui-tree-title' });
        _this._domElement.append(content.getDomElement());
        // this._domElement.append(header).append(content.getDomElement()).append(footer);
        // header.append(title);
        param.title && _this.setTitle(param.title);
        _this.sizeFixed = param.sizeFixed;
        return _this;
    }
    Tree.prototype.addTreeNode = function (control, option) {
        this.content.addControl(control, option);
    };
    Tree.prototype.getControl = function (condition) {
        return this.content.getControl(condition);
    };
    Tree.prototype.getAllControls = function () {
        return this.content.getAllControls();
    };
    /******* public for client *********/
    // 设置Header文字
    Tree.prototype.setTitle = function (text) {
        this.title.html(text);
        return this;
    };
    Tree.prototype.getTitle = function () {
        return this.title.html();
    };
    // 获取当前选择项
    Tree.prototype.getSelection = function () {
        // 交互细节待补充
    };
    // 清空当前选择
    Tree.prototype.clearSelection = function () {
        // 交互细节待补充
    };
    return Tree;
}(ControlGroup_1.Control));
exports.default = Tree;

},{"../../ControlGroup":60,"../../Dom":81}],80:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ControlGroup_1 = require("../../ControlGroup");
var UIEvents_1 = require("../../UIEvents");
var Dom_1 = require("../../Dom");
//Tree组件类
var TreeNode = /** @class */ (function (_super) {
    __extends(TreeNode, _super);
    function TreeNode(param) {
        var _this = this;
        param = param || {};
        typeof (param.isLoaded) === "undefined" && (param.isLoaded = true); //默认不许要判断模型是否加载
        var elementParam = {
            elementType: 'div',
            className: param.isLoaded ? 'bfui-tree-node' : 'bfui-tree-node not-allowed'
        };
        var controlParam = {
            elementParam: elementParam,
            type: 'TreeNode',
            id: param.id,
            parent: param.parent
        };
        _this = _super.call(this, controlParam) || this;
        var subElementParam = {
            elementType: 'div',
            className: 'bfui-subtree'
        };
        var subControlParam = {
            elementParam: subElementParam,
            type: 'ControlGroup',
        };
        var subNode = _this.subNode = new ControlGroup_1.ControlGroup(subControlParam);
        _this.opt = param;
        _this.opt.isChecked ? _this.checkedState = 'checked'
            : _this.checkedState = 'unchecked';
        return _this;
    }
    TreeNode.prototype.initTreeNode = function (name, icon) {
        var _this = this;
        var treeInfoDom = new Dom_1.Dom().createElement({ elementType: 'div', className: "bfui-tree-info" });
        // 是否有展开收起
        if (this.opt.hasCollapse) {
            var className = this.opt.hasCollapse && this.opt.isExpand ? 'open' : '';
            var collapseWrap = this.collapseWrap = new Dom_1.Dom().createElement({ elementType: 'span', className: "bfui-collapse " + className });
            collapseWrap.html("<i class=\"bimface-icon gld-bf-arrow-down-sm\"></i>");
            collapseWrap.on('click', function () {
                _this.toggleExpansion();
            });
        }
        // 是否有checkbox
        if (this.opt.hasCheckBox) {
            // 在visible是布尔值的情况下，查找子数据是否有uncheck的情况，以此初始化半选状态"bfui-checkbox bfui-half"
            var checkedClass = '';
            if (this.opt.isChecked) {
                if (this.isChildHasUncheckState(this.opt.content.children) && this.opt.parent.checkedState !== 'checked') {
                    checkedClass = "bfui-checkbox bfui-half";
                    this.checkedState = 'half';
                }
                else {
                    checkedClass = 'bfui-checked';
                }
            }
            var checkbox = this.checkbox = new Dom_1.Dom().createElement({ elementType: 'span', className: "bfui-checkbox " + checkedClass });
            checkbox.on('click', function () {
                var enable = !_this.opt.isChecked;
                _this.setCheckState(enable);
                _this.trigger(UIEvents_1.default.CheckedChanged, _this, enable);
            });
        }
        // 是否有隔离显示
        if (this.opt.hasIsolate) {
            var isolateClass = this.opt.isIsolate ? 'gld-bf-component-sm' : 'gld-bf-component-fill-sm';
            var isolateBox = this.isolateBox = new Dom_1.Dom().createElement({ elementType: 'i', className: "bfui-isolate bimface-icon " + isolateClass });
            isolateBox.on('click', function () {
                _this.setIsolateState(!_this.opt.isIsolate);
                _this.trigger(UIEvents_1.default.IsolateChanged, _this, !_this.opt.isIsolate);
            });
        }
        // 节点名称
        var treeName = this.treeName = new Dom_1.Dom().createElement({ elementType: 'span', className: "bfui-tree-name" });
        var nodeIcon = '';
        icon && (icon.type === 'svg' ? nodeIcon = "<svg class=\"bimface-svgicon svg-icon\" aria-hidden=\"true\">\n                                                <use xlink:href=\"#" + icon.name + "\"></use>\n                                              </svg>"
            : nodeIcon = "<i class=\"bimface-icon " + icon.name + "\"></i>");
        treeName.html("" + nodeIcon + name);
        treeName.attribute('title', "" + name);
        treeName.on('click', function () {
            if (!_this.opt.hasSelection && _this.opt.hasCollapse) { // 如果不能被选中择展开收起
                _this.toggleExpansion();
            }
            else { // 节点能被select
                var enable = !_this.selectionState;
                _this.currentUnSelect(_this.opt.rootTree);
                _this.setSelectState(enable);
                _this.trigger(UIEvents_1.default.SelectionChanged, _this, enable);
            }
        });
        this._domElement.append(treeInfoDom);
        this.checkbox && treeInfoDom.append(this.checkbox);
        this.collapseWrap && treeInfoDom.append(this.collapseWrap);
        this.isolateBox && treeInfoDom.append(this.isolateBox);
        treeInfoDom.append(this.treeName);
        this.getTreeInfoDom = function () { return treeInfoDom; };
        this._domElement.append(this.subNode.getDomElement());
    };
    // 选择接口
    TreeNode.prototype.getSelectState = function () {
        return this.selectionState;
    };
    TreeNode.prototype.setSelectState = function (enable) {
        this.selectionState = enable;
        this.selectionState ? this.opt.hasSelection && this.treeName.addClass('bfui-selected')
            : this.treeName && this.treeName.removeClass('bfui-selected');
    };
    TreeNode.prototype.currentUnSelect = function (node) {
        var childNodes = node.getAllControls();
        for (var _i = 0, childNodes_1 = childNodes; _i < childNodes_1.length; _i++) {
            var child = childNodes_1[_i];
            if (child.getSelectState()) {
                child.setSelectState(false);
                child.trigger(UIEvents_1.default.SelectionChanged, child, false);
                break;
            }
            else {
                this.currentUnSelect(child);
            }
        }
    };
    // 勾选接口
    TreeNode.prototype.getCheckedState = function () {
        return this.checkedState;
    };
    ;
    TreeNode.prototype.setCheckState = function (enable) {
        this.checkedState = enable ? 'checked' : 'unchecked';
        this.opt.isChecked = enable;
        if (this.opt.hasCheckBox && this.checkbox) {
            this.checkbox.toggleClass('bfui-checked', enable);
            this.checkbox.removeClass('bfui-half');
        }
        this.setChildCheckState(enable);
    };
    TreeNode.prototype.setChildCheckState = function (enable) {
        //更新子节点的checkstate
        if (this.opt.hasCheckBox && this.checkbox) {
            var subNodes = this.getAllControls();
            this.getCheckedState() !== 'half' && subNodes.forEach(function (node) {
                node.setCheckState(enable);
            });
        }
    };
    TreeNode.prototype.setParentCheckState = function (control) {
        var children = this.getAllControls();
        if (children && children.length > 0) {
            var checkedState = void 0;
            for (var i = 0, len = children.length; i < len; i++) {
                var testState = children[i].getCheckedState();
                if (!checkedState) {
                    checkedState = testState;
                }
                else if (testState != checkedState) {
                    checkedState = 'half';
                }
            }
            this.checkedState = checkedState;
        }
        switch (this.checkedState) {
            case 'checked':
                this.opt.isChecked = true;
                this.checkbox.addClass('bfui-checked');
                this.checkbox.removeClass('bfui-half');
                break;
            case 'unchecked':
                this.opt.isChecked = false;
                this.checkbox.removeClass('bfui-checked');
                this.checkbox.removeClass('bfui-half');
                break;
            case 'half':
                this.opt.isChecked = true;
                this.checkbox.addClass('bfui-half');
                this.checkbox.removeClass('bfui-checked');
                break;
        }
        this.trigger(UIEvents_1.default.ValueChanged, 'check');
    };
    //在visible是布尔值的情况下，查找子数据是否有uncheck的情况，以此初始化半选状态"bfui-checkbox bfui-half
    TreeNode.prototype.isChildHasUncheckState = function (datas) {
        var state;
        var results = [];
        if (datas) { // BFS遍历获取所有子节isVisble点情况
            var queue_1 = [];
            queue_1.unshift(datas);
            var _loop_1 = function () {
                var item = void 0, children;
                item = queue_1.shift();
                item.map(function (node) {
                    results.push(node.isVisible);
                    children = node.children;
                    if (children && children.length > 0) {
                        for (var i = 0; i < children.length; i++)
                            queue_1.push([children[i]]);
                    }
                });
            };
            while (queue_1.length > 0) {
                _loop_1();
            }
        }
        results.includes(false) ? state = true : state = false;
        return state;
    };
    //隔离接口
    TreeNode.prototype.getIsolateState = function () {
        return this.opt.isIsolate;
    };
    ;
    TreeNode.prototype.setIsolateState = function (enable) {
        this.opt.isIsolate = enable;
        if (this.opt.hasIsolate) {
            if (enable) {
                this.isolateBox.removeClass('gld-bf-component-fill-sm');
                this.isolateBox.addClass('gld-bf-component-sm');
            }
            else {
                this.isolateBox.addClass('gld-bf-component-fill-sm');
                this.isolateBox.removeClass('gld-bf-component-sm');
            }
            //更新子节点的checkstate
            var subNodes = this.getAllControls();
            subNodes.forEach(function (node) {
                node.setIsolateState(enable);
            });
        }
    };
    TreeNode.prototype.setParentIsolateState = function (control) {
        var children = this.getAllControls();
        if (children && children.length > 0) {
            var isolateCount = 0;
            for (var i = 0; i < children.length; i++) {
                children[i].getIsolateState() && (isolateCount++);
            }
            // 默认隔离的节点为0， 有隔离加1， 当被隔离的个数等于节点长度时，父节点为true。其余情况为false
            isolateCount === children.length ? (this.opt.isIsolate = true) : (this.opt.isIsolate = false);
        }
        if (this.opt.isIsolate) {
            this.isolateBox.removeClass('gld-bf-component-fill-sm');
            this.isolateBox.addClass('gld-bf-component-sm');
        }
        else {
            this.isolateBox.addClass('gld-bf-component-fill-sm');
            this.isolateBox.removeClass('gld-bf-component-sm');
        }
        this.trigger(UIEvents_1.default.ValueChanged, 'isolate');
    };
    TreeNode.prototype.toggleExpansion = function () {
        this.collapseWrap.toggleClass('open');
        this.opt.isExpand = !this.opt.isExpand;
        this.trigger(UIEvents_1.default.ExpendChanged, this, this.opt.isExpand);
        this.opt.isExpand ? this.subNode.show() : this.subNode.hide();
    };
    // 子节点接口
    TreeNode.prototype.addChildNode = function (control, option) {
        var _this = this;
        this.subNode.addControl(control, option);
        control.on('ValueChanged', function (type) {
            switch (type) {
                case 'check':
                    _this.setParentCheckState(control);
                    break;
                case 'isolate':
                    _this.setParentIsolateState(control);
                    break;
                default:
                    break;
            }
        });
        control.on('CheckedChanged', function () {
            _this.setParentCheckState(control);
        });
        control.on('IsolateChanged', function () {
            _this.setParentIsolateState(control);
        });
        control.on('SelectionChanged', function () {
        });
    };
    TreeNode.prototype.removeChildNode = function () {
        var subTrees = this.getAllControls();
        for (var i = subTrees.length - 1; i >= 0; i--) {
            this.subNode.removeControl(subTrees[i]);
        }
    };
    TreeNode.prototype.getControl = function (condition, deep) {
        if (deep === void 0) { deep = false; }
        if (deep) {
            if (this.subNode.getControl(condition)) {
                return this.subNode.getControl(condition);
            }
            else {
                var controls = this.getAllControls();
                for (var _i = 0, controls_1 = controls; _i < controls_1.length; _i++) {
                    var control = controls_1[_i];
                    var result = control.getControl(condition, deep);
                    if (result)
                        return result;
                }
            }
        }
        else {
            return this.subNode.getControl(condition);
        }
    };
    TreeNode.prototype.getAllControls = function () {
        return this.subNode.getAllControls();
    };
    TreeNode.prototype.updateUnloadControl = function (condition) {
        if (this.getControl(condition)) {
            this.getControl(condition).removeClass('not-allowed');
        }
        else {
            var controls = this.getAllControls();
            controls.forEach(function (item) {
                if (item.getControl(condition)) {
                    item.getControl(condition).removeClass('not-allowed');
                }
                else {
                    item.updateUnloadControl(condition);
                }
            });
        }
    };
    // 获取构件ID
    TreeNode.prototype.getInstanceIds = function () {
        return this.opt.instanceIds;
    };
    // 获取option参数
    TreeNode.prototype.getOptions = function () {
        return this.opt;
    };
    return TreeNode;
}(ControlGroup_1.Control));
exports.default = TreeNode;

},{"../../ControlGroup":60,"../../Dom":81,"../../UIEvents":82}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dom = void 0;
var DataUtil_1 = require("../Common/Utils/DataUtil");
// DomElement操作工具类
var Dom = /** @class */ (function () {
    function Dom(element) {
        this.eventMap = {};
        this.element = element;
    }
    // 创建DomElement对象（使用空的Dom对象初始化时调用）
    Dom.prototype.createElement = function (param) {
        var element = document.createElement(param.elementType);
        var className = param.className;
        if (className) {
            DataUtil_1.default.assertType(className, 'arr') && (className = className.join(' '));
            element.className = className;
        }
        param.id && (element.id = param.id);
        var domObject = new Dom(element);
        if (param.parent) {
            var parent_1 = param.parent instanceof Dom ? param.parent : new Dom(param.parent);
            parent_1.append(domObject);
        }
        domObject.visible = true;
        return domObject; // 返回一个新的以DomElement为参数创建的Dom对象以进行后续的链式操作
    };
    // 获取HTTPElement对象
    Dom.prototype.getElement = function () {
        return this.element;
    };
    // 获取父元素HTTPElement对象
    Dom.prototype.getParent = function () {
        return this.element.parentElement;
    };
    // 末尾附加一个子元素
    Dom.prototype.append = function (childElement) {
        this.element.appendChild(childElement.element);
        return this;
    };
    // 附加一个子元素到指定位置
    Dom.prototype.insert = function (childElement, index) {
        if (index !== undefined && this.element.childNodes.length > index) {
            this.element.insertBefore(childElement.element, this.element.childNodes[index]);
        }
        else {
            this.append(childElement);
        }
        return this;
    };
    // 删除一个子元素
    Dom.prototype.remove = function (childElement) {
        this.element.removeChild(childElement.element);
        return this;
    };
    // 替换元素
    Dom.prototype.replace = function (newElement, oldElement) {
        this.element.replaceChild(newElement.getElement(), oldElement.getElement());
        return this;
    };
    // 显示对象
    Dom.prototype.show = function () {
        if (this.visible)
            return this;
        this.element.style.display = this.displayType;
        this.visible = true;
        return this;
    };
    // 隐藏对象
    Dom.prototype.hide = function () {
        if (!this.visible)
            return this;
        this.displayType = this.element.style.display;
        this.displayType === 'none' && (this.displayType = undefined);
        this.element.style.display = 'none';
        this.visible = false;
        return this;
    };
    // 获取可见性
    Dom.prototype.isVisible = function () {
        return this.visible;
    };
    // 添加dom事件监听
    Dom.prototype.on = function (eventType, fn) {
        this.element.addEventListener(eventType, fn);
        this.eventMap[eventType] = this.eventMap[eventType] || [];
        this.eventMap[eventType].push(fn);
        return this;
    };
    // 删除dom事件监听
    Dom.prototype.off = function (eventType, fn) {
        this.element.removeEventListener(eventType, fn);
        if (this.eventMap[eventType]) {
            var index = this.eventMap[eventType].indexOf(fn);
            index >= 0 && this.eventMap[eventType].splice(index, 1);
        }
        return this;
    };
    // 销毁对象
    Dom.prototype.destroy = function () {
        var _this = this;
        var _loop_1 = function (eventType) {
            this_1.eventMap[eventType].forEach(function (fn) {
                _this.off(eventType, fn);
            });
        };
        var this_1 = this;
        for (var eventType in this.eventMap) {
            _loop_1(eventType);
        }
        this.element.parentElement && this.element.parentElement.removeChild(this.element);
        this.eventMap = undefined;
        this.displayType = undefined;
        this.themeType = undefined;
        this.element = undefined;
    };
    Dom.prototype.getClass = function () {
        return this.getElement().getAttribute('class');
    };
    Dom.prototype.hasClass = function (className) {
        var currentClassName = this.getClass();
        if (!currentClassName)
            return false;
        var arr = currentClassName && currentClassName.split(' ');
        if (arr.indexOf(className) > -1) {
            return true;
        }
        else {
            return false;
        }
    };
    // 添加一个或多个css class
    Dom.prototype.addClass = function () {
        var _a;
        var classes = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            classes[_i] = arguments[_i];
        }
        (_a = this.element.classList).add.apply(_a, classes);
        return this;
    };
    // 删除一个或多个css class
    Dom.prototype.removeClass = function () {
        var _a;
        var classes = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            classes[_i] = arguments[_i];
        }
        (_a = this.element.classList).remove.apply(_a, classes);
        return this;
    };
    Dom.prototype.toggleClass = function (className, enable) {
        var currentClassName = this.getClass(), hasClassName = this.hasClass(className);
        if (enable != undefined) {
            if (enable && !hasClassName) {
                this.addClass(className);
            }
            if (!enable) {
                this.removeClass(className);
            }
        }
        else {
            if (hasClassName) {
                this.removeClass(className);
            }
            else {
                this.addClass(className);
            }
        }
        return !hasClassName;
    };
    // toggle一个css class
    Dom.prototype.toggle = function (classname) {
        this.element.classList.toggle(classname);
        return this;
    };
    // 获取元素当前在页面中的位置
    Dom.prototype.getPosition = function () {
        var _a = this.element.getBoundingClientRect(), top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;
        return { top: top, left: left, right: right, bottom: bottom };
    };
    // 获取元素的尺寸信息
    Dom.prototype.getDimensions = function () {
        var _a = this.element.getBoundingClientRect(), width = _a.width, height = _a.height;
        return { width: width, height: height };
    };
    // 获取元素宽度
    Dom.prototype.getWidth = function () {
        var width = this.element.getBoundingClientRect().width;
        return width;
    };
    // 获取元素高度
    Dom.prototype.getHeight = function () {
        var height = this.element.getBoundingClientRect().height;
        return height;
    };
    // 获取或设置元素的内容
    Dom.prototype.html = function (htmlContent) {
        if (htmlContent != undefined) {
            this.element.innerHTML = htmlContent;
            return this;
        }
        else {
            return this.element.innerHTML;
        }
    };
    // 获取单个css属性或设置单个/多个css属性
    Dom.prototype.css = function (key, value) {
        if (DataUtil_1.default.assertType(key, 'str')) {
            if (value) {
                this.element.style[key] = value;
                return this;
            }
            else {
                return this.element.style[key];
            }
        }
        else if (DataUtil_1.default.assertType(key, 'obj')) {
            var cssOptions = key;
            for (var cssKey in cssOptions) {
                this.element.style[cssKey] = cssOptions[cssKey];
            }
            return this;
        }
    };
    // 获取单个attribute属性或设置单个/多个attribute属性
    Dom.prototype.attribute = function (key, value) {
        if (DataUtil_1.default.assertType(key, 'str')) {
            if (value != undefined) {
                this.element[key] = value;
                return this;
            }
            else {
                return this.element[key];
            }
        }
        else if (DataUtil_1.default.assertType(key, 'obj')) {
            var attrOptions = key;
            for (var attrKey in attrOptions) {
                this.element[attrKey] = attrOptions[attrKey];
            }
            return this;
        }
    };
    // 获取或设置元素的主题
    Dom.prototype.theme = function (themeType) {
        if (themeType) {
            this.themeType && this.removeClass(this.themeType);
            this.themeType = themeType;
            this.addClass(themeType);
            return this;
        }
        else {
            return this.themeType;
        }
    };
    // 点击组件
    Dom.prototype.click = function () {
        this.element.click();
        return this;
    };
    return Dom;
}());
exports.Dom = Dom;

},{"../Common/Utils/DataUtil":52}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UIEvents;
(function (UIEvents) {
    UIEvents["ValueChanged"] = "ValueChanged";
    UIEvents["Clicked"] = "Clicked";
    UIEvents["MouseOver"] = "MouseOver";
    UIEvents["MouseOut"] = "MouseOut";
    UIEvents["CheckedChanged"] = "CheckedChanged";
    UIEvents["SelectionChanged"] = "SelectionChanged";
    UIEvents["ExpendChanged"] = "ExpendChanged";
    UIEvents["IsolateChanged"] = "IsolateChanged"; // 是否隔离
})(UIEvents || (UIEvents = {}));
exports.default = UIEvents;

},{}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Glodon_1 = require("../Common/Glodon");
var Button_1 = require("./Controls/Button/Button");
var Label_1 = require("./Controls/Label/Label");
var Link_1 = require("./Controls/Link/Link");
var Input_1 = require("./Controls/Input/Input");
var Panel_1 = require("./Controls/Panel/Panel");
var Select_1 = require("./Controls/Select/Select");
var Switch_1 = require("./Controls/Switch/Switch");
var Checkbox_1 = require("./Controls/Checkbox/Checkbox");
var Collapse_1 = require("./Controls/Collapse/Collapse");
var Radio_1 = require("./Controls/Radio/Radio");
var Slider_1 = require("./Controls/Slider/Slider");
var Tree_1 = require("./Controls/Tree/Tree");
var Toolbar_1 = require("./ControlGroups/Toolbar/Toolbar");
var Row_1 = require("./ControlGroups/Row/Row");
var RadioGroup_1 = require("./ControlGroups/RadioGroup/RadioGroup");
var PropertyPanel_1 = require("./ControlGroups/PropertyPanel/PropertyPanel");
var ControlAlignOption_1 = require("./ControlAlign/ControlAlignOption");
var ControlAnchor_1 = require("./ControlAnchor/ControlAnchor");
var WebApplicationGIS_1 = require("../Application/WebApplicationGIS/WebApplicationGIS");
var WebApplicationGISConfig_1 = require("../Application/WebApplicationGIS/WebApplicationGISConfig");
var UIEvents_1 = require("./UIEvents");
Glodon_1.default.Bimface = Glodon_1.default.Bimface || {};
Glodon_1.default.Bimface.Tiles = Glodon_1.default.Bimface.Tiles || {};
var UI = Glodon_1.default.Bimface.Tiles.UI = Glodon_1.default.Bimface.Tiles.UI || {};
UI.Button = Button_1.default;
UI.Toolbar = Toolbar_1.default;
UI.Row = Row_1.default;
UI.RadioGroup = RadioGroup_1.default;
UI.PropertyPanel = PropertyPanel_1.PropertyControl;
UI.UIEvents = UIEvents_1.default;
UI.Label = Label_1.default;
UI.Link = Link_1.default;
UI.Input = Input_1.default;
UI.Panel = Panel_1.default;
UI.Select = Select_1.default;
UI.Switch = Switch_1.default;
UI.Checkbox = Checkbox_1.default;
UI.Collapse = Collapse_1.Collapse;
UI.Radio = Radio_1.default;
UI.Slider = Slider_1.default;
UI.Tree = Tree_1.default;
UI.ControlAnchor = ControlAnchor_1.default;
UI.ControlAlignOption = ControlAlignOption_1.default;
var Application = Glodon_1.default.Bimface.Application = Glodon_1.default.Bimface.Application || {};
Application.WebApplicationGIS = WebApplicationGIS_1.default;
Application.WebApplicationGISConfig = WebApplicationGISConfig_1.WebApplicationGISConfig;
exports.default = UI;

},{"../Application/WebApplicationGIS/WebApplicationGIS":47,"../Application/WebApplicationGIS/WebApplicationGISConfig":48,"../Common/Glodon":50,"./ControlAlign/ControlAlignOption":58,"./ControlAnchor/ControlAnchor":59,"./ControlGroups/PropertyPanel/PropertyPanel":61,"./ControlGroups/RadioGroup/RadioGroup":62,"./ControlGroups/Row/Row":63,"./ControlGroups/Toolbar/Toolbar":64,"./Controls/Button/Button":65,"./Controls/Checkbox/Checkbox":67,"./Controls/Collapse/Collapse":68,"./Controls/Input/Input":69,"./Controls/Label/Label":70,"./Controls/Link/Link":71,"./Controls/Panel/Panel":72,"./Controls/Radio/Radio":73,"./Controls/Select/Select":74,"./Controls/Slider/Slider":77,"./Controls/Switch/Switch":78,"./Controls/Tree/Tree":79,"./UIEvents":82}]},{},[83])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
